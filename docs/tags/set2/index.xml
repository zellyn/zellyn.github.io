<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Set2 on Zellyn Hunter</title>
    <link>https://zellyn.com/tags/set2/</link>
    <description>Recent content in Set2 on Zellyn Hunter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 26 Feb 2022 20:21:00 -0500</lastBuildDate>
    
	<atom:link href="https://zellyn.com/tags/set2/index.xml" rel="self" type="application/rss+xml" />
    
    
    
    <item>
      <title>23 ecke - Georg Nees</title>
      <link>https://zellyn.com/2024/07/23-ecke/</link>
      <pubDate>Mon, 08 Jul 2024 21:00:00 -0400</pubDate>
      
      <guid>https://zellyn.com/2024/07/23-ecke/</guid>
      <description>&lt;p&gt;Having &lt;a href=&#34;https://zellyn.com/2024/06/schotter-2/#victory&#34;&gt;replicated&lt;/a&gt; Georg
Nees&amp;rsquo; iconic 1968/69 work, &amp;ldquo;Schotter&amp;rdquo;, I turned my attention to his
&amp;ldquo;23 ecke&amp;rdquo; (literally &amp;ldquo;23 corners&amp;rdquo;, usually referred to as &amp;ldquo;Polygons of
23 vertices&amp;rdquo;), an earlier work from 1964:&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://zellyn.com/img/2024/nees/23-ecke-rot19.png&#34; alt=&#34;An array of small, tangled shapes, fourteen across and twenty
high. The background is white, and each shape is drawn in pen by a
plotter. The shapes consist of 23 line segments, 22 of them either
vertical or horizontal, and one at some kind of
diagonal.&#34;&gt;&lt;/p&gt;
&lt;center&gt;&lt;small&gt;
&lt;p&gt;&lt;em&gt;23 ecke (&amp;ldquo;Polygon of 23 Vertices&amp;rdquo;) &amp;mdash; Georg Nees, 1964&lt;br&gt;
(Version published in&lt;/em&gt; rot 19 &lt;em&gt;in 1965)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;/small&gt;&lt;/center&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;From the 5&lt;sup&gt;th&lt;/sup&gt; to the 19&lt;sup&gt;th&lt;/sup&gt; of February, 1965, the
world&amp;rsquo;s first exhibition of digital art was staged in the
Studiengalerie of the University of Stuttgart. Georg Nees displayed a
dozen or so drawings on the walls, and in the accompanying nineteenth
edition of Max Bense&amp;rsquo;s booklet series &lt;em&gt;rot (&amp;ldquo;red&amp;rdquo;)&lt;/em&gt;, Nees provided
short descriptions in his usual clear style. &lt;em&gt;23 ecke&lt;/em&gt; was one of the
works displayed, and described in &lt;a href=&#34;https://monoskop.org/images/b/b1/Rot_19_Computer-Grafik_1968.pdf&#34;&gt;&lt;em&gt;rot
19&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My description of the 1965 show is drawn from Frieder Nake&amp;rsquo;s short
paper, &lt;em&gt;Computer Art. A Personal Recollection.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/em&gt; I recommend it: his
account of the reactions of other artists and musings on &amp;ldquo;artificial
art&amp;rdquo; (as Bense coined it) are fascinating.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The pure visual appearance of the drawings was not too exciting. One
could easily ignore them, if one wanted to. The challenge really
came from the principle that emerged. It was outrageous. It may have
appeared as if conceptual art was left way behind but, at the same
time, its idea gained a new kind of power. The schema, the
structure, the class properties of entire sets of drawings were
described and given to the machine for it to work out the
details. The individual work became part only of a generative
schema. Aesthetics was confronted by a new task, and the artist was
threatened in his or her very existence. The &lt;em&gt;individual&lt;/em&gt;
realization on the wall no longer carried the essence of art. Art
now had become the &lt;em&gt;class&lt;/em&gt; of works which the picture belonged
to. That class consisted most likely of endless chains of
variations.  &amp;mdash; Frieder Nake&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Nake refers to &amp;ldquo;issue no. 19 of the now legendary &lt;em&gt;edition rot&lt;/em&gt;&amp;rdquo;, and
indeed, the booklet series&amp;ndash;especially &lt;em&gt;rot 19&lt;/em&gt;&amp;mdash;seems to come up
often when reading about digital art. The &lt;em&gt;center of excellence
digital art&lt;/em&gt;&amp;mdash;comp&lt;strong&gt;art&lt;/strong&gt;&amp;mdash;&lt;a href=&#34;http://dada.compart-bremen.de/item/publication/362&#34;&gt;describes rot
19&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This little booklet of 14 pages is one of the first publications
ever on computer art. It appeared at the occasion of the first
exhibition of computer-generated algorithmic art world-wide: the
famous show of a small set of graphic works by Georg Nees. The show
was opened on February 4, 1965, and lasted until February 19, 1965,
on the premises of the Studiengalerie of TH Stuttgart (now
University of Stuttgart).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For more information on the &lt;em&gt;rot&lt;/em&gt; journal, ZKM has &lt;a href=&#34;https://zkm.de/en/exhibition/2024/07/reading-rot-again&#34;&gt;an
exhibit&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;first-attempt&#34;&gt;First attempt&lt;/h2&gt;
&lt;p&gt;At first I thought reproducing &lt;em&gt;23 ecke&lt;/em&gt; was going to be easy, using
the experience and resources gained reproducing &lt;em&gt;schotter&lt;/em&gt;. In
sections
&lt;a href=&#34;https://archive.org/details/generative_computergraphik/generative_computergraphik__georg_nees__1969_thesis/page/188/mode/2up&#34;&gt;3.2.2&lt;/a&gt;
and
&lt;a href=&#34;https://archive.org/details/generative_computergraphik/generative_computergraphik__georg_nees__1969_thesis/page/194/mode/2up&#34;&gt;3.2.3&lt;/a&gt;
of his 1969 thesis, Nees lists the routine, &amp;ldquo;ELIRR&amp;rdquo; (ELementaren
IRRweg &amp;mdash; &amp;ldquo;elementary random path&amp;rdquo;&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1   &amp;#39;PROCEDURE&amp;#39;ELIRR.,
2   &amp;#39;BEGIN&amp;#39;
3   JA1.=P+JLI.,JE1.=P+JRE.,
4   JA2.=Q+JUN.,JE2.=Q+JOB.,
5   P1.=J1.,Q1.=J2.,
6   LEER(P1.Q1).,
7   &amp;#39;FOR&amp;#39;M.=1&amp;#39;STEP&amp;#39;1&amp;#39;UNTIL&amp;#39;N&amp;#39;DO&amp;#39;
8   &amp;#39;IF&amp;#39;T&amp;#39;EQUAL&amp;#39;0&amp;#39;THEN&amp;#39;
9   &amp;#39;BEGIN&amp;#39;
10  LINE(J1,Y).,LINE(X,J2)
11  &amp;#39;END&amp;#39;
12  &amp;#39;ELSE&amp;#39;LINE(J1,J2).,
13  &amp;#39;IF&amp;#39;T&amp;#39;EQUAL&amp;#39;0&amp;#39;THEN&amp;#39;
14  &amp;#39;BEGIN&amp;#39;
15  LINE(P1,Y).,LINE(X,Q1)
16  &amp;#39;END&amp;#39;
17  &amp;#39;ELSE&amp;#39;LINE(P1,Q1)
18  &amp;#39;END&amp;#39;ELIRR.,
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;3.2.2.&lt;/p&gt;
&lt;p&gt;Now that we have the multi-purpose procedure The elementary random
walk SERIES, we standardize the figure-drawing procedure that has to
replace the formal parameter FIGURE in SERIE. The parameterless
procedure ELIRR draws a random walk in a frame rectangle whose
corner point coordinates match the interval limits of the random
generators J1 and J2. The random walk controlled by J1 and J2
consists of diagonal or axis-parallel sections, depending on whether
the integer and global size T agreed in line 5 of the declaration
sequence (1/3.2.1) in ELIRR has the value 1 or 0.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can transliterate this into ALGOL-ish Python:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;drawsvg&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;draw&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;draw_figures&lt;/span&gt;(QUER, HOCH, XMAL, YMAL, inset, N, S1, S2, diag&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;False&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  stroke_width&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0.3&lt;/span&gt;, svg_width&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;160&lt;/span&gt;, svg_height&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;200&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    JLI &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; inset &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    JRE &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; QUER &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; inset &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    JUN &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; inset &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    JOB &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; HOCH &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; inset &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; y &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Random(S1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Random(S2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    d &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; draw&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Drawing(svg_width, svg_height, origin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                     style&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;background-color:#eae6e2&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    g &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; draw&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Group(transform&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;rotate(180)&amp;#34;&lt;/span&gt;, stroke&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;#41403a&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   stroke_width&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;{&lt;/span&gt;stroke_width&lt;span style=&#34;color:#70a0d0&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;&lt;/span&gt;, fill&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   stroke_linecap&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;round&amp;#34;&lt;/span&gt;, stroke_linejoin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;round&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;serie&lt;/span&gt;(QUER, HOCH, XMAL, YMAL, FIGUR):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      P &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;QUER &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; XMAL &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Q &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; YANF &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;HOCH &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; YMAL &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; COUNTX &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;, XMAL&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Q &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; YANF
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; COUNTY &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;, YMAL&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          p &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; draw&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Path()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          FIGUR(P, Q, p)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          g&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;append(p)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          Q &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Q &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; HOCH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        P &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; P &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; QUER
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;elirr&lt;/span&gt;(P, Q, p):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        JA1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; P &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; JLI
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        JE1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; P &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; JRE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        JA2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Q &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; JUN
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        JE2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Q &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; JOB
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        P1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; r1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;next(JA1, JE1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Q1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; r2&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;next(JA2, JE2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;m(Q1,P1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        X, Y &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; P1, Q1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; M &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;, N&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            X &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; r1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;next(JA1, JE1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;L(Y, X)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Y &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; r2&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;next(JA2, JE2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;L(Y,X)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; diag:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;L(Q1,P1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;L(Y,P1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            X &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; P1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;L(Q1,X)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    serie(QUER, HOCH, XMAL, YMAL, elirr)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    d&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;append(g)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;svg &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; draw_figures(&lt;span style=&#34;color:#40a070&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;20&lt;/span&gt;, JS2, JS5, stroke_width&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;svg&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;set_render_size(w&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;500&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The resulting images (reproduced using seeds &lt;a href=&#34;https://archive.org/details/generative_computergraphik/generative_computergraphik__georg_nees__1969_thesis/page/122/mode/1up&#34;&gt;JS2 and
JS5&lt;/a&gt;
from the thesis) look similar to those in &amp;ldquo;23 ecke&amp;rdquo;, except that the
patterns here are a little more tangled, and lack the single diagonal
line:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zellyn.com/img/2024/nees/bild-22.png&#34; alt=&#34;An array, six across and eight high, of larger shapes. Each consists
of 40 line segments, all either horizontal or vertical, and traces out
a tangled loop.&#34;&gt; &lt;center&gt;&lt;small&gt;&lt;/p&gt;
&lt;p&gt;Bild 22 (Picture 22) &lt;em&gt;from Georg Nees&amp;rsquo; 1969 thesis&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;/small&gt;&lt;/center&gt;&lt;/p&gt;
&lt;br/&gt;
&lt;h2 id=&#34;second-attempt&#34;&gt;Second attempt&lt;/h2&gt;
&lt;p&gt;My next step was to start trying to trace out the shapes from &lt;em&gt;23 ecke&lt;/em&gt;, in an attempt to iterate through seeds and find matching shapes:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zellyn.com/img/2024/nees/23-ecke-nsew.png&#34; alt=&#34;Detail from an excalidraw image where I was trying to trace out
shapes from &amp;ldquo;23 ecke&amp;rdquo;. There are some enlarged (and thus
blurry/pixelated) shapes with little arrows adjacent to each segment,
where I was trying to guess which order and direction they were drawn
in. Orange arrows sweep over from the enlarged shapes to their
position within &amp;ldquo;23 ecke&amp;rdquo;. The shapes are numbered, and have strings
of letters like &amp;ldquo;wnesenwswneswnenws?nwnes&amp;rdquo; beside them, giving the
cardinal directions for line segment
directions.&#34;&gt;&lt;/p&gt;
&lt;p&gt;This didn&amp;rsquo;t work: the shapes were too blurry, and have too much
overlap, and despite spending a &lt;em&gt;lot&lt;/em&gt; of time on it, I never did feel
sure that I had correctly deciphered and transcribed any of them. The
long search far and wide for ever higher resolution images of &lt;em&gt;23
ecke&lt;/em&gt; was useful though: I found many of the resources mentioned
in this post.&lt;/p&gt;
&lt;p&gt;By this time, I had also noticed that the &lt;em&gt;23 ecke&lt;/em&gt; image is sometimes
shown with 14x19 shapes (as in &lt;em&gt;rot 19&lt;/em&gt;), and sometimes 14x20, and
also that its orientation is unclear: from the thesis, it seems that
Nees&amp;rsquo; plotter drew on paper in what we would consider &amp;ldquo;landscape mode&amp;rdquo;
but the work is often shown oriented vertically, so I wasn&amp;rsquo;t even sure
in which order the shapes were drawn.&lt;/p&gt;
&lt;p&gt;The missing row was explained in a paper called &lt;a href=&#34;http://www.generativeart.com/GA2019_web/22_Ga%C3%ABtan%20Robillard_Alain%20Lioret_paper_168x240.pdf&#34;&gt;&amp;ldquo;A Vision without a
Sight: From Max Bense&amp;rsquo;s Theory to the Dialectic of Programmed Images&amp;rdquo;,
by Gaëtan Robillard and Prof. Alain
Lioret&lt;/a&gt;,
from the &lt;a href=&#34;https://generativeart.com/GA2019_web/Generative%20Art%202019%20index.htm&#34;&gt;website of the XXII Generative Art Conference in
2019&lt;/a&gt;:
it turns out that Max Bense had edited the original image Nees gave
him when printing &lt;em&gt;rot 19&lt;/em&gt;, removing one row, and also Nees&amp;rsquo; name:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zellyn.com/img/2024/nees/23-ecke-rot19-draft.png&#34; alt=&#34;Detail from a photograph of the marked-up printer&amp;rsquo;s draft of &amp;ldquo;23
ecke&amp;rdquo; used in rot 19: Nees name beside the image is struck through,
and the last row if the image is x&amp;rsquo;ed out and struck through multiple
times.&#34;&gt;&lt;center&gt;&lt;small&gt;&lt;/p&gt;
&lt;p&gt;Fig2. Georg Nees, 23-Edge: detailed view from editor’s draft, Rot n°
19, 1965. From the Walther-Bense Estate archive at the Center for Art
and Media Karlsruhe (ZKM)&lt;/p&gt;
&lt;p&gt;&lt;/small&gt;&lt;/center&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I recommend reading that section of the paper, since M. Robillard&amp;rsquo;s
comments and questions about Bense&amp;rsquo;s editing of the image are
thought-provoking.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;hellip;it is remarkable that this simple gesture of framing witnesses
Bense&amp;rsquo;s relation to authorship and to the new category of programmed
images. &amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I find it significant that Bense removed the human touch, and human
attribution, of Nees&amp;rsquo; name. It seems to fit his presentation of
&amp;ldquo;artificial art&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I have emailed the curators of &lt;a href=&#34;https://zkm.de/en/elisabeth-walther-bense&#34;&gt;the Elisabeth Walther-Bense Archives
at ZKM&lt;/a&gt; seeking to get a
full image of the printer&amp;rsquo;s draft that I can post online, but haven&amp;rsquo;t
heard back yet.&lt;/p&gt;
&lt;p&gt;Luckily, searching at length for a higher-resolution image of &lt;em&gt;23
ecke&lt;/em&gt;, I looked more closely at the &lt;a href=&#34;https://archive.org/details/generative_computergraphik/generative_computergraphik__georg_nees__2006_reprint/page/XII/mode/1up&#34;&gt;(20x14)
version&lt;/a&gt;
in Nees&amp;rsquo; preface to the 2006 reprint of his thesis, and noticed that
the figure was captioned, &amp;ldquo;Abb. 4: Georg Nees: Variationen von Figuren
in der statistischen Grafik. In: Grundlagenstudien aus Kybernetik und
Geisteswissenschaft 5 (1964), H. 3/4, S. 121-125.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Happily, that 1964 publication is &lt;a href=&#34;https://archive.org/details/grkg-1960-bd.-1-h-1-h-4/1964/GRKG-1964-Bd5-H3%264/page/123/mode/2up&#34;&gt;available at
archive.org&lt;/a&gt;,
and even more happily, also &lt;a href=&#34;https://archive.org/details/grkg-1960-bd.-1-h-1-h-4/1964/GRKG-1964-Bd5-H3%264/page/122/mode/1up&#34;&gt;contains a description of the
algorithm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that rather than two separate random generators, one for the X
coordinates and one for the Y, this description uses just one. Perhaps
in 1964, Nees had not yet settled as firmly on the approach laid out
in his thesis. I now knew that I would probably need to try a few
different variations.&lt;/p&gt;
&lt;p&gt;Having failed to find the seeds by attempting to correctly annotate
movements within shapes, I decided to focus instead on the
characteristics of the diagonal lines. By happenstance, I ran across
&lt;a href=&#34;https://marimo.io/&#34;&gt;Marimo&lt;/a&gt;, a version of Python notebooks that
allows easy use of interactive widgets, and was able to whip up a
crude interface and manually classify as many of the 280 diagonals as
possible.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zellyn.com/img/2024/nees/23-ecke-classify.png&#34; alt=&#34;Image of a crude UI created in Marimo, showing two images of the
same small sub-shape from 23 ecke. To the right, they are annotated
&amp;ldquo;Comments for (17,2)&amp;rdquo; and &amp;ldquo;/ wide short up&amp;rdquo;. Above, there are sliders
for picking horizontal and vertical sub-images. Below are buttons for
moving to the previous or next sub-shape, and for marking the diagonal
as &amp;ldquo;/&amp;rdquo;, &amp;ldquo;\&amp;quot;, as well as narrow, wide, short, tall, and up or
down.&#34;&gt;&lt;/p&gt;
&lt;p&gt;Even that wasn&amp;rsquo;t quite enough. After failing to match the images with
any of the two billion available seeds, I started trying
variations. Apparently, in 1964 Nees was using random numbers modulo
2&lt;sup&gt;30&lt;/sup&gt;, rather than 2&lt;sup&gt;31&lt;/sup&gt;. Eventually, I had a hit!&lt;/p&gt;
&lt;h2 id=&#34;success&#34;&gt;Success!&lt;/h2&gt;
&lt;p&gt;And with that, we have the original image! The seed is 314,748,365,
the modulo is 2&lt;sup&gt;30&lt;/sup&gt;, and one random generator is used for
both X and Y coordinates. Otherwise the code is as described in ELIRR.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zellyn.com/img/2024/nees/23-ecke.svg&#34; alt=&#34;SVG recreation of 23 ecke, finally!&#34;&gt;&lt;center&gt;&lt;small&gt;&lt;/p&gt;
&lt;p&gt;Recreation of &lt;em&gt;23 ecke&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;/small&gt;&lt;/center&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;final-notes-a-request-and-followfriday&#34;&gt;Final notes, a request, and #followfriday&lt;/h2&gt;
&lt;h3 id=&#34;the-real-plots-are-tiny&#34;&gt;The real plots are tiny&lt;/h3&gt;
&lt;p&gt;One fascinating aspect of these images, especially &lt;em&gt;Schotter&lt;/em&gt;, is just
how &lt;em&gt;small&lt;/em&gt; they are. Accustomed as I am to seeing artwork on my
computer screen, I assumed Schotter was a foot or two wide. In fact,
the area Georg Nees had available to him on his plotter was more like
28-30cm (about a foot) on the long edge. These pictures are tiny!&lt;/p&gt;
&lt;h3 id=&#34;an-unexpected-email&#34;&gt;An unexpected email&lt;/h3&gt;
&lt;p&gt;I was delighted and surprised to receive an email from one of Georg
Nees&amp;rsquo; sons! Apparently a colleague sent him a link to my blog posts on
&lt;em&gt;Schotter&lt;/em&gt;. It was gratifying to hear that they were excited about the
reconstruction of his code and images.&lt;/p&gt;
&lt;h3 id=&#34;any-leads-on-vera-molnár-source-code&#34;&gt;Any leads on Vera Molnár source code?&lt;/h3&gt;
&lt;p&gt;Next, I want to try reproducing early images of another computer
artwork pioneer, &lt;a href=&#34;http://www.veramolnar.com/&#34;&gt;Vera Molnár&lt;/a&gt;. If anyone
has leads on source code for any of her artwork, (or lives close
enough to her estate to visit her journals) I&amp;rsquo;d love have a go at
modernizing the code and looking for seeds.&lt;/p&gt;
&lt;h3 id=&#34;random-artist-shoutout-murilo-polese&#34;&gt;Random artist shoutout: Murilo Polese&lt;/h3&gt;
&lt;p&gt;While looking for information on Vera Molnár, I ran across &lt;a href=&#34;https://murilopolese.github.io/RTP_SFPC_2021/research/W01_Vera_Molnar.html&#34;&gt;the Vera
Molnár
page&lt;/a&gt;
in the research section on the website for the &lt;a href=&#34;https://sfpc.study/projects/rtp2021&#34;&gt;Recreating the
Past&lt;/a&gt; course at the intriguing
&lt;a href=&#34;https://sfpc.study/&#34;&gt;School for Poetic Computation&lt;/a&gt; in New York City.&lt;/p&gt;
&lt;p&gt;From there, I found the recent leader of that course, Murilo Polese,
an astonishing dynamo of creative activity. If you&amp;rsquo;d like to get
inspired by a current computer art practitioner as well as by the
early artists, you could certainly lose an afternoon exploring their
many projects:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.murilopolese.com/about.html&#34;&gt;murilopolese.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gallery.bananabanana.me/&#34;&gt;bananabanana.me gallery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.bananabanana.me/&#34;&gt;bananabanana.me random toys and projects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://colorcode2.bananabanana.me/&#34;&gt;amazing color programming toy on bananabanana.me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sunbeam.city/@murilove&#34;&gt;@murilove@sunbeam.city on Mastodon&lt;/a&gt;
(fka &lt;a href=&#34;https://twitter.com/murilopolese&#34;&gt;@murilopolese on
twitter&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ciao&#34;&gt;Ciao!&lt;/h2&gt;
&lt;p&gt;That&amp;rsquo;s it for now. Please get in touch &amp;mdash;
&lt;a href=&#34;https://hachyderm.io/@zellyn&#34;&gt;@zellyn@hachyderm.io&lt;/a&gt; &amp;mdash; with any
comments, requests, or just to chat.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zellyn.com/2024/06/schotter-1/&#34;&gt;Part one: Schotter: Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zellyn.com/2024/06/schotter-2/&#34;&gt;Part two: Schotter: Investigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Part three: 23 ecke&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&amp;ldquo;Computer Art. A Personal Recollection, by Frieder Nake&amp;rdquo;
&lt;a href=&#34;https://doi.org/10.1145/1056224.1056234&#34;&gt;doi:10.1145/1056224.1056234&lt;/a&gt;
For easiest access, paste the DOI into Sci-Hub.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;The most common
&lt;a href=&#34;https://www.collinsdictionary.com/us/dictionary/german-english/irrweg&#34;&gt;translation&lt;/a&gt;
of &amp;ldquo;irrweg&amp;rdquo; appears to be the figurative &amp;ldquo;wrong path&amp;rdquo;&amp;mdash;as in being on
the wrong track, or leaving the straight and narrow&amp;mdash;or a wandering
or tortuous path. I find the idea of a computer procedure designed to
be called repeatedly in a series, named &lt;em&gt;elementary wrong path&lt;/em&gt;,
delightful.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Schotter - Georg Nees - Part 2</title>
      <link>https://zellyn.com/2024/06/schotter-2/</link>
      <pubDate>Sun, 23 Jun 2024 00:01:53 -0400</pubDate>
      
      <guid>https://zellyn.com/2024/06/schotter-2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://zellyn.com/img/2024/nees/plot-vanda.jpg&#34; alt=&#34;Schotter &amp;mdash; Georg Nees&#34;&gt;
&lt;small&gt;Source: Victoria and Albert &amp;mdash; &lt;a href=&#34;https://collections.vam.ac.uk/item/O221321/schotter-print-nees-georg/&#34;&gt;link&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;
&lt;div class=&#34;toc&#34;&gt;
  &lt;nav id=&#34;TableOfContents&#34;&gt;
  &lt;ol&gt;
    &lt;li&gt;&lt;a href=&#34;#step-one-lots-of-searching-some-asking&#34;&gt;Step one: lots of searching, some asking&lt;/a&gt;
      &lt;ol&gt;
        &lt;li&gt;&lt;a href=&#34;#an-influential-example&#34;&gt;An influential example&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#lots-of-information&#34;&gt;Lots of information&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#asking-for-help&#34;&gt;Asking for help&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#following-the-breadcrumbs-myself&#34;&gt;Following the breadcrumbs myself&lt;/a&gt;&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#jackpot-the-thesis&#34;&gt;Jackpot: The thesis&lt;/a&gt;
      &lt;ol&gt;
        &lt;li&gt;&lt;a href=&#34;#the-random-number-generators&#34;&gt;The random number generators&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#details-on-using-the-random-number-generators&#34;&gt;Details on using the random number generators&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#what-we-learned-from-the-thesis&#34;&gt;What we learned from the thesis&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#whats-missing&#34;&gt;What&amp;rsquo;s missing&amp;hellip;&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href=&#34;#trying-them-all&#34;&gt;Trying them all&lt;/a&gt;&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;a href=&#34;#victory&#34;&gt;Victory&lt;/a&gt;&lt;/li&gt;
  &lt;/ol&gt;
&lt;/nav&gt;
&lt;/div&gt;

&lt;p&gt;In &lt;a href=&#34;https://zellyn.com/2024/06/schotter-1/&#34;&gt;part 1&lt;/a&gt;, we found the original
ALGOL-60 code for &lt;em&gt;Schotter&lt;/em&gt;, and converted it to Python. Correctly
matching the style was satisfying&amp;hellip; but wouldn&amp;rsquo;t it be nice to
exactly recreate the entire original plot?&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the problem: we see references to random generators, but not
their source. From Nees&amp;rsquo; quote about the work:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From lines 9 and 10, it can be seen that the position of a single
square is influenced by random generator J1, and the angle placement
by J2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Not so satisfying.&lt;/p&gt;
&lt;h2 id=&#34;step-one-lots-of-searching-some-asking&#34;&gt;Step one: lots of searching, some asking&lt;/h2&gt;
&lt;p&gt;Schotter is an early, deservedly famous example of computer-generated
art. There are a &lt;em&gt;lot&lt;/em&gt; of references to it online, and a lot of
recreations. They vary in their fidelity to the original, but it&amp;rsquo;s
lovely to see how Nees&amp;rsquo; work from the late 1960s continually inspires
people to try generating art themselves.&lt;/p&gt;
&lt;h3 id=&#34;an-influential-example&#34;&gt;An influential example&lt;/h3&gt;
&lt;p&gt;An influential recreation seems to be
&lt;a href=&#34;https://www.artsnova.com/Nees_Schotter_Tutorial.html&#34;&gt;this well-written tutorial&lt;/a&gt;
by Jim Plaxco.&lt;/p&gt;
&lt;p&gt;It doesn&amp;rsquo;t match the actual implementation, but takes an interesting
approach: the same random value is used both to rotate the squares,
and (scaled by a factor of &lt;code&gt;0.45&lt;/code&gt; named &lt;code&gt;dampen&lt;/code&gt;) to shift them, down
and to the right.&lt;/p&gt;
&lt;p&gt;Looking for that dampening value is an easy way to identify
descendants of this tutorial. &lt;a href=&#34;https://scruss.com/blog/2019/11/25/schotter-on-a-tek-4010/&#34;&gt;Here&amp;rsquo;s a fun
version&lt;/a&gt;
by Stewart Russell, animating the drawing of the artwork on a
simulated Tektronix 4010 vector display.&lt;/p&gt;
&lt;p&gt;Jim Plaxco&amp;rsquo;s verion is the one I copied when I first tried an
implementation (in Elm). In retrospect, I&amp;rsquo;m glad that it doesn&amp;rsquo;t look
quite right&amp;mdash;the randomness doesn&amp;rsquo;t creep in fast enough, and there&amp;rsquo;s
no left-to-right increase in disorder&amp;mdash;because that drove me to dive
deeper.&lt;/p&gt;
&lt;p&gt;There are also many exaxmples where people recreated the artwork by
eyeballing it until it looked right, and many where people continue to
implement fascinating variations. In &lt;a href=&#34;https://billglover.me/2018/08/25/art-in-the-age-of-computers/&#34;&gt;this post by Bill
Glover&lt;/a&gt;,
you can see both.&lt;/p&gt;
&lt;h3 id=&#34;lots-of-information&#34;&gt;Lots of information&lt;/h3&gt;
&lt;p&gt;There are also lots of articles about Georg Nees, many of which mention &lt;em&gt;Schotter&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/the-link-art-blocks/ab-101-historical-figures-in-generative-art-georg-nees-6b006e62126a&#34;&gt;2021 Medium article by Druid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.katevassgalerie.com/blog/georg-nees-computer-art-and-graphics&#34;&gt;2020 post at the Kate Vass Galerie in Zurich&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Georg_Nees&#34;&gt;Good old Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td style=&#34;border:4px #d4ccc4 solid&#34;&gt;
I&#39;ll put a callout to &lt;a href=&#34;https://www.amygoodchild.com/blog/computer-art-50s-and-60s&#34;&gt;&#34;Early Computer Art in the 50’s &amp;
60’s&#34;&lt;/a&gt; by
Amy Goodchild here, because it&#39;s such a fantastic, beautiful article,
and because &lt;a href=&#34;https://www.amygoodchild.com/blog&#34;&gt;her blog&lt;/a&gt; is so
excellent too – I&#39;m pretty sure I&#39;m going to spend weeks or months
recreating everything she&#39;s blogged about.
&lt;/table&gt;
&lt;h3 id=&#34;asking-for-help&#34;&gt;Asking for help&lt;/h3&gt;
&lt;p&gt;I figured &lt;a href=&#34;https://ascii.textfiles.com/about&#34;&gt;Jason Scott&lt;/a&gt; and &lt;a href=&#34;https://www.savetz.com/&#34;&gt;Kay
Savetz&lt;/a&gt;, heroes of the Internet Archive and
frequent retrocomputing historians, might have ideas about how to
track down original source code, so I &lt;a href=&#34;https://hachyderm.io/@zellyn/112635691268932381&#34;&gt;asked on
Mastodon&lt;/a&gt;. They
didn&amp;rsquo;t know offhand, but did mention Paul Rickards, who has &lt;a href=&#34;https://shop.paulrickards.com/&#34;&gt;some
absolutely amazing plotter art&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;following-the-breadcrumbs-myself&#34;&gt;Following the breadcrumbs myself&lt;/h3&gt;
&lt;p&gt;Nees had an early exhibition in 1968 or so, and published a PhD thesis
in 1969, &lt;em&gt;Generative Computergraphik&lt;/em&gt;. Several of the histories
mentioned his research into randomness and random number generation,
so I figured he may have written about it in his thesis.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/Eko3316/status/1476502991003914242&#34;&gt;This twitter
post&lt;/a&gt; had a
tantalizing cover image, which could be found elsewhere with Google
Image Search
(&lt;a href=&#34;https://twitter.com/keyvass/status/1471060332617637889&#34;&gt;example&lt;/a&gt;,
&lt;a href=&#34;https://twitter.com/REAS/status/1473041398962159617&#34;&gt;example&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/REAS/status/1473041398962159617&#34;&gt;&lt;img src=&#34;https://zellyn.com/img/2024/nees/generative-computergraphik-cover-smaller.jpg&#34; alt=&#34;Schotter &amp;mdash; Georg Nees&#34; title=&#34;=350x&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;jackpot-the-thesis&#34;&gt;Jackpot: The thesis&lt;/h2&gt;
&lt;p&gt;I forget how I eventually found it, but the publisher
&lt;a href=&#34;https://www.diaphanes.net/page/about-3677&#34;&gt;Diaphenes&lt;/a&gt; in Zurich have
a &lt;a href=&#34;https://www.diaphanes.net/titel/generative-computergraphik-1948&#34;&gt;PDF of a 2006 reprint of the
thesis&lt;/a&gt;.
€30 later, I was off to the races.&lt;/p&gt;
&lt;p&gt;Excitedly, I started copy-pasting screenshots into Google
Translate. Eventually, that got tedious, and I tracked down
&lt;a href=&#34;https://ocrmypdf.readthedocs.io/en/latest/&#34;&gt;OCRmyPDF&lt;/a&gt;, which can use
Tesseract&amp;rsquo;s language packs to OCR in German. Translation is still
necessary, but it&amp;rsquo;s easier to copy and paste longer sections.&lt;/p&gt;
&lt;h3 id=&#34;the-random-number-generators&#34;&gt;The random number generators&lt;/h3&gt;
&lt;p&gt;Section 2.2.1. of Nees&amp;rsquo; thesis is titled &amp;ldquo;Random generators&amp;rdquo;, and
includes code!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2.2.1. Zufallsgeneratoren&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Das Verfahren, das wir zur Erzeugung von Zufallszahlen benutzen
werden, ist außerordentlich einfach. Ist JI die letzte aus einer
Folge bereits erzeugter Zufallszahlen, so wird JI mit der Zahl 5
multipliziert und das Ergebnis wird durch sukzessive Subtraktion
absteigender Zweierpotenzen unter eine bestimmte Zahlenschranke
herabgedrückt. Die so gewonnene Zahl setzt als neue Zufallszahl die
schon früher erzeugte Folge fort. Will man z. B. sanzzahlige
Zufallszahlen erzeugen, die kleiner als 128 sind, so kann man 127
als erste Zufallszahl wählen — oder auch als letzte Zufallszahl
einer kürzlich erzeugten Folge — und multipliziert nun 127
mit 5. Dieses ergibt 635. Nun zieht man die Zweierpotenzen 512, 256
und 128 solange schrittweise von 635 ab, bis das Ergebnis wieder
kleiner als 128 ist. Man erhält also zunächst 635 — 512 ＝ 123, was
aber bereits kleiner als 128 ist, so daß wir nichts weiter
abzuziehen brauchen. Nun haben wir bereits zwei Zufallszahlen: 127
und 123. Beim nächsten Mal erhalten wir 123 * 5 ＝ 615. Davon 512
abgezogen, ergibt 103. Wiederum beim nächsten Mal ist 103 * 5 — 512
＝ 3. Bis jetzt besitzen wir also die Zufallszahlen 127, 123,
103, 3. Von 3 x 5 ＝ 15 braucht man überhaupt nichts abzuziehen,
denn 15 ist schon kleiner als 128, also ist 15 die nächste
Zufallszahl. Auch 15 * 5 ＝ 75 ist kleiner als 128. Die Folge von
Zufallszahlen ist also jetzt angewachsen auf 127, 123, 103, 3, 15,
75.&lt;/p&gt;
&lt;p&gt;Setzt man das Verfahren fort, so ergeben sich noch einige neue
Zufallszahlen, sehr bald jedoch wird die Folge von Zufallszahlen
periodisch, wie wir später noch anschaulich machen werden. Die
Periode besteht aus genau 32 Zahlen. Man bezeichnet die Algorithmen
zur Erzeusung von Zufallszahlen als
Zufallsgeneratoren. Zufallsseneratoren von so kurzer Periode, wie
sie der vorgeführte Algorithmus besitzt, sind jedoch für unsere
Untersuchungen fast immer ungeeignet. Wir benötigen
Zufallssubstrate, die jedenfalls in dem Bereich, in dem wir sie
benutzen, außer dem reinen Zufall selbst keine Qualitäten zu den
ästhetischen Gebilden beisteuern, zu deren Genese sie herangezogen
werden. Das bedeutet praktisch nichts anderes, als daß die
Zufallsgeneratoren eine so große Periode aufweisen müssen, daß sie
sich für uns nicht bemerkbar macht. Erfreulicherweise ist das
Verfahren, mit dem wir vorhin experimentierten, dann durchaus
brauchbar, wenn wir die Zweierpotenzen 128, 256, 512 durch die
Potenzen 2 hoch 32 bis 2 hoch 34
ersetzen.IndieProgrammierspracheALGOLübersetzt,wird der
Zufallsgenerator durch die Zeilen 6 bis 15 des folgenden Programms
wiedergegeben:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2.2.1. Random generators&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The method we will use to generate random numbers is extremely
simple. If JI is the last of a sequence of random numbers already
generated, JI is multiplied by the number 5 and the result is reduced
to below a certain number limit by successive subtraction of
descending powers of two. The number obtained in this way continues
the previously generated sequence as a new random number. If, for
example, you want to generate integer random numbers that are less
than 128, you can choose 127 as the first random number - or as the
last random number in a recently generated sequence - and multiply 127
by 5. This gives 635. Now you subtract the powers of two 512, 256 and
128 step by step from 635 until the result is again less than 128. So
we first get 635 - 512 ＝ 123, which is already smaller than 128, so we
don&amp;rsquo;t need to subtract anything else. Now we already have two random
numbers: 127 and 123. The next time we get 123 * 5 ＝ 615. Subtracting
512 from this gives us 103. The next time again, 103 * 5 - 512
＝ 3. So far we have the random numbers 127, 123, 103, 3. We don&amp;rsquo;t need
to subtract anything from 3 x 5 ＝ 15, because 15 is already smaller
than 128, so 15 is the next random number. 15 * 5 ＝ 75 is also smaller
than 128. The sequence of random numbers has now grown to 127, 123,
103, 3, 15, 75.&lt;/p&gt;
&lt;p&gt;If the process is continued, a few more random numbers are produced,
but very soon the sequence of random numbers becomes periodic, as we
will show later. The period consists of exactly 32 numbers. The
algorithms for generating random numbers are called random
generators. However, random generators with such a short period as the
algorithm presented here are almost always unsuitable for our
investigations. We need random substrates which, at least in the area
in which we use them, do not contribute any qualities other than pure
randomness to the aesthetic structures for whose creation they are
used. This means practically nothing other than that the random
generators must have such a long period that we do not notice
it. Fortunately, the method we experimented with earlier is quite
useful if we replace the powers of two 128, 256, 512 with the powers 2
to the power of 32 to 2 to the power of 34. Translated into the ALGOL
programming language, the random generator is represented by lines 6
to 15 of the following program:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;BEGIN&amp;#39;&amp;#39;COMMENT&amp;#39;&lt;/span&gt;ZUFALLSFOLGE1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;INTEGER&amp;#39;&lt;/span&gt;JI,JS&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;REAL&amp;#39;&lt;/span&gt;JA,JE&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;REAL&amp;#39;&amp;#39;PROCEDURE&amp;#39;&lt;/span&gt;J&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;BEGIN&amp;#39;&amp;#39;COMMENT&amp;#39;&lt;/span&gt;ZUFALLS&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;GENERATOR J&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;7&lt;/span&gt;      Jl&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;JI,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;8&lt;/span&gt;      &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;IF&amp;#39;&lt;/span&gt;J1&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;NOTLESS&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;8589934592&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;9&lt;/span&gt;      &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;THEN&amp;#39;&lt;/span&gt;JI&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;JI&lt;span style=&#34;&#34;&gt;—&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;8589934592.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;10&lt;/span&gt;      &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;IF&amp;#39;&lt;/span&gt;JI&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;NOTLESS&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;4294967296&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;11&lt;/span&gt;      &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;THEN&amp;#39;&lt;/span&gt;JI&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;JI&lt;span style=&#34;&#34;&gt;—&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;4294967296.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;12&lt;/span&gt;      &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;IF&amp;#39;&lt;/span&gt;JI&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;NOTLESS&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;2147483648&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;13&lt;/span&gt;      &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;THEN&amp;#39;&lt;/span&gt;JI&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;JI&lt;span style=&#34;&#34;&gt;—&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;2147483648.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;14&lt;/span&gt;      J&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;JI&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;2147483648&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;(JE&lt;span style=&#34;&#34;&gt;—&lt;/span&gt;JA) &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; JA
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;END&amp;#39;&lt;/span&gt;ZUFALLSGENERATOR J&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;16&lt;/span&gt;  JS&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1306859721.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;17&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;BEGIN&amp;#39;&amp;#39;REAL&amp;#39;&lt;/span&gt;U&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;18&lt;/span&gt;  JI&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;JS&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,OPEN(&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;19&lt;/span&gt;  JA&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0.&lt;/span&gt;,JE&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;90.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;FOR&amp;#39;&lt;/span&gt;U&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;STEP&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;UNTIL&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;258&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;DO&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;BEGIN&amp;#39;&lt;/span&gt; LEER(U&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;.5&lt;/span&gt;,&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            LINE(U&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;.5&lt;/span&gt;,J)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;22&lt;/span&gt;          LEER(U&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1.5&lt;/span&gt;,J)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            LINE(U&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1.5&lt;/span&gt;,&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;23&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;END&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;, CLOSE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;24&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;END&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;25&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;END&amp;#39;&lt;/span&gt;ZUFALLSFOLGE &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;,,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;details-on-using-the-random-number-generators&#34;&gt;Details on using the random number generators&lt;/h3&gt;
&lt;p&gt;Using an example that draws butterflies, Nees describes the usage of
the generators.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;[&amp;hellip; butterfly specifics elided &amp;hellip;]&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2.2.2. Der Falterschwarm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sehr ott reicht zum Zeichnen von Zufallsgraphiken ein einzelner
Zufallsgenerator nicht aus. Der Grund dafür liegt darin, daß man
verschiedene gestaltbestimmende Parameter einer Graphik gern durch
verschiedene Zufallsgeneratoren regieren läßt, meistens benötigen die
verschiedenen Parameter sogar verschiedene Streugrenzen. Außerdem
vermindert die Verwendung von mehr als einem Zufallsgenerator die
Gefahr des Einschleichens von Periodizitäten in die Struktur der
Graphik. Wir führen deshalb eine Bezeichnungsweise ein, die es uns
erlaubt, beliebig viele Zufallsgeneratoren in unseren Programmen
aufzurufen: J1, J2, J3,&amp;hellip; bezeichnen Zufallsgeneratoren, wobei die
Vereinbarung der Prozedur Jn sich von den Zeilen 6 bis 15 des
Prosramms (1/2.2.1) nur dadurch unterscheidet, daß beziehungsweiıse
Jn, JIn, JAn, JEn an die Stelle von J, JI, JA, JE tritt. Die neuen
Zufallsgeneratoren J1, J2,&amp;hellip; betrachten wir als horizontglobale
Größen, d. h. wir rufen sie frei in den Programmen auf, sind uns
jedoch bewußt, daß die Vereinbarungen von J1, J2,&amp;hellip; am Anfang solcher
ALGOL-Programme stehen müssen, wenn sie tatsächlich in einer
Datenverarbeitungsanlage zum Laufen gebracht werden sollen.  Nun sind
wir in der Lage, die Sprache G2 zur Formulierung von zufallsbehafteten
Bildgeneratoren durch eine Reihe von horizontglobalen Größen
kennzeichnen zu können: G2 ist eine Erweiterung der Programmiersprache
ALGOL um die Prozeduren OPEN, LEER, LINE, CLOSE, J1, J2, J3,&amp;hellip;&lt;/p&gt;
&lt;p&gt;Vom mathematischen Standpunkt aus gesehen liefern die
Zufallsgeneratoren J1, J2,&amp;hellip; gleichverteilte Zufallszahlen, d.h. die
Wahrscheinlichkeit, daß ein Zufallswert in ein Teilintervall der Länge
i von JA, JE fällt, ist immer gleich i/(JE—JA), unabhängig von der
Lage des Teil-intervalls innerhalb von JA, JE.&lt;/p&gt;
&lt;p&gt;Wir kommen nun zum Thema dieses Abschnitts, nämlich zum Falterschwarm
in Bild 4. Betrachten wir die Prozedur FALTER(A,B,FAKTOR) aus
Abschnitt 2.1.6 und darüber hinaus eine reelle Hilfsgröße P und zwei
ganzzahlige Größen JS1 und JS2 als horizontglobal, so wird der
Generator des Falterschwarms ein verhältnismäßig kurzes Programm:&lt;/p&gt;
&lt;p&gt;[code elided &amp;ndash; see translation below]&lt;/p&gt;
&lt;p&gt;in Zeile 5 erhalten die Initialgrößen JI1 und JI2 der
Zufallsgeneratoren J1 und J2 die Werte von JS1 und JS2
zugewiesen. Dabei sind JS1 bis JS6 feste ganze Zahlen, die sich als
Initialwerte für Zufallsserien eignen und die wir der Bequemlichkeit
halber immer wieder in den Bildgeneratoren verwenden. Die Werte von
JS1 bis JS6 sind durch die folgenden Anweisungen gegeben.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;2.2.2. The butterfly swarm&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;A single random generator is often not sufficient for drawing random
graphics. The reason for this is that different parameters that
determine the shape of a graphic are often controlled by different
random generators; in most cases, the different parameters even
require different scatter limits. In addition, the use of more than
one random generator reduces the risk of periodicities creeping into
the structure of the graphic. We therefore introduce a notation that
allows us to call up any number of random generators in our programs:
J1, J2, J3,… denote random generators, whereby the declaration of the
procedure Jn differs from lines 6 to 15 of the program (1/2.2.1) only
in that Jn, JIn, JAn, JEn respectively take the place of J, JI, JA,
JE. We regard the new random generators J1, J2,… as horizon-global
quantities, i.e. i.e. we call them freely in the programs, but are
aware that the declarations of J1, J2,… must be at the beginning of
such ALGOL programs if they are actually to be run in a data
processing system. We are now in a position to characterize the G2
language for the formulation of random image generators by a series of
horizon-global quantities: G2 is an extension of the ALGOL programming
language by the procedures OPEN, LEER, LINE, CLOSE, J1, J2, J3,…&lt;/p&gt;
&lt;p&gt;From a mathematical point of view, the random generators J1, J2,…
provide uniformly distributed random numbers, i.e. the probability
that a random value falls into a subinterval of length i of JA, JE is
always equal to i/(JE—JA), regardless of the position of the
subinterval within JA, JE.&lt;/p&gt;
&lt;p&gt;We now come to the topic of this section, namely the butterfly swarm
in Figure 4. If we consider the procedure BUTTERFLY(A,B,FACTOR) from
Section 2.1.6 and also a real auxiliary quantity P and two integer
quantities JS1 and JS2 as horizon-global, the generator of the
butterfly swarm becomes a relatively short program:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;BEGIN&amp;#39;&amp;#39;COMMENT&amp;#39;&lt;/span&gt;FALTERSCHWARM&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;REAL&amp;#39;&lt;/span&gt;R,S&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;INTEGER&amp;#39;&lt;/span&gt;I&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;4&lt;/span&gt;  OPEN(&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt;  JI1&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;JS1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,JI2&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;JS2&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;6&lt;/span&gt;  JA1&lt;span style=&#34;color:#666&#34;&gt;.=-&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;130.&lt;/span&gt;,JE1&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;130.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;7&lt;/span&gt;  JA2&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;&#34;&gt;—&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;90.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;8&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;FOR&amp;#39;&lt;/span&gt;I&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;STEP&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;UNTIL&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;DO&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;9&lt;/span&gt;  &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;BEGIN&amp;#39;&lt;/span&gt; P&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;J1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,R&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;J1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;10&lt;/span&gt;         S&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;ABS(P&lt;span style=&#34;&#34;&gt;—&lt;/span&gt;R)&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           JE2&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;90&lt;/span&gt;&lt;span style=&#34;&#34;&gt;—&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;.3&lt;/span&gt;xS&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;11&lt;/span&gt;         FALTER(&lt;span style=&#34;color:#40a070&#34;&gt;.5&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;(P&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;R),J2,&lt;span style=&#34;color:#40a070&#34;&gt;.02&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;S)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;END&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;13&lt;/span&gt; CLOSE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;14&lt;/span&gt; END FALTERSCHWARM&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;In line 5, the initial quantities JI1 and JI2 of the random generators
J1 and J2 are assigned the values ​​of JS1 and JS2. JS1 to JS6 are fixed
integers that are suitable as initial values ​​for random series and
that we use again and again in the image generators for
convenience. The values ​​of JS1 to JS6 are given by the following
instructions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JS1&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1306859721.&lt;/span&gt;,JS2&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1485627309&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JS3&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1649173265.&lt;/span&gt;,JS4&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1805297143.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JS5&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1973195467.&lt;/span&gt;,JS6&lt;span style=&#34;color:#666&#34;&gt;.=&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;2013911545.&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;what-we-learned-from-the-thesis&#34;&gt;What we learned from the thesis&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;The random number generators are extremely simple. Each time you
want a new random number, you multiply by 5, and take the remainder
modulo \( 2^{31} \).&lt;/li&gt;
&lt;li&gt;Nees included a list of six favorite seeds that he used &amp;ldquo;again and
again&amp;rdquo; in his images.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The version of &lt;em&gt;Schotter&lt;/em&gt; included in the thesis can be exactly
recreated!&lt;/strong&gt; It uses &lt;code&gt;JS5&lt;/code&gt; (1973195467) for the x- and y-shift seed,
and &lt;code&gt;JS3&lt;/code&gt; (1649173265) for the rotation seed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;whats-missing&#34;&gt;What&amp;rsquo;s missing&amp;hellip;&lt;/h3&gt;
&lt;p&gt;We still don&amp;rsquo;t know the seeds used in the famous version displayed in
the art exhibit.&lt;/p&gt;
&lt;h3 id=&#34;trying-them-all&#34;&gt;Trying them all&lt;/h3&gt;
&lt;p&gt;Luckily, there are only about a billion possible seeds, assuming only
odd numbers. We just need something to compare against, to see whether
we got them right.&lt;/p&gt;
&lt;p&gt;By looking very carefully at the famous plot, we can mark squares
where it&amp;rsquo;s clear which direction they&amp;rsquo;ve been shifted, and which
direction they&amp;rsquo;ve been rotated.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://zellyn.com/img/2024/nees/annotated-plot.jpg&#34; alt=&#34;Famous Schotter plot, annotated with red and blue letters marking discernable left- and right-shifted squares, and left- and right-rotated squares&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pro-tip:&lt;/strong&gt; Don&amp;rsquo;t use &lt;u&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/u&gt;ight and &lt;u&gt;&lt;strong&gt;L&lt;/strong&gt;&lt;/u&gt;eft part of
the time, and &lt;u&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;/u&gt;ed and &lt;u&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/u&gt;lue part of the time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pro-tip:&lt;/strong&gt; Always check your clever techniques on the version of the
plot where you know the seeds first, to ensure you didn&amp;rsquo;t make a dumb
mistake, like writing &lt;code&gt;&amp;quot;lr.llr.lrl.l&amp;quot;&lt;/code&gt; instead of &lt;code&gt;&amp;quot;br.bbr.brb.b&amp;quot;&lt;/code&gt;
(see pro-tip 1).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pro-tip:&lt;/strong&gt; Ignoring the previous pro-tips might cause you to waste
many, many hours, thinking things like, &amp;ldquo;Maybe he used an earlier
version of his random number generator in 1968 to generate the plot,
and it differs from the 1969 version in the thesis. Let&amp;rsquo;s try all the
powers of 2 up to 32, or different multipliers than 5&amp;hellip;&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Anyway&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;victory&#34;&gt;Victory&lt;/h2&gt;
&lt;p&gt;After writing a Go program to rapidly check every possible seed, and
getting rid of the bugs, we are finally able to discover that &lt;strong&gt;the
famous plot uses (1922110153) for the x- and y-shift seed, and
(1769133315) for the rotation seed.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;And with that, we are finally able to perfectly recreate the original
plot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;math&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;drawsvg&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;draw&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;Random&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; __init__(self, seed):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;JI &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; seed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;next&lt;/span&gt;(self, JA, JE):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;JI &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;JI &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;2147483648&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; self&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;JI &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;2147483648&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; (JE&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;JA) &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; JA
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;draw_square&lt;/span&gt;(g, x, y, i, r1, r2):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1.4142&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pi &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;3.14159&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    move_limit &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; i &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;264&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    twist_limit &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; pi&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; i &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;264&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y_center &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; y &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; r1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;next(&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;move_limit, move_limit)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_center &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; x &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; r1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;next(&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;move_limit, move_limit)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    angle &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; r2&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;next(pi&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt; twist_limit, pi&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; twist_limit)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; draw&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Path()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;M(x_center &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; r &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sin(angle), y_center &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; r &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;cos(angle))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; step &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;4&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        angle &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; pi &lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;L(x_center &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; r &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sin(angle), y_center &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; r &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;cos(angle))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    g&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;append(p)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;draw_plot&lt;/span&gt;(x_size, y_size, x_count, y_count, s1, s2):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Random(s1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Random(s2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    d &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; draw&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Drawing(&lt;span style=&#34;color:#40a070&#34;&gt;180&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;280&lt;/span&gt;, origin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;, style&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;background-color:#eae6e2&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    g &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; draw&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Group(stroke&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;#41403a&amp;#39;&lt;/span&gt;, stroke_width&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;0.4&amp;#39;&lt;/span&gt;, fill&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   stroke_linecap&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;round&amp;#34;&lt;/span&gt;, stroke_linejoin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;round&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;y_size &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; y_count &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x0 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;x_size &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; x_count &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    i &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(y_count):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; x0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(x_count):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            draw_square(g, x, y, i, r1, r2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            x &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; x_size
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            i &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        y &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; y_size
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    d&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;append(g)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;
&lt;center style=&#34;background-color:black&#34;&gt;
&lt;br&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;500&#34; height=&#34;777.778&#34; style=&#34;background-color:#eae6e2&#34; viewBox=&#34;-90 -140 180 280&#34;&gt;
  &lt;g fill=&#34;none&#34; stroke=&#34;#41403a&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;.4&#34;&gt;
    &lt;path d=&#34;M-50-100v-10h-10v10h10&#34;/&gt;
    &lt;path d=&#34;m-40-99.988-.006-10-10 .005.005 10 10-.005&#34;/&gt;
    &lt;path d=&#34;m-29.995-100.063-.057-10-10 .057.057 10 10-.057m10.063.081-.068-10-10 .069.069 10 10-.07&#34;/&gt;
    &lt;path d=&#34;m-10.084-100.067.017-10-10-.017-.017 10 10 .017&#34;/&gt;
    &lt;path d=&#34;m-.14-100.04.108-9.999-10-.107-.107 9.999 10 .107&#34;/&gt;
    &lt;path d=&#34;m9.962-100.095-.07-10-10 .07.07 10 10-.07m10.03.205.01-10-10-.01-.01 10 10 .01&#34;/&gt;
    &lt;path d=&#34;m29.883-99.988.059-10-10-.059-.059 10 10 .059&#34;/&gt;
    &lt;path d=&#34;m40.032-100.254-.205-9.998-9.998.206.205 9.997 9.998-.205&#34;/&gt;
    &lt;path d=&#34;m49.94-99.983.049-10-10-.048-.05 10 10 .048&#34;/&gt;
    &lt;path d=&#34;m59.714-100.065.268-9.996-9.996-.268-.269 9.996 9.997.268M-50.028-89.894l.035-10-10-.034-.035 10 10 .034m10.138-.071.188-9.998-9.999-.187-.187 9.998 9.998.187m10.012.095.176-9.999-9.998-.176-.176 9.998 9.998.176&#34;/&gt;
    &lt;path d=&#34;m-20.062-89.982.05-10-10-.05-.05 10 10 .05m10.154-.082.269-9.996-9.996-.27-.27 9.997 9.997.269&#34;/&gt;
    &lt;path d=&#34;m.054-89.871.417-9.992-9.992-.417-.417 9.992 9.992.417&#34;/&gt;
    &lt;path d=&#34;m10.204-89.92.065-10-10-.065-.065 10 10 .065&#34;/&gt;
    &lt;path d=&#34;m19.588-90.02.347-9.994-9.993-.347-.348 9.993 9.994.348&#34;/&gt;
    &lt;path d=&#34;m30.144-90.006-.552-9.984-9.985.552.553 9.985 9.984-.553&#34;/&gt;
    &lt;path d=&#34;m40.12-90.062-.402-9.992-9.992.403.403 9.992 9.992-.403&#34;/&gt;
    &lt;path d=&#34;m49.403-90.155.506-9.987-9.987-.505-.506 9.987 9.987.505&#34;/&gt;
    &lt;path d=&#34;m59.937-90.07-.094-9.999-10 .094.095 10 10-.094M-49.889-79.914l-.491-9.988-9.988.492.491 9.987 9.988-.49m10.117.393.415-9.99-9.991-.416-.415 9.992 9.991.415&#34;/&gt;
    &lt;path d=&#34;m-30.693-79.386.61-9.981-9.98-.61-.612 9.98 9.982.611m11.113-.554-.04-10-10 .04.04 10 10-.04&#34;/&gt;
    &lt;path d=&#34;m-10.152-80.156-.207-9.997-9.998.207.207 9.997 9.998-.207m9.815.252.653-9.979-9.979-.652-.653 9.978 9.979.653&#34;/&gt;
    &lt;path d=&#34;m10.096-80.097-.192-9.998-9.998.192.192 9.998 9.998-.192&#34;/&gt;
    &lt;path d=&#34;m19.574-79.588.853-9.964-9.963-.852-.853 9.963 9.963.853m10.607-.024.599-9.982-9.982-.598-.599 9.982 9.982.598&#34;/&gt;
    &lt;path d=&#34;m40.523-80.412-.837-9.965-9.965.838.838 9.965 9.964-.838m10.184.902-.274-9.996-9.996.274.274 9.996 9.996-.273&#34;/&gt;
    &lt;path d=&#34;m59.782-79.384.672-9.978-9.977-.672-.673 9.977 9.978.673m-108.794 9.62-.823-9.966-9.966.823.823 9.966 9.966-.823&#34;/&gt;
    &lt;path d=&#34;m-40.24-69.667.168-9.999-9.998-.168-.17 9.998 10 .169m10.113.722.866-9.962-9.962-.867-.866 9.963 9.962.866&#34;/&gt;
    &lt;path d=&#34;m-20.436-69.907-.191-9.998-9.998.19.19 9.999 9.999-.191m10.926-.298-.978-9.952-9.952.978.978 9.952 9.952-.978m10.214.26-.142-9.999-9.999.142.142 9.999 9.999-.142&#34;/&gt;
    &lt;path d=&#34;m10.663-70.313-.726-9.974-9.973.725.725 9.974 9.974-.725&#34;/&gt;
    &lt;path d=&#34;m20.417-70.636-1.154-9.933-9.933 1.154 1.154 9.933 9.933-1.154m10.01-.365-.684-9.977-9.977.684.685 9.977 9.976-.684m10.735 1.067L40.34-79.9l-9.966.823.822 9.966 9.966-.823&#34;/&gt;
    &lt;path d=&#34;m49.79-68.969 1.26-9.92-9.92-1.261-1.26 9.92 9.92 1.261&#34;/&gt;
    &lt;path d=&#34;m58.833-69.017.866-9.962-9.963-.866-.865 9.963 9.962.865m-108.31 8.319-1.283-9.918-9.918 1.283 1.284 9.918 9.917-1.283&#34;/&gt;
    &lt;path d=&#34;m-39.766-60.777-.737-9.973-9.972.736.736 9.973 9.973-.736m10.848-.247-.784-9.97-9.97.785.785 9.97 9.97-.785&#34;/&gt;
    &lt;path d=&#34;m-18.934-60.773-.969-9.953-9.953.968.969 9.953 9.953-.968&#34;/&gt;
    &lt;path d=&#34;m-10.992-60.274 1.239-9.922-9.923-1.24-1.24 9.923 9.924 1.24&#34;/&gt;
    &lt;path d=&#34;m-.495-59.682.025-10-10-.026-.025 10 10 .026m10.415-.667.128-9.999-9.999-.128-.128 10 9.999.127&#34;/&gt;
    &lt;path d=&#34;m19.267-59.764.652-9.978-9.978-.653-.653 9.979 9.98.652m11.26-.136-.01-10-10 .01.01 10 10-.01&#34;/&gt;
    &lt;path d=&#34;m40.379-59.522-.05-10-10 .05.05 10 10-.05&#34;/&gt;
    &lt;path d=&#34;m50.348-60.523-.253-9.997-9.997.253.253 9.997 9.997-.253&#34;/&gt;
    &lt;path d=&#34;M59.569-61.783 58.286-71.7l-9.917 1.283L49.65-60.5l9.918-1.283M-49.255-50.408l.599-9.982-9.982-.599-.6 9.982 9.983.6&#34;/&gt;
    &lt;path d=&#34;m-40.672-49.566-.582-9.983-9.983.582.582 9.983 9.983-.582&#34;/&gt;
    &lt;path d=&#34;m-31.151-49.804.729-9.973-9.974-.729-.728 9.974 9.973.728&#34;/&gt;
    &lt;path d=&#34;m-20.536-49.179-.043-10-10 .044.043 10 10-.044M-9.5-50.518l-.221-9.998-9.998.22.221 9.998 9.998-.22&#34;/&gt;
    &lt;path d=&#34;m.592-51.07-1.12-9.938-9.936 1.12 1.119 9.937 9.937-1.12&#34;/&gt;
    &lt;path d=&#34;m9.92-50.634-1.759-9.844-9.844 1.76 1.76 9.843 9.843-1.759m11.03.711-1.001-9.95-9.95 1.001 1.002 9.95 9.95-1.001&#34;/&gt;
    &lt;path d=&#34;m29.66-50.716-1.044-9.945-9.945 1.043 1.043 9.945 9.945-1.043m10.634 1.076L39.1-59.57l-9.928 1.193 1.193 9.929 9.928-1.193m11.731-.099-1.889-9.82-9.82 1.89 1.89 9.82 9.82-1.89&#34;/&gt;
    &lt;path d=&#34;m60.638-50.076-1.188-9.929-9.93 1.188 1.189 9.93 9.929-1.189m-110.563 9.529-1.744-9.847-9.847 1.744 1.744 9.847 9.847-1.744m11.12-.442-.201-9.998-9.998.202.201 9.998 9.998-.202&#34;/&gt;
    &lt;path d=&#34;m-29.778-40.588-1.02-9.948-9.947 1.02 1.02 9.947 9.947-1.019&#34;/&gt;
    &lt;path d=&#34;m-20.601-41.693-.71-9.975-9.976.71.711 9.976 9.975-.711&#34;/&gt;
    &lt;path d=&#34;m-11.36-38.588.917-9.957-9.958-.917-.917 9.958 9.958.917m12.356-.007.067-10-10-.067-.066 10 10 .067&#34;/&gt;
    &lt;path d=&#34;m9.323-40.525.34-9.994-9.995-.34-.34 9.994 9.995.34&#34;/&gt;
    &lt;path d=&#34;m18.264-38.78 1.712-9.853-9.852-1.712-1.712 9.852 9.852 1.712m12.923-2.692-.808-9.967-9.967.808.808 9.968 9.967-.809&#34;/&gt;
    &lt;path d=&#34;m38.387-38.673.722-9.973-9.973-.722-.722 9.973 9.973.722m11.9-2.03L49.07-50.63l-9.925 1.219 1.218 9.925 9.925-1.218&#34;/&gt;
    &lt;path d=&#34;m59.67-42.099-1.24-9.922-9.923 1.24 1.24 9.923 9.923-1.24m-109.855 9.981-1.29-9.917-9.916 1.29 1.29 9.917 9.916-1.29&#34;/&gt;
    &lt;path d=&#34;m-39.927-31.563-1.482-9.89-9.89 1.483 1.483 9.89 9.89-1.483m11.767.382-2.39-9.71-9.71 2.389 2.39 9.71 9.71-2.39&#34;/&gt;
    &lt;path d=&#34;m-18.928-30.3-1.842-9.829-9.828 1.842 1.841 9.829 9.829-1.842&#34;/&gt;
    &lt;path d=&#34;m-11.263-28.282 1.103-9.939-9.94-1.103-1.102 9.94 9.94 1.102&#34;/&gt;
    &lt;path d=&#34;m-.51-29.929.292-9.995-9.996-.292-.292 9.995 9.996.292m10.793 2.188 1.47-9.891-9.891-1.47-1.47 9.89 9.89 1.471&#34;/&gt;
    &lt;path d=&#34;m18.41-30.56 2.032-9.792-9.791-2.033-2.033 9.791 9.791 2.033&#34;/&gt;
    &lt;path d=&#34;m28.872-29.199-.6-9.982-9.982.6.6 9.982 9.982-.6&#34;/&gt;
    &lt;path d=&#34;m37.97-29.047 2.473-9.69-9.69-2.471-2.472 9.689 9.69 2.472m12.944.049 1.435-9.896-9.897-1.435-1.434 9.897 9.896 1.434&#34;/&gt;
    &lt;path d=&#34;m58.5-27.945 1.614-9.868-9.869-1.615-1.614 9.87 9.869 1.613M-52.69-18.46l2.454-9.695-9.694-2.454-2.454 9.695 9.695 2.453m12.163-.341.98-9.951-9.952-.98-.98 9.951 9.952.98&#34;/&gt;
    &lt;path d=&#34;m-29.88-20.514-.871-9.962-9.962.87.87 9.963 9.962-.87&#34;/&gt;
    &lt;path d=&#34;m-20.802-20.815 1.483-9.89-9.89-1.482-1.482 9.89 9.89 1.482&#34;/&gt;
    &lt;path d=&#34;m-10.972-19.309 1.558-9.877-9.878-1.558-1.558 9.877 9.878 1.559m10.432-.509 1.88-9.821-9.822-1.88-1.88 9.822 9.822 1.88&#34;/&gt;
    &lt;path d=&#34;M11.86-22.843 9.3-32.51l-9.666 2.561 2.56 9.667 9.667-2.561&#34;/&gt;
    &lt;path d=&#34;m19.746-20.555-.817-9.966-9.967.817.818 9.967 9.966-.818&#34;/&gt;
    &lt;path d=&#34;m28.332-18.404 2.043-9.79-9.79-2.042-2.042 9.789 9.789 2.043&#34;/&gt;
    &lt;path d=&#34;m39.21-19.912-2.094-9.778-9.778 2.094 2.094 9.778 9.778-2.094m10.33.111 1.95-9.808-9.807-1.951-1.951 9.807 9.807 1.952&#34;/&gt;
    &lt;path d=&#34;m60.404-22.558-2.783-9.605-9.605 2.784 2.783 9.605 9.605-2.784M-48.838-10.634l-1.38-9.904-9.904 1.38 1.38 9.904 9.904-1.38&#34;/&gt;
    &lt;path d=&#34;m-39.02-11.76-.5-9.988-9.987.5.5 9.988 9.987-.5m12.029-.097-2.498-9.683-9.683 2.498 2.498 9.683 9.683-2.498&#34;/&gt;
    &lt;path d=&#34;m-22.295-8.499.472-9.988-9.99-.472-.471 9.988 9.989.472m10.075-2.339 2.36-9.718-9.718-2.36-2.36 9.718 9.718 2.36&#34;/&gt;
    &lt;path d=&#34;m-.61-11.018-1.425-9.898-9.898 1.425 1.424 9.898 9.898-1.425&#34;/&gt;
    &lt;path d=&#34;m8.36-12.315-.427-9.99-9.99.426.425 9.99 9.991-.426m13.873.517-2.135-9.77-9.77 2.135 2.135 9.77 9.77-2.135&#34;/&gt;
    &lt;path d=&#34;m29.84-6.7 2.912-9.567-9.566-2.912-2.912 9.566L29.84-6.7&#34;/&gt;
    &lt;path d=&#34;m37.753-10.769.976-9.952-9.952-.977-.976 9.952 9.952.977m14.13-.186-2.074-9.782-9.782 2.073L42.1-8.88l9.783-2.074&#34;/&gt;
    &lt;path d=&#34;m62.93-11.68-3.385-9.41-9.41 3.383 3.384 9.41 9.41-3.383M-46.44-3.145l-3.075-9.515-9.515 3.074 3.074 9.516 9.515-3.075&#34;/&gt;
    &lt;path d=&#34;m-37.285 1.528-1.352-9.908-9.908 1.352 1.352 9.908 9.908-1.352&#34;/&gt;
    &lt;path d=&#34;m-28.496 1.474.42-9.991-9.991-.42-.42 9.99 9.99.42&#34;/&gt;
    &lt;path d=&#34;m-19.787.284 2.104-9.777-9.776-2.103-2.104 9.776 9.776 2.104m9.725 3.314 3.246-9.459-9.458-3.246L-19.52.35l9.458 3.247&#34;/&gt;
    &lt;path d=&#34;m-2.15.575 1.781-9.84-9.84-1.781-1.78 9.84 9.84 1.78&#34;/&gt;
    &lt;path d=&#34;m8.108-.468 1.52-9.884-9.884-1.519-1.52 9.884 9.884 1.52M21.73-.538l.13-9.999-9.998-.13L11.73-.67l9.999.131&#34;/&gt;
    &lt;path d=&#34;m31.272-.329.66-9.978-9.979-.659-.659 9.978 9.978.66&#34;/&gt;
    &lt;path d=&#34;m39.635-.29 3.262-9.452-9.453-3.262-3.262 9.453L39.635-.29&#34;/&gt;
    &lt;path d=&#34;m48.726-1.495 1.27-9.919-9.919-1.27-1.27 9.92 9.92 1.269&#34;/&gt;
    &lt;path d=&#34;m60.45 1.212-1.374-9.905-9.905 1.375 1.374 9.905 9.905-1.375M-50.246 9.477l.905-9.958-9.959-.906-.905 9.96 9.959.904&#34;/&gt;
    &lt;path d=&#34;m-37.96 9.223-3.285-9.445-9.445 3.284 3.284 9.445 9.446-3.284m10.168-1.375-.91-9.958-9.959.91.91 9.959 9.959-.91&#34;/&gt;
    &lt;path d=&#34;m-23.33 10.1 3.37-9.415-9.414-3.371-3.371 9.414 9.414 3.372m14.734-1.224 1.136-9.935-9.935-1.137-1.136 9.935 9.935 1.137&#34;/&gt;
    &lt;path d=&#34;m-.392 8.37-2.392-9.71-9.71 2.393 2.393 9.71 9.71-2.393m12.196-2.722L7.95-3.579-1.277.276l3.855 9.227 9.227-3.855&#34;/&gt;
    &lt;path d=&#34;m22.768 9.384-3.325-9.43-9.43 3.324 3.323 9.43 9.432-3.324&#34;/&gt;
    &lt;path d=&#34;m28.074 11.489-.407-9.992-9.991.407.406 9.991 9.992-.406m12.736-2.63L38.778-.932 28.987 1.1l2.033 9.79 9.79-2.032&#34;/&gt;
    &lt;path d=&#34;m48.283 8.477-1.85-9.827L36.604.5l1.851 9.828 9.827-1.851m12.788-.965-.867-9.962-9.962.866.866 9.963 9.962-.867M-52.352 19.447l4.078-9.13-9.13-4.079-4.078 9.13 9.13 4.08&#34;/&gt;
    &lt;path d=&#34;m-44.696 22.139 3.8-9.25-9.25-3.8-3.8 9.25 9.25 3.8m13.346-2.279 2.226-9.75-9.75-2.226-2.226 9.749 9.75 2.226m12.673.679 2.53-9.675-9.676-2.528-2.529 9.674 9.675 2.53&#34;/&gt;
    &lt;path d=&#34;m-10.43 24.202 3.953-9.185-9.186-3.953-3.953 9.185 9.186 3.953&#34;/&gt;
    &lt;path d=&#34;m-3.163 19.706 2.693-9.63-9.63-2.693-2.693 9.63 9.63 2.693&#34;/&gt;
    &lt;path d=&#34;m10.289 15.043-4.01-9.16-9.161 4.01 4.01 9.16 9.16-4.01m12.58 2.571-2.765-9.61-9.61 2.766 2.766 9.61 9.61-2.766&#34;/&gt;
    &lt;path d=&#34;m29.662 24.25 3.88-9.216-9.217-3.88-3.88 9.216 9.217 3.88&#34;/&gt;
    &lt;path d=&#34;m37 19.275 1.838-9.83-9.83-1.837-1.837 9.83L37 19.275m15.21 2.415.136-9.999-10-.136-.135 9.999 9.999.136&#34;/&gt;
    &lt;path d=&#34;m58.26 20.054.685-9.977-9.977-.685-.685 9.976 9.976.686M-51.41 30.33l3.383-9.41-9.411-3.383-3.382 9.41 9.41 3.383m14.628 1.867-1.317-9.913-9.913 1.318 1.318 9.912 9.912-1.317&#34;/&gt;
    &lt;path d=&#34;m-31.885 32.3 2.718-9.623-9.623-2.718-2.719 9.623 9.624 2.718&#34;/&gt;
    &lt;path d=&#34;m-25.074 29.952 4.251-9.051-9.051-4.251-4.251 9.05 9.051 4.252m11.713.994 3.005-9.538-9.538-3.005-3.005 9.538 9.538 3.005M3.24 25.695-.471 16.41l-9.285 3.713 3.713 9.285 9.285-3.713&#34;/&gt;
    &lt;path d=&#34;m10.79 32.696.14-10-10-.138-.138 9.999 9.999.139&#34;/&gt;
    &lt;path d=&#34;m16.59 28.493.7-9.976-9.976-.699-.7 9.976 9.976.699&#34;/&gt;
    &lt;path d=&#34;m25.85 28.509 3.448-9.387-9.387-3.448-3.448 9.387 9.387 3.448m17.959 2.28-1.915-9.815-9.815 1.915 1.915 9.815 9.815-1.915&#34;/&gt;
    &lt;path d=&#34;m48.501 32.326.185-9.999-9.998-.184-.185 9.998 9.998.185m13.621-2.627.928-9.957-9.956-.928-.929 9.957 9.957.928m-112.96 12.408 4.507-8.927-8.927-4.506-4.507 8.927 8.927 4.506&#34;/&gt;
    &lt;path d=&#34;m-44.076 38.397 3.337-9.426-9.426-3.338-3.337 9.427 9.426 3.337&#34;/&gt;
    &lt;path d=&#34;m-30.517 40.44-3.067-9.519-9.518 3.067 3.067 9.518 9.518-3.067m7.562-1.348 4.503-8.928-8.928-4.503-4.504 8.928 8.929 4.503m13.536 1.328 2.979-9.546-9.546-2.979-2.979 9.546 9.546 2.979&#34;/&gt;
    &lt;path d=&#34;M-4.162 40.216.56 31.4l-8.815-4.722-4.722 8.816 8.815 4.721m14.373 1.857 3.915-9.202-9.202-3.915-3.915 9.202 9.202 3.915&#34;/&gt;
    &lt;path d=&#34;m18.556 39.344-.6-9.982-9.981.6.6 9.982 9.981-.6m15.762-3.11-2.97-9.549-9.549 2.971 2.97 9.549 9.55-2.971&#34;/&gt;
    &lt;path d=&#34;m44.86 39.207-4.473-8.944-8.944 4.472 4.472 8.944 8.944-4.472&#34;/&gt;
    &lt;path d=&#34;m49.257 41.188-2.117-9.774-9.773 2.117 2.116 9.773 9.774-2.116&#34;/&gt;
    &lt;path d=&#34;m58.276 38.255-.074-10-10 .074.074 10 10-.074m-111.456 9.52-.371-9.993-9.993.37.37 9.994 9.993-.37m11.768-1.983-1.853-9.826-9.827 1.853 1.853 9.827 9.827-1.853m9.149 7.339 1.45-9.894-9.893-1.45-1.45 9.893 9.893 1.45&#34;/&gt;
    &lt;path d=&#34;m-21.249 47.401-3.494-9.37-9.37 3.496 3.495 9.369 9.37-3.495M-9.993 52l3.845-9.23-9.231-3.845-3.845 9.23 9.23 3.846&#34;/&gt;
    &lt;path d=&#34;M3.06 46.42.902 36.657l-9.765 2.157 2.157 9.764 9.764-2.156m10.309 7.153.14-9.999-9.999-.14-.14 10 10 .14&#34;/&gt;
    &lt;path d=&#34;m21.04 53.453.704-9.975-9.975-.703-.704 9.975 9.975.703&#34;/&gt;
    &lt;path d=&#34;m27.654 51.362 3.465-9.38-9.38-3.465-3.465 9.38 9.38 3.465&#34;/&gt;
    &lt;path d=&#34;m41.25 45.662-4.535-8.912-8.912 4.535 4.534 8.912 8.913-4.535m11.737 1.407-1.047-9.945-9.945 1.046 1.047 9.945 9.945-1.046&#34;/&gt;
    &lt;path d=&#34;m59.327 44.859-5.029-8.644-8.643 5.028 5.028 8.644 8.644-5.028M-46.16 59.829l-3.555-9.347-9.346 3.554 3.554 9.347 9.347-3.554&#34;/&gt;
    &lt;path d=&#34;m-41.252 59.11 4.531-8.915-8.914-4.53-4.531 8.914 8.914 4.53&#34;/&gt;
    &lt;path d=&#34;m-27.911 60.74.547-9.985-9.985-.547-.547 9.985 9.985.547&#34;/&gt;
    &lt;path d=&#34;m-21.089 58.307 2.716-9.624-9.624-2.716-2.716 9.624 9.624 2.716&#34;/&gt;
    &lt;path d=&#34;m-14.547 63.254 2.146-9.767-9.767-2.145-2.146 9.767 9.767 2.145m12.669-5.648-.853-9.964-9.963.853.853 9.964 9.963-.853m16.068 3.372-4.161-9.093-9.093 4.162 4.162 9.093 9.093-4.162&#34;/&gt;
    &lt;path d=&#34;m15.408 58.741 2.093-9.778-9.778-2.093-2.093 9.778 9.778 2.093&#34;/&gt;
    &lt;path d=&#34;m27.641 57.2-1.3-9.916-9.915 1.3 1.3 9.915 9.915-1.3m10.677 4.983 5.15-8.572-8.573-5.15-5.15 8.573 8.573 5.149&#34;/&gt;
    &lt;path d=&#34;m50.311 61.72 3.09-9.51-9.51-3.09-3.09 9.51 9.51 3.09&#34;/&gt;
    &lt;path d=&#34;m56.811 64.34 3.625-9.32-9.32-3.624-3.625 9.32 9.32 3.625m-107.776 4.731-5.345-8.452-8.451 5.345 5.345 8.452 8.451-5.345&#34;/&gt;
    &lt;path d=&#34;m-40.507 68.842-3.838-9.234-9.234 3.838 3.838 9.234 9.234-3.838m10.977.422 4.548-8.906-8.906-4.548-4.548 8.906 8.906 4.548&#34;/&gt;
    &lt;path d=&#34;m-23.145 70.378-.909-9.959-9.958.908.908 9.959 9.959-.908&#34;/&gt;
    &lt;path d=&#34;m-11.54 65.058-4.413-8.974-8.974 4.413 4.413 8.974 8.974-4.413&#34;/&gt;
    &lt;path d=&#34;m-3.098 70.446 1.897-9.818-9.818-1.898-1.898 9.819 9.819 1.897m18.286-4.476-2.864-9.581-9.581 2.864 2.864 9.58 9.58-2.863&#34;/&gt;
    &lt;path d=&#34;m24.604 72.821-2.023-9.793-9.793 2.023 2.023 9.793 9.793-2.023&#34;/&gt;
    &lt;path d=&#34;m25.16 73.546 2.36-9.717-9.72-2.359-2.358 9.718 9.718 2.358m15.545-5.456-.713-9.975-9.975.713.713 9.974 9.975-.713&#34;/&gt;
    &lt;path d=&#34;m52.402 69.742-3.509-9.364-9.364 3.508 3.509 9.365 9.364-3.509&#34;/&gt;
    &lt;path d=&#34;m61.646 63.55-4.981-8.67-8.671 4.982 4.982 8.67 8.67-4.981M-46.098 78.844l-.492-9.988-9.987.492.492 9.988 9.987-.492&#34;/&gt;
    &lt;path d=&#34;m-37.356 80.583-2.448-9.696-9.696 2.447 2.448 9.696 9.696-2.447&#34;/&gt;
    &lt;path d=&#34;m-32.09 79.906.55-9.984-9.984-.551-.551 9.984 9.985.551&#34;/&gt;
    &lt;path d=&#34;m-25.468 80.394 2.732-9.62-9.619-2.732-2.733 9.619 9.62 2.733m16.81-2.984.812-9.968-9.966-.812-.813 9.967 9.967.812&#34;/&gt;
    &lt;path d=&#34;m.063 82.067 3.973-9.177-9.177-3.973-3.973 9.177 9.177 3.973&#34;/&gt;
    &lt;path d=&#34;m14.877 80.328-5.56-8.312-8.311 5.56 5.56 8.312 8.311-5.56&#34;/&gt;
    &lt;path d=&#34;M19.122 76.132 16.095 66.6l-9.53 3.026 3.026 9.53 9.53-3.025&#34;/&gt;
    &lt;path d=&#34;m27.68 76.491-2.098-9.777-9.777 2.098 2.097 9.777 9.778-2.098m14.183 5.372 2.739-9.618-9.618-2.738-2.739 9.617 9.618 2.739&#34;/&gt;
    &lt;path d=&#34;m50.114 80.309.485-9.988-9.989-.485-.484 9.988 9.988.485&#34;/&gt;
    &lt;path d=&#34;m59.148 82.877 2.41-9.705-9.705-2.41-2.41 9.705 9.705 2.41m-104.6 8.92-1.34-9.91-9.91 1.34 1.34 9.91 9.91-1.34&#34;/&gt;
    &lt;path d=&#34;m-34.88 88.135-6.246-7.81-7.81 6.247 6.247 7.809 7.809-6.246&#34;/&gt;
    &lt;path d=&#34;m-28.756 84.054-6.058-7.956-7.956 6.058 6.058 7.956 7.956-6.058&#34;/&gt;
    &lt;path d=&#34;m-19.828 83.03-4.962-8.682-8.682 4.962 4.962 8.682 8.682-4.962m11.519 8.179 1.53-9.883-9.883-1.529-1.53 9.882 9.883 1.53&#34;/&gt;
    &lt;path d=&#34;m3.323 89.997-5.773-8.165-8.165 5.773 5.772 8.165 8.166-5.773&#34;/&gt;
    &lt;path d=&#34;M9.807 86.198 6.8 76.662l-9.537 3.008L.27 89.207l9.537-3.008&#34;/&gt;
    &lt;path d=&#34;m19.447 90.819-1.356-9.907-9.908 1.356 1.356 9.907 9.908-1.356&#34;/&gt;
    &lt;path d=&#34;m29.102 88.712-6.312-7.757-7.756 6.312 6.311 7.756 7.757-6.311&#34;/&gt;
    &lt;path d=&#34;m40.162 89.469-5.724-8.2-8.2 5.724 5.724 8.2 8.2-5.724m10.735-.747L48.64 78.98l-9.742 2.257 2.257 9.742 9.742-2.257&#34;/&gt;
    &lt;path d=&#34;m55.863 90.669 2.751-9.614L49 78.304l-2.751 9.614 9.614 2.75M-50.705 96.05l-.286-9.996-9.996.285.286 9.996 9.996-.285&#34;/&gt;
    &lt;path d=&#34;m-42.315 94.987-1.429-9.897-9.897 1.428 1.428 9.898 9.898-1.429m12.937 3.858-6.59-7.52-7.521 6.59 6.59 7.52 7.521-6.59m12.265-1.385-6.604-7.51-7.51 6.604 6.604 7.51 7.51-6.604&#34;/&gt;
    &lt;path d=&#34;m-5.584 99.647-6.577-7.533-7.533 6.577 6.577 7.533 7.533-6.577&#34;/&gt;
    &lt;path d=&#34;m5.617 98.26-6.35-7.725-7.725 6.349 6.35 7.725 7.725-6.35&#34;/&gt;
    &lt;path d=&#34;M8.506 96.145 3.48 87.499l-8.646 5.024 5.025 8.646 8.646-5.024m10.447 7.095 2.921-9.563-9.563-2.922-2.922 9.563 9.563 2.922&#34;/&gt;
    &lt;path d=&#34;m26.98 103.231.13-9.999-10-.13-.13 9.999 10 .13m13.96 1.113.654-9.978-9.979-.654-.653 9.979 9.979.653M51.79 98.29l3.223-9.466-9.467-3.223-3.222 9.467 9.466 3.222&#34;/&gt;
    &lt;path d=&#34;m56.172 100.106 1.531-9.882-9.882-1.531-1.53 9.882 9.881 1.53m-103.13 9.316-6.653-7.466-7.466 6.653 6.653 7.466 7.466-6.653&#34;/&gt;
    &lt;path d=&#34;m-42.094 101.35-5.997-8.002-8.002 5.997 5.997 8.003 8.002-5.997m16.106 6.216-2.044-9.788-9.789 2.043 2.044 9.79 9.789-2.045&#34;/&gt;
    &lt;path d=&#34;m-22.481 107.973 4.653-8.852-8.851-4.653-4.654 8.851 8.851 4.654m15.289.321-5.783-8.158-8.158 5.784 5.783 8.157 8.158-5.783&#34;/&gt;
    &lt;path d=&#34;m1.709 114.009-.374-9.993-9.993.373.374 9.993 9.993-.373&#34;/&gt;
    &lt;path d=&#34;m10.034 106.863-1.866-9.825-9.824 1.866 1.865 9.824 9.825-1.865&#34;/&gt;
    &lt;path d=&#34;m15.572 107.877 5.64-8.258-8.259-5.64-5.64 8.259 8.259 5.639&#34;/&gt;
    &lt;path d=&#34;m31.602 105.846-.867-9.962-9.962.866.866 9.962 9.963-.866&#34;/&gt;
    &lt;path d=&#34;m41.783 103.498-4.217-9.067-9.068 4.218 4.218 9.067 9.067-4.217m13.729 3.328-5.86-8.103-8.103 5.861 5.86 8.103 8.103-5.861&#34;/&gt;
    &lt;path d=&#34;m59.003 107.727-.134-9.999-9.999.135.134 9.999 10-.135&#34;/&gt;
  &lt;/g&gt;
&lt;/svg&gt;
&lt;br&gt;
&lt;br&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;p&gt;Sometimes it&amp;rsquo;s fun to pick a rabbit hole and follow it &lt;em&gt;all&lt;/em&gt; the way
down.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zellyn.com/2024/06/schotter-1/&#34;&gt;Part one: Schotter: Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Part two: Schotter: Investigation&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zellyn.com/2024/07/23-ecke/&#34;&gt;Part three: 23 ecke&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Schotter - Georg Nees - Part 1</title>
      <link>https://zellyn.com/2024/06/schotter-1/</link>
      <pubDate>Mon, 17 Jun 2024 22:11:00 -0400</pubDate>
      
      <guid>https://zellyn.com/2024/06/schotter-1/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://collections.vam.ac.uk/item/O221321/schotter-print-nees-georg&#34;&gt;&lt;img src=&#34;https://zellyn.com/img/2024/nees/plot-vanda.jpg&#34; alt=&#34;Schotter &amp;mdash; Georg Nees&#34;&gt;&lt;/a&gt;
&lt;em&gt;&lt;small&gt;Lithograph in black ink from a computer-generated graphic, &amp;lsquo;Schotter&amp;rsquo;, 1968-1970, by Georg Nees. © Victoria and Albert Museum, London&lt;/small&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;As a way of dipping my toe into generative art, I&amp;rsquo;ve been trying to
recreate one of the most iconic images in computer-generated art:
&lt;em&gt;Schotter&lt;/em&gt; (&amp;ldquo;Gravel&amp;rdquo;, aka &amp;ldquo;Cubic Disarray&amp;rdquo;) by Georg Nees.&lt;/p&gt;
&lt;p&gt;Created in 1968, it was drawn using a Zuse&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; Graphomat Z64
flatbed plotter.&lt;/p&gt;
&lt;p&gt;I found many online tutorials on recreating it, mostly using
&lt;a href=&#34;https://processing.org/&#34;&gt;Processing&lt;/a&gt; or its successor,
&lt;a href=&#34;https://p5js.org/&#34;&gt;p5.js&lt;/a&gt;, but they almost always either (a) used the
same random number (scaled) for offset and rotation, or (b) eyeballed
the original plot and came up with something that worked.&lt;/p&gt;
&lt;h1 id=&#34;original-code&#34;&gt;Original code&lt;/h1&gt;
&lt;p&gt;With some digging, I was able to find a record of the original source,
in a &lt;a href=&#34;https://www.slideshare.net/slideshow/kunst-und-computer/67510183#16&#34;&gt;German presentation from
2016&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1   &amp;#39;BEGIN&amp;#39;&amp;#39;COMMENT&amp;#39;SCHOTTER.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2   &amp;#39;REAL&amp;#39;R,PIHALB,PI4T.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3   &amp;#39;INTEGER&amp;#39;I.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4   &amp;#39;PROCEDURE&amp;#39;QUAD.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5   &amp;#39;BEGIN&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6   &amp;#39;REAL&amp;#39;P1,Q1,PSI.,&amp;#39;INTEGER&amp;#39;S.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7   JE1.=5*1/264.,JA1.=-JE1.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;8   JE2.=PI4T*(1+I/264).,JA2.=PI4T*(1-I/264).,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;9   P1.=P+5+J1.,Q1.=Q+5+J1.,PS1.=J2.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;10  LEER(P1+R*COS(PSI),Q1+R*SIN(PSI)).,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;11  &amp;#39;FOR&amp;#39;S.=1&amp;#39;STEP&amp;#39;1&amp;#39;UNTIL&amp;#39;4&amp;#39;DO&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12  &amp;#39;BEGIN&amp;#39;PSI.=PSI+PIHALB.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;13  LINE(P1+R*COS(PSI),Q1+R*SIN(PSI)).,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;14  &amp;#39;END&amp;#34;.,I.=I+1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;15  &amp;#39;END&amp;#39;QUAD.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;16  R.=5*1.4142.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;17  PIHALB.=3.14159*.5.,P14T.=PIHALB*.5.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;18  I.=0.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;19  SERIE(10.0,10.0,22,12,QUAD)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;20  &amp;#39;END&amp;#39; SCHOTTER.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1   &amp;#39;REAL&amp;#39;P,Q,P1,Q1,XM,YM,HOR,VER,JLI,JRE,JUN,JOB.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5   &amp;#39;INTEGER&amp;#39;I,M,M,T.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7   &amp;#39;PROCEDURE&amp;#39;SERIE(QUER,HOCH,XMAL,YMAL,FIGUR).,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;8   &amp;#39;VALUE&amp;#39;QUER,HOCH,XMAL,YMAL.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;9   &amp;#39;REAL&amp;#39;QUER,HOCH.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;10  &amp;#39;INTEGER&amp;#39;XMAL,YMAL.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;11  &amp;#39;PROCEDURE&amp;#39;FIGUR.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;12  &amp;#39;BEGIN&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;13  &amp;#39;REAL&amp;#39;YANF.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;14  &amp;#39;INTEGER&amp;#39;COUNTX,COUNTY.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;15  P.=-QUER*XMAL*.5.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;16  Q.=YANF.=-HOCH*YMAL*.5.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;17  &amp;#39;FOR&amp;#39;COUNTX.=1&amp;#39;STEP&amp;#39;1&amp;#39;UNTIL&amp;#39;XMAL&amp;#39;DO&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;18  &amp;#39;BEGIN&amp;#39;Q.=YANF.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;19  &amp;#39;FOR&amp;#39;COUNTY.=1&amp;#39;STEP&amp;#39;1&amp;#39;UNTIL&amp;#39;YMAL&amp;#39;DO&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;20  &amp;#39;BEGIN&amp;#39;FIGUR.,Q.=Q+HOCH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;21  &amp;#39;END&amp;#39;.,P.=P+QUER
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;22  &amp;#39;END&amp;#39;.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;23  LEER(-148.0,-105.0).,CLOSE.,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;24  SONK(11).,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;25  OPBEN(X,Y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;26  &amp;#39;END&amp;#39;SERIE.,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Nees&amp;rsquo; comments:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;«Image 38 [«Schotter»] is produced by invoking the SERIE procedure […]. The non-parametric procedure QUAD serves to generate the elementary figure which is reproduced multiple times in the composition process controlled by SERIE. QUAD is located in lines 4 through 15 of the generator. This procedure draws squares with sides of constant length but at random locations and different angles. From lines 9 and 10, it can be seen that the position of a single square is influenced by random generator J1, and the angle placement by J2. The successively increasing variation between the relative coordinates P and Q, and the angle position PSI of a given square, is controlled by the counter index I, which is invoked by each call from QUAD (see line 14).»&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://ems.andrew.cmu.edu/2013_60210a/assignments/assignment-04/index.html&#34;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;python-translation&#34;&gt;Python translation&lt;/h1&gt;
&lt;p&gt;With a few helper functions and ugly uses of &lt;code&gt;global&lt;/code&gt;, we can write a
Python implementation that is almost just a transliteration.&lt;/p&gt;
&lt;h2 id=&#34;helper-functions&#34;&gt;Helper functions&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;math&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;random&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;drawsvg&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#0e84b5;font-weight:bold&#34;&gt;draw&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; draw&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Drawing(&lt;span style=&#34;color:#40a070&#34;&gt;250&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;250&lt;/span&gt;, origin&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;LEER&lt;/span&gt;(x,y):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;global&lt;/span&gt; p
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; p &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;None&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        d&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;append(p)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; draw&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;Path(stroke&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, stroke_width&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;0.5&amp;#39;&lt;/span&gt;, fill&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;M(y,x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;LINE&lt;/span&gt;(x,y):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;L(y,x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;CLOSE&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;if&lt;/span&gt; p &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;None&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        d&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;append(p)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;JE1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JA1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JE2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; JA2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;J1&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; random&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;uniform(JE1, JA1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;J2&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; random&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;uniform(JE2, JA2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;SIN&lt;/span&gt;(x):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;sin(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;COS&lt;/span&gt;(x):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; math&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;cos(x)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;transliteration&#34;&gt;Transliteration&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# SCHOTTER&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;R &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1.4142&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;HALFPI &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;3.14159&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PI4T &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; HALFPI &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;P &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Q &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; PSI &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;QUAD&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;global&lt;/span&gt; I, JE1, JA1, JE2, JA2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  JE1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;I&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;264&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  JA1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;JE1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  JE2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; PI4T &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; (&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;I&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;264&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  JA2 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; PI4T &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; (&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;I&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;264&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  P1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; P&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;J1()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Q1 &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Q&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;J1()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  PSI &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; J2()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  LEER(P1&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;R&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;COS(PSI), Q1&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;R&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;SIN(PSI))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; S &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#40a070&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#40a070&#34;&gt;4&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PSI &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; PSI&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;HALFPI
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LINE (P1&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;R&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;COS(PSI), Q1&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;R&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;SIN(PSI))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  I &lt;span style=&#34;color:#666&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;SERIE&lt;/span&gt;(QUER, HOCH, XMAL, YMAL, FIGUR):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;global&lt;/span&gt; P, Q
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  P &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;QUER &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; XMAL &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Q &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; YANF &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;HOCH &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; YMAL &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; COUNTX &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;, XMAL&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Q &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; YANF
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; COUNTY &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#007020&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;, YMAL&lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      FIGUR()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Q &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Q &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; HOCH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    P &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; P &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; QUER
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  LEER(&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;148.0&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;105.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  CLOSE()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SERIE(&lt;span style=&#34;color:#40a070&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;22&lt;/span&gt;, &lt;span style=&#34;color:#40a070&#34;&gt;12&lt;/span&gt;, QUAD)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# /SCHOTTER&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;output&#34;&gt;Output&lt;/h2&gt;
&lt;br&gt;
&lt;center style=&#34;background-color:black&#34;&gt;
&lt;br&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;90%&#34; viewBox=&#34;-90 -140 180 280&#34; style=&#34;background-color:#eae6e2&#34;&gt;
&lt;g stroke-width=&#34;.4&#34; stroke=&#34;#41403a&#34; fill=&#34;none&#34; stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34;&gt;
&lt;path d=&#34;M-50-100v-10h-10v10h10m10.008-.007v-10h-10v10h10&#34;/&gt;
&lt;path d=&#34;m-30.016-99.982.045-10-10-.045-.045 10 10 .045m10.053-.038.036-10-10-.037-.036 10 10 .036&#34;/&gt;
&lt;path d=&#34;m-9.978-100.006.1-9.999-10-.1-.1 10 10 .1&#34;/&gt;
&lt;path d=&#34;m-.047-99.879.147-9.999-9.999-.146-.146 9.999 9.998.146&#34;/&gt;
&lt;path d=&#34;m9.955-99.975.1-10-9.999-.1-.1 10 9.999.1&#34;/&gt;
&lt;path d=&#34;m19.974-99.925.002-10-10-.002-.002 10 10 .002&#34;/&gt;
&lt;path d=&#34;m30.01-100.077-.057-10-10 .057.058 10 10-.057m10.09-.09-.083-10-10 .084.084 10 10-.084m10.005.394.088-10-10-.087-.087 10 10 .087&#34;/&gt;
&lt;path d=&#34;m59.928-100.158.075-10-10-.075-.075 10 10 .075M-50.063-89.98l.197-9.997-9.998-.197-.197 9.997 9.998.198&#34;/&gt;
&lt;path d=&#34;m-39.73-89.91-.306-9.996-9.995.306.306 9.995 9.995-.306m10.109-.306-.237-9.998-9.997.237.237 9.997 9.997-.236&#34;/&gt;
&lt;path d=&#34;m-20.187-90.06.288-9.996-9.996-.288-.288 9.996 9.996.288&#34;/&gt;
&lt;path d=&#34;m-9.641-89.996-.438-9.99-9.99.437.437 9.99 9.99-.437&#34;/&gt;
&lt;path d=&#34;m.267-89.713.093-9.999-10-.093-.092 10 9.999.092&#34;/&gt;
&lt;path d=&#34;m9.863-89.738.277-9.996-9.996-.278-.278 9.996 9.996.278&#34;/&gt;
&lt;path d=&#34;m19.781-89.89.088-10-10-.087-.087 10 10 .087&#34;/&gt;
&lt;path d=&#34;m29.503-90.024.457-9.99-9.99-.456-.456 9.99 9.989.456&#34;/&gt;
&lt;path d=&#34;m39.866-90.235-.195-9.998-9.998.195.195 9.998 9.998-.195m10.256.513.065-10-10-.065-.065 10 10 .065&#34;/&gt;
&lt;path d=&#34;m59.357-89.35.524-9.986-9.986-.524-.525 9.986 9.987.524m-109.225 9.376-.22-9.997-9.997.22.22 9.997 9.997-.22&#34;/&gt;
&lt;path d=&#34;m-40.006-80.103.338-9.994-9.995-.338-.338 9.994 9.994.338&#34;/&gt;
&lt;path d=&#34;m-29.767-80.268-.254-9.996-9.996.254.253 9.996 9.997-.254&#34;/&gt;
&lt;path d=&#34;m-20.106-79.929.24-9.997-9.997-.24-.24 9.997 9.997.24&#34;/&gt;
&lt;path d=&#34;m-10.238-79.799-.39-9.992-9.992.39.39 9.992 9.992-.39m10.708.056-.477-9.988-9.988.476.476 9.988 9.988-.476&#34;/&gt;
&lt;path d=&#34;m10.348-80.75-.446-9.99-9.99.447.447 9.99 9.99-.447&#34;/&gt;
&lt;path d=&#34;m19.335-79.499.254-9.996-9.997-.255-.254 9.997 9.997.254&#34;/&gt;
&lt;path d=&#34;m29.295-79.067.784-9.97-9.97-.784-.783 9.97 9.969.784m10.641-1.021.61-9.98-9.982-.61-.609 9.981 9.981.61&#34;/&gt;
&lt;path d=&#34;m49.694-80.004-.511-9.987-9.987.511.511 9.987 9.987-.51m10.233.237.309-9.996-9.995-.308-.309 9.995 9.995.309m-108.959 9.02-.913-9.958-9.958.912.913 9.958 9.958-.912&#34;/&gt;
&lt;path d=&#34;m-39.863-70.084.155-9.999-9.999-.154-.155 9.998 10 .155&#34;/&gt;
&lt;path d=&#34;m-30.35-69.943-.188-9.999-9.998.188.188 9.998 9.998-.187m10.71-.977-.856-9.964-9.963.855.855 9.964 9.963-.856&#34;/&gt;
&lt;path d=&#34;m-10.026-70.587-.755-9.971-9.97.754.754 9.972 9.971-.755&#34;/&gt;
&lt;path d=&#34;m-.067-70.369-.389-9.992-9.992.39.39 9.991 9.991-.389m10.01.995.367-9.993-9.993-.366-.367 9.993 9.993.366m10.295-1.006.694-9.976-9.976-.693-.694 9.975 9.976.694&#34;/&gt;
&lt;path d=&#34;m30.182-70.429-.579-9.983-9.983.579.579 9.983 9.983-.578&#34;/&gt;
&lt;path d=&#34;m38.483-69.64 1.288-9.917-9.916-1.289-1.289 9.917 9.917 1.288&#34;/&gt;
&lt;path d=&#34;m48.99-69.628.386-9.993-9.992-.386-.387 9.992 9.993.387m10.397-.017.196-9.998-9.998-.196-.196 9.998 9.998.196M-51.13-59.605l.841-9.965-9.965-.84-.84 9.964 9.965.84m10.1.595 1.175-9.931-9.93-1.175-1.176 9.93 9.931 1.176m11.373-1.04.248-9.997-9.997-.249-.248 9.997 9.997.249&#34;/&gt;
&lt;path d=&#34;m-20.365-60.6.078-10-10-.077-.077 10 10 .077m10.798.985-.375-9.992-9.993.375.375 9.993 9.993-.376&#34;/&gt;
&lt;path d=&#34;m-.255-59.337 1.508-9.886-9.885-1.508-1.508 9.886 9.885 1.508&#34;/&gt;
&lt;path d=&#34;m9.829-60.728-1.002-9.95-9.95 1.001 1.002 9.95 9.95-1.001&#34;/&gt;
&lt;path d=&#34;m19.559-59.643-1.217-9.925-9.926 1.217 1.217 9.925 9.926-1.217m11.413-.315-1.2-9.928-9.927 1.2 1.2 9.928 9.927-1.2m10.512-1.247-1.05-9.945-9.945 1.05 1.05 9.945 9.945-1.05&#34;/&gt;
&lt;path d=&#34;m50.804-60.852-.925-9.957-9.957.926.925 9.957 9.957-.926&#34;/&gt;
&lt;path d=&#34;m59.665-58.942 1.035-9.946-9.946-1.035-1.035 9.946 9.946 1.035m-108.551 9.144-1.613-9.869-9.869 1.613 1.613 9.87 9.869-1.614&#34;/&gt;
&lt;path d=&#34;m-39.932-49.703-.583-9.982-9.983.583.584 9.983 9.982-.584&#34;/&gt;
&lt;path d=&#34;m-30.078-50.048-1.375-9.905-9.905 1.375 1.375 9.905 9.905-1.375m10.298-.357-.976-9.952-9.952.976.976 9.952 9.952-.976&#34;/&gt;
&lt;path d=&#34;m-11.338-50.051 1.514-9.885-9.884-1.514-1.515 9.884 9.885 1.515m12.82-1.559L.095-61.513l-9.903 1.386 1.387 9.904 9.903-1.387&#34;/&gt;
&lt;path d=&#34;M11.597-50.324 10.4-60.252.472-59.055l1.197 9.928 9.928-1.197&#34;/&gt;
&lt;path d=&#34;m20.535-49.813-.933-9.957-9.956.933.933 9.956 9.956-.932m10.491-1.607-.685-9.977-9.976.684.684 9.977 9.977-.684&#34;/&gt;
&lt;path d=&#34;m41.117-50.672-1.92-9.813-9.814 1.92 1.92 9.814 9.814-1.92&#34;/&gt;
&lt;path d=&#34;m50.978-49.728-.94-9.956-9.955.94.94 9.955 9.955-.94&#34;/&gt;
&lt;path d=&#34;m59.748-49.661-1.383-9.904-9.904 1.383 1.383 9.904 9.904-1.383M-51.541-39.55l.644-9.98-9.98-.644-.643 9.98 9.979.643m12.266-1.374.192-9.998-9.998-.192-.192 9.998 9.998.192&#34;/&gt;
&lt;path d=&#34;m-29.77-41.984-1.46-9.893-9.892 1.46 1.46 9.892 9.892-1.459&#34;/&gt;
&lt;path d=&#34;m-20.885-40.802-.897-9.96-9.96.898.897 9.96 9.96-.898m11.676-.268-1.956-9.806-9.806 1.956 1.955 9.806 9.807-1.955&#34;/&gt;
&lt;path d=&#34;m-.235-40.084.28-9.996-9.996-.28-.28 9.996 9.996.28&#34;/&gt;
&lt;path d=&#34;m8.964-39.06 1.223-9.925-9.925-1.223-1.223 9.925 9.925 1.223m12.21-.69-.563-9.984-9.984.563.563 9.984 9.984-.563&#34;/&gt;
&lt;path d=&#34;m28.213-37.794 2.242-9.745-9.745-2.243-2.243 9.746 9.745 2.242&#34;/&gt;
&lt;path d=&#34;m39.51-40.043-2.3-9.732-9.732 2.3 2.3 9.732 9.732-2.3&#34;/&gt;
&lt;path d=&#34;m49.215-40.934-.488-9.988-9.988.487.488 9.988 9.988-.487M60.196-37.6l2.003-9.798-9.797-2.003-2.003 9.797 9.797 2.004m-111.522 8.847.287-9.995-9.996-.287-.286 9.996 9.995.287&#34;/&gt;
&lt;path d=&#34;m-40.282-30.31-1.715-9.851-9.851 1.714 1.714 9.852 9.852-1.715m11.375.928-1.689-9.856-9.856 1.688 1.688 9.856 9.857-1.688m9.887-2.296-1.407-9.9-9.9 1.407 1.407 9.9 9.9-1.407&#34;/&gt;
&lt;path d=&#34;m-10.815-29.648-.642-9.979-9.98.642.642 9.98 9.98-.643M.084-27.904l1.978-9.803-9.803-1.977-1.977 9.802 9.802 1.978&#34;/&gt;
&lt;path d=&#34;m10.596-29.145.541-9.985-9.985-.542-.542 9.985 9.986.542&#34;/&gt;
&lt;path d=&#34;m20.276-30.055-.194-9.998-9.998.194.194 9.998 9.998-.194&#34;/&gt;
&lt;path d=&#34;m29.609-29.087-.207-9.997-9.998.207.207 9.998 9.998-.208m11.782-1.375-.72-9.974-9.974.72.72 9.974 9.974-.72&#34;/&gt;
&lt;path d=&#34;m49.871-30.831-.622-9.98-9.98.622.622 9.98 9.98-.622&#34;/&gt;
&lt;path d=&#34;m58.977-27.767 1.54-9.88-9.88-1.54-1.54 9.88 9.88 1.54m-107.516 7.323-1.53-9.882-9.882 1.53 1.53 9.882 9.882-1.53&#34;/&gt;
&lt;path d=&#34;m-41.461-20.39 2.202-9.754-9.754-2.202-2.203 9.754 9.755 2.203m10.33-.256 2.698-9.629-9.63-2.698-2.697 9.63 9.629 2.697&#34;/&gt;
&lt;path d=&#34;m-23.338-20.289 2.598-9.656-9.656-2.599-2.599 9.657 9.657 2.598m12.191 1.82 1.711-9.852-9.852-1.711L-21-20.18l9.852 1.711m12.739-.723.454-9.99-9.99-.453-.453 9.99 9.99.453&#34;/&gt;
&lt;path d=&#34;m11.748-21.016-1.258-9.92L.57-29.68l1.257 9.92 9.92-1.257&#34;/&gt;
&lt;path d=&#34;m20.804-21.485-1.965-9.805-9.805 1.965L11-19.52l9.805-1.965&#34;/&gt;
&lt;path d=&#34;m27.245-21.103 1.868-9.824-9.824-1.868-1.868 9.824 9.824 1.868&#34;/&gt;
&lt;path d=&#34;m39.208-22.301-1.582-9.874-9.874 1.581 1.582 9.874 9.874-1.581m13.332 1.214-1.226-9.924-9.925 1.226 1.226 9.925 9.925-1.227&#34;/&gt;
&lt;path d=&#34;m58.94-19.357 3.035-9.529-9.529-3.034-3.034 9.528 9.528 3.035M-51.372-9.656l2.528-9.675-9.675-2.528-2.528 9.675 9.675 2.528m13.182.346-.289-9.996-9.996.289.289 9.995 9.995-.288&#34;/&gt;
&lt;path d=&#34;m-28.54-11.905-3.18-9.481-9.48 3.18 3.18 9.48 9.48-3.18&#34;/&gt;
&lt;path d=&#34;m-20.007-9.503-.44-9.99-9.99.44.44 9.99 9.99-.44&#34;/&gt;
&lt;path d=&#34;m-10.156-9.752-.415-9.992-9.99.415.414 9.991 9.99-.414&#34;/&gt;
&lt;path d=&#34;M.297-11.284-2.74-20.81l-9.528 3.036 3.037 9.528 9.528-3.037&#34;/&gt;
&lt;path d=&#34;m9.477-8.765-1.323-9.912-9.912 1.324 1.323 9.911 9.912-1.323&#34;/&gt;
&lt;path d=&#34;m17.758-9.777 2.693-9.63L10.82-22.1l-2.692 9.631 9.63 2.692m13.7 1.462-.385-9.993-9.993.386.386 9.992 9.992-.385&#34;/&gt;
&lt;path d=&#34;m37.05-7.159 3.165-9.485-9.485-3.166-3.166 9.486L37.05-7.16m14.092-2.642-1.006-9.949-9.95 1.007 1.007 9.949 9.95-1.007&#34;/&gt;
&lt;path d=&#34;m58.209-8.757 1.625-9.867-9.867-1.626-1.625 9.867 9.867 1.626M-52.942.9l1.548-9.88-9.88-1.547-1.547 9.88L-52.942.9m11.821-.961 2.917-9.565-9.566-2.917-2.916 9.566 9.565 2.916&#34;/&gt;
&lt;path d=&#34;m-32.992 1.554 3.245-9.459-9.459-3.245-3.245 9.459 9.459 3.245m14.25.058.243-9.997-9.997-.244-.243 9.997 9.997.244&#34;/&gt;
&lt;path d=&#34;m-10.743.876 1.927-9.813-9.813-1.926-1.926 9.813 9.812 1.926M-.015 3.158 2.19-6.596-7.564-8.8-9.77.953l9.753 2.205&#34;/&gt;
&lt;path d=&#34;m8.09 1.838 2.855-9.584-9.585-2.853-2.853 9.584L8.09 1.838M23.682.023l-3.38-9.412-9.412 3.38 3.38 9.412 9.412-3.38&#34;/&gt;
&lt;path d=&#34;m27.929.186.324-9.995-9.995-.324-.324 9.995 9.994.324&#34;/&gt;
&lt;path d=&#34;m36.095 1.768 2.612-9.652-9.652-2.613-2.613 9.653 9.653 2.612&#34;/&gt;
&lt;path d=&#34;M50.136-2.195 46.6-11.548l-9.353 3.536 3.536 9.354 9.354-3.537M61.406.332l-.988-9.951-9.951.988.988 9.951 9.951-.988M-49.303 11.015l2.052-9.787-9.787-2.052-2.052 9.787 9.787 2.052&#34;/&gt;
&lt;path d=&#34;m-41.681 7.486-.729-9.973-9.973.728.729 9.974 9.973-.729&#34;/&gt;
&lt;path d=&#34;m-32.87 11.177 3.231-9.463-9.463-3.232-3.232 9.463 9.463 3.232&#34;/&gt;
&lt;path d=&#34;m-22.723 12.668 1.47-9.891-9.891-1.47-1.47 9.89 9.89 1.471m11.021-.961.557-9.984-9.985-.557-.556 9.985 9.984.556m10.106.946L1.941 3.3-7.412-.238l-3.538 9.353 9.353 3.538&#34;/&gt;
&lt;path d=&#34;M6.232 13.858 9.654 4.46.258 1.04l-3.422 9.396 9.396 3.422&#34;/&gt;
&lt;path d=&#34;m18.815 11.157-2.423-9.702L6.69 3.878l2.424 9.702 9.701-2.423m10.807 1.028.64-9.98-9.98-.64-.64 9.98 9.98.64&#34;/&gt;
&lt;path d=&#34;m39.553 7.955.878-9.962-9.961-.877-.878 9.96 9.961.879m10.369 4.53 3.088-9.511-9.511-3.088-3.088 9.511 9.511 3.088&#34;/&gt;
&lt;path d=&#34;M59.666 11.522 58.3 1.615l-9.906 1.366 1.365 9.906 9.907-1.365m-113.494 8.664 2.158-9.765-9.764-2.158-2.158 9.765 9.764 2.158m13.125-.269.405-9.992-9.991-.405-.406 9.991 9.992.406&#34;/&gt;
&lt;path d=&#34;m-32.565 21.303.177-9.998-9.998-.177-.177 9.999 9.998.176m12.455-.518 1.291-9.916-9.916-1.29-1.291 9.915 9.916 1.291m12.746-1.867-.248-9.997-9.997.248.249 9.997 9.996-.248&#34;/&gt;
&lt;path d=&#34;m-1.166 18.466.648-9.98-9.978-.648-.65 9.979 9.98.649&#34;/&gt;
&lt;path d=&#34;m6.978 20.293 1.866-9.824L-.98 8.603l-1.866 9.824 9.824 1.866m14.386-1.759-2.2-9.755-9.755 2.201 2.2 9.755 9.755-2.2&#34;/&gt;
&lt;path d=&#34;m25.317 20.384 4.328-9.015-9.015-4.327-4.328 9.015 9.015 4.327m15.556-1.63-1.437-9.896-9.896 1.436 1.436 9.897 9.897-1.437&#34;/&gt;
&lt;path d=&#34;m48.04 23.62 2.89-9.572-9.573-2.891-2.89 9.573 9.572 2.89&#34;/&gt;
&lt;path d=&#34;m60.898 18.66-.711-9.974-9.975.711.711 9.975 9.975-.711M-46.25 30.119l-2.195-9.756-9.756 2.195 2.195 9.756 9.756-2.195&#34;/&gt;
&lt;path d=&#34;m-38.512 31.397-.798-9.968-9.968.799.798 9.968 9.968-.8&#34;/&gt;
&lt;path d=&#34;m-31.147 31.127.616-9.98-9.981-.617-.616 9.981 9.98.616&#34;/&gt;
&lt;path d=&#34;m-20.534 29.076-2.502-9.682-9.682 2.502 2.502 9.682 9.682-2.502&#34;/&gt;
&lt;path d=&#34;m-9.131 29.806-3.815-9.244-9.244 3.815 3.815 9.244 9.244-3.815&#34;/&gt;
&lt;path d=&#34;M-3.045 31.652.75 22.4l-9.252-3.794-3.795 9.251 9.252 3.795M9.328 33.03l4.2-9.075-9.075-4.2-4.2 9.076 9.075 4.2&#34;/&gt;
&lt;path d=&#34;m19.262 28.91-3.977-9.174-9.175 3.978 3.978 9.175 9.174-3.978m12.868 1.797-1.475-9.89-9.89 1.474 1.474 9.89 9.89-1.474&#34;/&gt;
&lt;path d=&#34;m39.614 27.979-3.091-9.51-9.51 3.09 3.09 9.51 9.51-3.09&#34;/&gt;
&lt;path d=&#34;m47.856 29.681 1.466-9.892-9.891-1.466-1.467 9.892 9.892 1.466m12.85.725-.208-9.998-9.997.207.207 9.998 9.998-.207M-48.738 40.945l-3.251-9.457-9.457 3.252 3.252 9.456 9.456-3.251&#34;/&gt;
&lt;path d=&#34;m-42.112 41.385 3.432-9.393-9.393-3.432-3.431 9.393 9.392 3.432&#34;/&gt;
&lt;path d=&#34;m-32.365 43.691 3.74-9.274-9.274-3.74-3.74 9.275 9.274 3.74&#34;/&gt;
&lt;path d=&#34;m-18.409 38.088-1.113-9.938-9.938 1.113 1.113 9.938 9.938-1.113&#34;/&gt;
&lt;path d=&#34;m-7.549 34.057-4.46-8.95-8.95 4.46 4.46 8.95 8.95-4.46M2.4 38.376l.216-9.998-9.998-.215-.215 9.998 9.998.215&#34;/&gt;
&lt;path d=&#34;m5.256 42.109 4.441-8.96-8.96-4.441-4.44 8.959 8.959 4.442&#34;/&gt;
&lt;path d=&#34;m17.896 38.85.427-9.99-9.99-.428-.428 9.99 9.99.428m15.973-1.582-2.377-9.713-9.714 2.377 2.377 9.713 9.714-2.376&#34;/&gt;
&lt;path d=&#34;m44.537 36.43-3.404-9.403-9.403 3.404 3.404 9.402 9.403-3.404&#34;/&gt;
&lt;path d=&#34;m49.122 38.294-4.759-8.795-8.795 4.759 4.76 8.795 8.794-4.76&#34;/&gt;
&lt;path d=&#34;m56.213 44.364 2.69-9.631-9.63-2.691-2.691 9.63 9.63 2.692m-110.873 4.819 2.897-9.57-9.571-2.898-2.897 9.571 9.57 2.897&#34;/&gt;
&lt;path d=&#34;m-45.837 51.722 4.798-8.773-8.774-4.798-4.797 8.773 8.773 4.798m17.033-.735 1.83-9.83-9.83-1.831-1.83 9.83 9.83 1.831&#34;/&gt;
&lt;path d=&#34;m-24.562 49.324 2.307-9.73-9.73-2.308-2.307 9.73 9.73 2.308m13.716-.237 3.263-9.452-9.452-3.264-3.263 9.453 9.452 3.263&#34;/&gt;
&lt;path d=&#34;m3.56 44.29-4.999-8.66-8.66 4.999 5 8.66 8.66-5&#34;/&gt;
&lt;path d=&#34;m10.76 52.622.73-9.973-9.974-.73-.73 9.973 9.973.73&#34;/&gt;
&lt;path d=&#34;m22.862 48.65-5.17-8.559-8.56 5.17 5.17 8.56 8.56-5.17&#34;/&gt;
&lt;path d=&#34;m25.401 51.73 5.063-8.624-8.624-5.063-5.062 8.624 8.623 5.062m17.109-4.745-3.372-9.414-9.414 3.372 3.372 9.414 9.414-3.372&#34;/&gt;
&lt;path d=&#34;m49.724 48.59 2.039-9.79-9.79-2.039-2.039 9.79 9.79 2.039&#34;/&gt;
&lt;path d=&#34;m60.32 47.621-.112-10-9.999.113.112 9.999 10-.112M-50.088 61.783l1.362-9.906-9.907-1.363-1.362 9.907 9.907 1.363&#34;/&gt;
&lt;path d=&#34;m-40.59 61.966-.086-10-10 .087.087 10 10-.087m13.569-4.074-.723-9.974-9.973.724.723 9.974 9.974-.724&#34;/&gt;
&lt;path d=&#34;m-24.591 60.915 5.193-8.546-8.546-5.193-5.193 8.546 8.546 5.193m17.795-3.748.28-9.996-9.995-.281-.281 9.996 9.996.28&#34;/&gt;
&lt;path d=&#34;m-1.615 61.53-.664-9.978-9.977.664.663 9.978 9.978-.664&#34;/&gt;
&lt;path d=&#34;m10.985 58.15-5.298-8.48-8.481 5.296 5.297 8.482 8.482-5.297m7.88 1.684 5.359-8.442-8.443-5.36-5.359 8.443 8.443 5.36&#34;/&gt;
&lt;path d=&#34;M27.128 61.934 25.304 52.1l-9.832 1.824 1.824 9.832 9.832-1.823M45 54.694l-4.202-9.074-9.074 4.202 4.202 9.074L45 54.694&#34;/&gt;
&lt;path d=&#34;m44.736 58.408 3.05-9.523-9.523-3.05-3.05 9.523 9.523 3.05m16.128 3.164 2.261-9.74-9.74-2.262-2.262 9.741 9.741 2.261m-111.368 9.005-2.577-9.663-9.662 2.577 2.577 9.662 9.662-2.576&#34;/&gt;
&lt;path d=&#34;m-45.548 74.223 3.034-9.528-9.528-3.034-3.034 9.528 9.528 3.034m16.206.118 4.444-8.958-8.957-4.444-4.445 8.958 8.958 4.444&#34;/&gt;
&lt;path d=&#34;m-24.39 75.014 2.913-9.566-9.567-2.913-2.912 9.567 9.566 2.912m9.435-6.717 4.526-8.917-8.917-4.526-4.526 8.917 8.917 4.526&#34;/&gt;
&lt;path d=&#34;m-3.92 72.635.27-9.996-9.997-.27-.269 9.997 9.996.27&#34;/&gt;
&lt;path d=&#34;m7.125 67.753-2.516-9.678-9.678 2.516 2.516 9.678 9.678-2.516m14.606-3.02-4.326-9.016-9.016 4.326 4.326 9.016 9.016-4.326&#34;/&gt;
&lt;path d=&#34;m27.738 70.302 4.664-8.846-8.845-4.664-4.664 8.846 8.845 4.664m16.299-1.869-.058-10-10 .058.058 10 10-.058&#34;/&gt;
&lt;path d=&#34;m47.38 69.94-2.855-9.584-9.584 2.855 2.855 9.584 9.583-2.855m11.26 1.582 4.76-8.794-8.794-4.76-4.76 8.794 8.794 4.76M-49.01 78.528l2.955-9.553-9.554-2.954-2.954 9.553 9.554 2.954&#34;/&gt;
&lt;path d=&#34;m-34.992 76.998-5.958-8.031-8.031 5.957 5.957 8.032 8.032-5.958&#34;/&gt;
&lt;path d=&#34;m-26.879 78.856-4.655-8.85-8.85 4.656 4.656 8.85 8.85-4.656&#34;/&gt;
&lt;path d=&#34;m-19.78 77.146 1.51-9.885-9.886-1.51-1.51 9.886 9.886 1.51m12.385.707 1.638-9.865-9.865-1.638-1.638 9.864 9.865 1.639&#34;/&gt;
&lt;path d=&#34;m1.246 78.508-4.742-8.804-8.804 4.742 4.742 8.804 8.804-4.742m11.057-3.529-3.166-9.485L-.35 68.66l3.167 9.485 9.485-3.166m6.588 10.713 4.95-8.69-8.69-4.948-4.949 8.69 8.69 4.948&#34;/&gt;
&lt;path d=&#34;m26.819 79.744 2.161-9.764-9.763-2.162-2.162 9.764 9.764 2.162m15.669 1.555L40.493 71.5l-9.8 1.996 1.996 9.799 9.799-1.996&#34;/&gt;
&lt;path d=&#34;m49.199 81.652-3.096-9.51-9.509 3.097 3.096 9.508 9.509-3.095&#34;/&gt;
&lt;path d=&#34;m54.24 77.218 2.722-9.622-9.622-2.723-2.723 9.622 9.622 2.723M-54.29 92.92l.408-9.99-9.992-.409-.408 9.992 9.992.408m16.602-8.121-5.288-8.488-8.487 5.288 5.287 8.487 8.488-5.287&#34;/&gt;
&lt;path d=&#34;m-33.296 92.057 6.1-7.924-7.924-6.1-6.1 7.924 7.924 6.1&#34;/&gt;
&lt;path d=&#34;m-16.084 84.302-5.203-8.54-8.54 5.203 5.203 8.54 8.54-5.203m4.977 11.702 4.976-8.673-8.673-4.977-4.977 8.674 8.674 4.977&#34;/&gt;
&lt;path d=&#34;m1.582 89.99-5.644-8.256-8.255 5.644 5.644 8.255 8.255-5.644&#34;/&gt;
&lt;path d=&#34;m7.564 84.873-2.446-9.696-9.696 2.447 2.446 9.696 9.696-2.447m14.05.724-2.366-9.716-9.716 2.366 2.366 9.716 9.716-2.366&#34;/&gt;
&lt;path d=&#34;m25.187 89.762 5.782-8.159-8.159-5.782-5.782 8.16 8.159 5.781&#34;/&gt;
&lt;path d=&#34;m36.313 92.205 4.807-8.769-8.769-4.807-4.807 8.769 8.769 4.807&#34;/&gt;
&lt;path d=&#34;m49.684 90.979-4.542-8.91-8.91 4.542 4.543 8.91 8.909-4.542m13.515-2.716 1.679-9.858-9.858-1.68-1.68 9.859 9.859 1.679M-49.82 96.415l-5.74-8.189-8.189 5.739 5.739 8.19 8.19-5.74&#34;/&gt;
&lt;path d=&#34;m-40.182 104.061.41-9.991-9.992-.41-.41 9.991 9.992.41m8.895-1.436 5.755-8.178-8.178-5.754-5.755 8.177 8.178 5.755&#34;/&gt;
&lt;path d=&#34;m-25.705 102.006 6.216-7.833-7.834-6.216-6.215 7.833 7.833 6.216&#34;/&gt;
&lt;path d=&#34;m-13.506 100.94 6.3-7.766-7.767-6.3-6.3 7.767 7.767 6.3m15.678 3.471 2.037-9.79-9.79-2.037-2.037 9.79 9.79 2.037&#34;/&gt;
&lt;path d=&#34;M9.957 104.913 11.273 95 1.36 93.684l-1.316 9.913 9.913 1.316&#34;/&gt;
&lt;path d=&#34;m16.169 102.17 4.48-8.94-8.94-4.48-4.48 8.94 8.94 4.48&#34;/&gt;
&lt;path d=&#34;m31.142 101.792-3.412-9.4-9.4 3.413 3.413 9.4 9.4-3.413&#34;/&gt;
&lt;path d=&#34;m39.29 99.886-2.533-9.674-9.674 2.533 2.533 9.674 9.674-2.533&#34;/&gt;
&lt;path d=&#34;m42.652 103.786 6.7-7.424-7.425-6.7-6.7 7.424 7.425 6.7m18.931-11.068-5.251-8.51-8.51 5.252 5.252 8.51 8.51-5.252m-109.747 14.345 2.3-9.732-9.732-2.3-2.3 9.732 9.732 2.3&#34;/&gt;
&lt;path d=&#34;m-39.942 110.362-2.22-9.75-9.75 2.218 2.22 9.75 9.75-2.218&#34;/&gt;
&lt;path d=&#34;m-34.204 116.54 5.076-8.616-8.616-5.076-5.076 8.616 8.616 5.076m15.724-8.831 4.747-8.802-8.802-4.747-4.746 8.802 8.801 4.747&#34;/&gt;
&lt;path d=&#34;m-5.24 111.919-1.007-9.95-9.949 1.008 1.008 9.95 9.949-1.008&#34;/&gt;
&lt;path d=&#34;m1.168 108.48 2.396-9.708-9.71-2.396-2.395 9.709 9.709 2.396&#34;/&gt;
&lt;path d=&#34;m9.84 113.38 2.591-9.658-9.658-2.592-2.592 9.658 9.658 2.592&#34;/&gt;
&lt;path d=&#34;m11.442 111.216 6.507-7.593-7.593-6.507-6.507 7.593 7.593 6.507m22.018-4.927 1.986-9.801-9.801-1.985-1.985 9.801 9.8 1.985&#34;/&gt;
&lt;path d=&#34;m36.074 107.233 3.87-9.22-9.221-3.87-3.87 9.22 9.221 3.87&#34;/&gt;
&lt;path d=&#34;m44.932 108.518.9-9.96-9.96-.898-.899 9.96 9.96.898m17.912-.284-6.53-7.573-7.573 6.53 6.53 7.573 7.573-6.53&#34;/&gt;
&lt;/g&gt;
&lt;/svg&gt;
&lt;br&gt;
&lt;br&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;p&gt;Finally, it just looks right!&lt;/p&gt;
&lt;p&gt;For more details on the converstion, as well as a more idiomatic
Python version, see the &lt;a href=&#34;https://github.com/zellyn/genart/blob/main/schotter/transliteration.ipynb&#34;&gt;Jupyter
notebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To go further down the rabbit hole, continue to part 2&amp;hellip;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;Part one: Schotter: Introduction&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zellyn.com/2024/06/schotter-2/&#34;&gt;Part two: Schotter: Investigation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zellyn.com/2024/07/23-ecke/&#34;&gt;Part three: 23 ecke&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Yes, &lt;em&gt;that&lt;/em&gt; Zuse, &lt;a href=&#34;https://en.wikipedia.org/wiki/Konrad_Zuse&#34;&gt;Konrad Zuse&lt;/a&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Blog machinery back up</title>
      <link>https://zellyn.com/2024/06/blog-fixed/</link>
      <pubDate>Sat, 15 Jun 2024 19:45:31 -0400</pubDate>
      
      <guid>https://zellyn.com/2024/06/blog-fixed/</guid>
      <description>&lt;h1 id=&#34;blog-machinery-back-up&#34;&gt;Blog machinery back up&lt;/h1&gt;
&lt;p&gt;The downside of running a (slightly) custom&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; version of
&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; is that it can break when things get
updated. Somewhere around 2022 or 2023 I noticed that the &lt;code&gt;pikchr&lt;/code&gt;
diagrams weren&amp;rsquo;t rendering properly when I tried to regenerate my site.&lt;/p&gt;
&lt;p&gt;Well, yesterday, I finally got around to fixing it, mainly so that I
can write some posts to properly document my experience playing around
with ESP32-C3 chips and Adafruit Neopixels.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;modified to run pikchr in goldmark as described in
&lt;a href=&#34;https://zellyn.com/2022/01/gopikchr-a-yakshave/&#34;&gt;gopikchr: a yakshave&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    
    
    <item>
      <title>CS Ramble — Set 3b - operating systems</title>
      <link>https://zellyn.com/2022/03/cs-ramble/3b/</link>
      <pubDate>Wed, 16 Mar 2022 20:10:00 -0400</pubDate>
      
      <guid>https://zellyn.com/2022/03/cs-ramble/3b/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is post is part of &lt;a href=&#34;../3a/&#34;&gt;set 3&lt;/a&gt; of &lt;a href=&#34;../../../02/cs-ramble/&#34;&gt;A Ramble Around CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll get to processes, threads, and fibers soon, but first we need to
talk about how all the things your computer is doing at any given time
are organized.&lt;/p&gt;
&lt;h1 id=&#34;what-is-an-operating-system&#34;&gt;What is an Operating System?&lt;/h1&gt;
&lt;p&gt;Early personal computers more or less gave the currently-running
program full control of the machine.&lt;/p&gt;
&lt;p&gt;For instance, a simplified map of the memory of the Apple II computer looks like this:&lt;/p&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:292px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 292.32 645.12&#34;&gt;
&lt;path d=&#34;M2,45L290,45L290,2L2,2Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;23&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Free RAM&lt;/text&gt;
&lt;path d=&#34;M2,74L290,74L290,45L2,45Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;59&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Text screen data&lt;/text&gt;
&lt;path d=&#34;M2,146L290,146L290,74L2,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;110&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Graphical screen data&lt;/text&gt;
&lt;path d=&#34;M2,578L290,578L290,146L2,146Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Free RAM&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;372&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;(not to scale)&lt;/text&gt;
&lt;path d=&#34;M2,585L290,585L290,578L2,578Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;551&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;“Memory” that controls devices&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;571&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;path d=&#34;M2,642L290,642L290,585L2,585Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;614&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;ROM&lt;/text&gt;
&lt;path d=&#34;M2,642L290,642L290,2L2,2Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;polygon points=&#34;268,579 265,571 271,571&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M268,553L268,575&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
down
LOW: box width 2 height 0.3 fill 0xd8ecf3 thin &#34;Free RAM&#34; bold
TEXT: box same fill lightblue height 0.2 &#34;Text screen data&#34;
GR: box same height 0.5 &#34;Graphical screen data&#34;
RAM: box same as LOW height 3 &#34;Free RAM&#34; bold &#34;(not to scale)&#34; italic
IO: box same as GR height 0.05 &#34;“Memory” that controls devices&#34; above &#34;&#34; above
ROM: box same height 0.4 &#34;ROM&#34;

# Border
box with nw at 1st box.nw width 2 height (first box.n.y - last box.s.y)

arrow from IO.ne + (-0.15,0.17) down until even with IO.n - (0,0.01) thin
&lt;/pre&gt;
&lt;/div&gt;
&lt;div align=&#34;center&#34;&gt;&lt;i&gt;Apple II Memory Map&lt;/i&gt;&lt;/div&gt;
&lt;p&gt;Within limits&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, your code was pretty much free to use the &lt;strong&gt;Free
RAM&lt;/strong&gt; (“Random Access Memory”) however it wanted.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We&amp;rsquo;ll discuss TBD in the next part.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;The ROM (“Read-Only Memory”) used certain locations to keep
track of things like the current position on the screen, current
drawing color, etc., so you had to avoid those if you wanted to
keep using the ROM routines.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>
    
    
    
    <item>
      <title>CS Ramble — Set 3a - questions</title>
      <link>https://zellyn.com/2022/03/cs-ramble/3a/</link>
      <pubDate>Wed, 16 Mar 2022 20:03:00 -0400</pubDate>
      
      <guid>https://zellyn.com/2022/03/cs-ramble/3a/</guid>
      <description>&lt;p&gt;&lt;em&gt;These are the questions for set 3 of &lt;a href=&#34;../../../02/cs-ramble/&#34;&gt;A Ramble Around CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;questions-for-set-3&#34;&gt;Questions for set 3&lt;/h1&gt;
&lt;p&gt;Just one question this time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What are threads, processes, and fibers?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;We&amp;rsquo;ll start discussing the answers in the &lt;a href=&#34;../3b/&#34;&gt;next part&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>CS Ramble — Set 2e - bit twiddling</title>
      <link>https://zellyn.com/2022/02/cs-ramble/2e/</link>
      <pubDate>Sat, 26 Feb 2022 20:21:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/02/cs-ramble/2e/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is post is part of &lt;a href=&#34;../2a/&#34;&gt;set 2&lt;/a&gt; of &lt;a href=&#34;../&#34;&gt;A Ramble Around
CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In this post, we&amp;rsquo;re going to look at how to get, set, and otherwise
manipulate individual bits.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Bit twiddling and bit bashing are often used interchangeably with
bit manipulation, but sometimes exclusively refer to clever or
non-obvious ways or uses of bit manipulation, or tedious or
challenging low-level device control data manipulation tasks.&lt;/p&gt;
&lt;p&gt;The term bit twiddling dates from early computing hardware, where
computer operators would make adjustments by tweaking or twiddling
computer controls. As computer programming languages evolved,
programmers adopted the term to mean any handling of data that
involved bit-level computation.&lt;/p&gt;
&lt;p&gt;&amp;mdash;&lt;a href=&#34;https://en.wikipedia.org/wiki/Bit_manipulation#Terminology&#34;&gt;Wikipedia: Bit manipulation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;masks&#34;&gt;Masks&lt;/h2&gt;
&lt;p&gt;We often refer to clearing or setting all but a certain set of bits in
a number as “masking“. &lt;a href=&#34;https://stackoverflow.com/a/53722721/23582&#34;&gt;This Stackoverflow
answer&lt;/a&gt; gives a good
visual explanation of where the term comes from.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s say we want to check whether a number is even or odd. In
decimal, since the base itself is even, nothing can make the number
odd except the last digit, so we check whether the last digit is even
(0, 2, 4, 6, 8) or odd (1, 3, 5, 7, 9).&lt;/p&gt;
&lt;p&gt;In binary, again, the base (2) is even, so only the last digit can
make a number odd. So we check whether the last digit is even (0) or
odd (1). Well, that&amp;rsquo;s pretty simple!&lt;/p&gt;
&lt;p&gt;So how do we check the last digit only? The answer is to throw away,
or “mask out” all the other digits. In the &lt;a href=&#34;../2d/&#34;&gt;last part&lt;/a&gt;, we
showed that you can &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, or &lt;code&gt;xor&lt;/code&gt; whole numbers against each
other at once, and it performs a bitwise &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, or &lt;code&gt;xor&lt;/code&gt; on
corresponding pairs of bits. We can use that to clear out everything
but the last bit:&lt;/p&gt;
&lt;h4 id=&#34;even-example&#34;&gt;Even example:&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;01010110&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;mask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;00000001&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;a&lt;/strong&gt; &lt;em&gt;and&lt;/em&gt; &lt;strong&gt;mask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;00000000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;odd-example&#34;&gt;Odd example:&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;01010111&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;mask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;00000001&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;a&lt;/strong&gt; &lt;em&gt;and&lt;/em&gt; &lt;strong&gt;mask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;00000001&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can see that when &lt;code&gt;and&lt;/code&gt;ing a number with a mask, any digit that is
&lt;code&gt;0&lt;/code&gt; in the mask will be &lt;code&gt;0&lt;/code&gt; in the result, and any digit that is &lt;code&gt;1&lt;/code&gt;
in the mask will be unchanged by the mask. So we can clear all the
digits except the lowest (0ᵗʰ) by &lt;code&gt;and&lt;/code&gt;ing with &lt;code&gt;00000001&lt;/code&gt;, or just
&lt;code&gt;1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So by checking whether &lt;code&gt;n&amp;amp;1 == 0&lt;/code&gt;, we can tell if &lt;code&gt;n&lt;/code&gt; is even! In
Ruby, that would look like this&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# Ruby&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;is_even&lt;/span&gt;(n)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; n&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;puts&lt;/span&gt; is_even &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;    &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;puts&lt;/span&gt; is_even &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;    &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;puts&lt;/span&gt; is_even &lt;span style=&#34;color:#40a070&#34;&gt;2&lt;/span&gt;    &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;puts&lt;/span&gt; is_even &lt;span style=&#34;color:#40a070&#34;&gt;3&lt;/span&gt;    &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;puts&lt;/span&gt; is_even &lt;span style=&#34;color:#40a070&#34;&gt;99&lt;/span&gt;   &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;puts&lt;/span&gt; is_even &lt;span style=&#34;color:#40a070&#34;&gt;100&lt;/span&gt;  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;_or_-ing&#34;&gt;&lt;em&gt;Or&lt;/em&gt;-ing&lt;/h3&gt;
&lt;p&gt;As &lt;code&gt;and&lt;/code&gt; can be used to clear bits or leave them alone, &lt;code&gt;or&lt;/code&gt; can be
used to &lt;em&gt;set&lt;/em&gt; bits or leave them alone. For instance, to set the 5ᵗʰ
bit from lowest (counting from 0, of course), we can &lt;code&gt;or&lt;/code&gt; with
&lt;code&gt;0b100000&lt;/code&gt; == &lt;code&gt;32&lt;/code&gt; == &lt;code&gt;1 &amp;lt;&amp;lt; 5&lt;/code&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;01001101&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;mask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;00100000&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;a&lt;/strong&gt; &lt;em&gt;or&lt;/em&gt; &lt;strong&gt;mask&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;01101101&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In fact, in ASCII, the uppercase and lowercase English letters are
laid out so that they&amp;rsquo;re exactly the same, except for the 5th bit!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Python 3.9.10 &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;main, Jan &lt;span style=&#34;color:#40a070&#34;&gt;15&lt;/span&gt; 2022, 11:48:04&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Type &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;help&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;copyright&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;credits&amp;#34;&lt;/span&gt; or &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; more information.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; chr&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;0b01001101&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; chr&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;0b01001101 | 1&amp;lt;&amp;lt;5&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;m&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you can see in this partial excerpt from the ASCII table, the
uppercase and lowercase numbers differ by exactly &lt;code&gt;32&lt;/code&gt; ==
&lt;code&gt;1&amp;lt;&amp;lt;5&lt;/code&gt;. Neat, huh?&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;64:&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;@&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;C&lt;/td&gt;
&lt;td&gt;D&lt;/td&gt;
&lt;td&gt;E&lt;/td&gt;
&lt;td&gt;F&lt;/td&gt;
&lt;td&gt;G&lt;/td&gt;
&lt;td&gt;H&lt;/td&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;J&lt;/td&gt;
&lt;td&gt;K&lt;/td&gt;
&lt;td&gt;L&lt;/td&gt;
&lt;td&gt;&lt;mark&gt;&lt;strong&gt;M&lt;/strong&gt;&lt;/mark&gt;&lt;/td&gt;
&lt;td&gt;N&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;80:&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;P&lt;/td&gt;
&lt;td&gt;Q&lt;/td&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;S&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;U&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;W&lt;/td&gt;
&lt;td&gt;X&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Z&lt;/td&gt;
&lt;td&gt;[&lt;/td&gt;
&lt;td&gt;\ &lt;/td&gt;
&lt;td&gt;]&lt;/td&gt;
&lt;td&gt;^&lt;/td&gt;
&lt;td&gt;_&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;96:&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;`&lt;/td&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;c&lt;/td&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;e&lt;/td&gt;
&lt;td&gt;f&lt;/td&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;h&lt;/td&gt;
&lt;td&gt;i&lt;/td&gt;
&lt;td&gt;j&lt;/td&gt;
&lt;td&gt;k&lt;/td&gt;
&lt;td&gt;l&lt;/td&gt;
&lt;td&gt;&lt;mark&gt;&lt;strong&gt;m&lt;/strong&gt;&lt;/mark&gt;&lt;/td&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;td&gt;o&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;112:&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;q&lt;/td&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;s&lt;/td&gt;
&lt;td&gt;t&lt;/td&gt;
&lt;td&gt;u&lt;/td&gt;
&lt;td&gt;v&lt;/td&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;y&lt;/td&gt;
&lt;td&gt;z&lt;/td&gt;
&lt;td&gt;{&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;td&gt;}&lt;/td&gt;
&lt;td&gt;~&lt;/td&gt;
&lt;td&gt;del&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;masking-more-than-one-bit-at-a-time-hex-digits&#34;&gt;Masking more than one bit at a time: hex digits&lt;/h3&gt;
&lt;p&gt;As you may recall from the &lt;a href=&#34;../2b/#why-hexadecimal&#34;&gt;“Why hexadecimal?” section of part
b&lt;/a&gt;, hexadecimal is often used because it maps
nicely to binary: one hex digit to four bits:&lt;/p&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:180px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 180.346 76.32&#34;&gt;
&lt;path d=&#34;M2,32L24,32L24,2L2,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M24,32L46,32L46,2L24,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;35&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M46,32L68,32L68,2L46,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;57&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M68,32L90,32L90,2L68,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;79&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M90,32L112,32L112,2L90,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;101&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M112,32L134,32L134,2L112,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;123&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M134,32L156,32L156,2L134,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;145&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M156,32L178,32L178,2L156,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;167&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M82,46Q90,46 90,39&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,39Q2,46 9,46&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M53,46Q46,46 46,54&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M46,54Q46,46 38,46&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M82,46L53,46&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M38,46L9,46&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;46&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;B&lt;/text&gt;
&lt;path d=&#34;M170,46Q178,46 178,39&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M90,39Q90,46 97,46&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M141,46Q134,46 134,54&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M134,54Q134,46 126,46&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M170,46L141,46&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M126,46L97,46&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;134&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
define $brace {
  $offsety = $4 / 2
  $offsetx = $3/abs($3) * abs($offsety)
  $pointx = $1+0.5*$3
  $pointy = $2+$4
  arc from ($1+$offsetx,$2+$offsety) to ($1,$2) thin
  arc from ($1+$3,$2) to ($1+$3-$offsetx, $2+$offsety) thin
  arc from ($pointx-$offsetx,$pointy-$offsety) to ($pointx,$pointy) thin
  arc from ($pointx,$pointy) to ($pointx+$offsetx,$pointy-$offsety) thin
  line from 4th last arc.start to 2nd last arc.start thin
  line from last arc.end to 3rd last arc.end thin
}

box &#34;1&#34; fit fill lightblue
box same &#34;0&#34;
box same &#34;1&#34;
box same &#34;1&#34;
box same &#34;1&#34;
box same &#34;0&#34;
box same &#34;0&#34;
box same &#34;1&#34;

$width = 1st box.w.x - 4th box.e.x
$brace(4th box.se.x, 4th box.se.y-0.05, $width, -0.1)
text at last arc.start &#34;B&#34; below
$brace(last box.se.x, 4th box.se.y-0.05, $width, -0.1)
text at last arc.start &#34;9&#34; below
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;We can mask with &lt;code&gt;0b1111&lt;/code&gt; to get just the low four bits, which is the
same as masking with &lt;code&gt;0xF&lt;/code&gt; to get just the low hex digit. To get the
high digit, we can shift right, &lt;em&gt;then&lt;/em&gt; mask:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Javascript
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console.log(&lt;span style=&#34;color:#40a070&#34;&gt;0xB9&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0xF&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 9
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;console.log((&lt;span style=&#34;color:#40a070&#34;&gt;0xB9&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0xF&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 11
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console.log(((&lt;span style=&#34;color:#40a070&#34;&gt;0xB9&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;4&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0xF&lt;/span&gt;).toString(&lt;span style=&#34;color:#40a070&#34;&gt;16&lt;/span&gt;).toUpperCase())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// B
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;em&gt;I think that&amp;rsquo;s enough for now, eh? Until next time!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Actually, many programming languages have a convention that &lt;code&gt;0&lt;/code&gt;
is &lt;code&gt;false&lt;/code&gt; and anything else is &lt;code&gt;true&lt;/code&gt;, so in Python, you could
write this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# Python&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;is_even&lt;/span&gt;(n):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;not&lt;/span&gt; n&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#06287e&#34;&gt;is_odd&lt;/span&gt;(n):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;return&lt;/span&gt; n&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You could do more or less the same thing in C. In fact, &lt;code&gt;n&amp;amp;1&lt;/code&gt; is so
terse and&amp;mdash;once you get used to it&amp;mdash;clear, that you&amp;rsquo;d seldom create
an &lt;code&gt;is_even&lt;/code&gt; or &lt;code&gt;is_odd&lt;/code&gt; function in any language.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>
    
    
    
    <item>
      <title>CS Ramble — Set 2d - boolean logic</title>
      <link>https://zellyn.com/2022/02/cs-ramble/2d/</link>
      <pubDate>Fri, 25 Feb 2022 20:10:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/02/cs-ramble/2d/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is post is part of &lt;a href=&#34;../2a/&#34;&gt;set 2&lt;/a&gt; of &lt;a href=&#34;../&#34;&gt;A Ramble Around
CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In this post, we&amp;rsquo;re going to become more familiar with messing around
with individual bits: “bit twiddling”.&lt;/p&gt;
&lt;h2 id=&#34;and-or-not-etc&#34;&gt;And, Or, Not, etc.&lt;/h2&gt;
&lt;p&gt;When dealing with bits&amp;mdash;or with “boolean” values (&lt;code&gt;True&lt;/code&gt; or
&lt;code&gt;False&lt;/code&gt;)&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&amp;mdash;we talk about value a &lt;strong&gt;&lt;em&gt;and&lt;/em&gt;&lt;/strong&gt; value b, value a
&lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; value b, etc. They have more precise meanings than their
normal English usage:&lt;/p&gt;
&lt;p&gt;In normal usage, you might say, “I&amp;rsquo;ll wash the dishes if you take the
trash out &lt;strong&gt;&lt;em&gt;and&lt;/em&gt;&lt;/strong&gt; feed the dog.“ The first part (washing the dishes)
will be true if both (taking the trash out) &lt;strong&gt;&lt;em&gt;and&lt;/em&gt;&lt;/strong&gt; (feeding the
dog) are true. This actually corresponds pretty much exactly to
boolean values:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;a&lt;/th&gt;
&lt;th&gt;b&lt;/th&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;a &lt;em&gt;and&lt;/em&gt; b&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Using &lt;code&gt;1&lt;/code&gt; to represent &lt;code&gt;True&lt;/code&gt;, and &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;False&lt;/code&gt;, we could also
write that like so:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;a&lt;/th&gt;
&lt;th&gt;b&lt;/th&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;a &lt;em&gt;and&lt;/em&gt; b&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In English, though, when we say, “I&amp;rsquo;m going to take the trash out
&lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; feed the dog,” we usually mean we&amp;rsquo;ll do one or the other, but
not both.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;With boolean logic, “or” doesn&amp;rsquo;t imply that both won&amp;rsquo;t be true. Here&amp;rsquo;s
the truth table:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;a&lt;/th&gt;
&lt;th&gt;b&lt;/th&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;a &lt;em&gt;or&lt;/em&gt; b&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;And again with &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; (which we&amp;rsquo;ll stick to from now on):&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;a&lt;/th&gt;
&lt;th&gt;b&lt;/th&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;a &lt;em&gt;or&lt;/em&gt; b&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The word for “a or b, &lt;em&gt;but not both&lt;/em&gt;” is called “exclusive or”
(“xor”), and means what it sounds like:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;a&lt;/th&gt;
&lt;th&gt;b&lt;/th&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;a &lt;em&gt;xor&lt;/em&gt; b&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;False&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;True&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;mark&gt;False&lt;/mark&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There&amp;rsquo;s one more basic boolean operation: &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;a&lt;/th&gt;
&lt;th&gt; &lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;em&gt;not&lt;/em&gt; a&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;an-aside-circuits-and-gates&#34;&gt;An aside: circuits and gates&lt;/h3&gt;
&lt;p&gt;In an electrical circuit, we call the components that perform these
operations “gates”, and use the following symbols:&lt;/p&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:253px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 253.987 508.32&#34;&gt;
&lt;path d=&#34;M53,74L111,74&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M111,74Q147,74 147,38&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M147,38Q147,2 111,2&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M111,2L53,2&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M53,2L53,74&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;97&#34; y=&#34;38&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;AND&lt;/text&gt;
&lt;path d=&#34;M147,38L183,38&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;183&#34; y=&#34;38&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; a and b&lt;/text&gt;
&lt;path d=&#34;M53,23L17,23&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;17&#34; y=&#34;23&#34; text-anchor=&#34;end&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;a &lt;/text&gt;
&lt;path d=&#34;M53,52L17,52&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;17&#34; y=&#34;52&#34; text-anchor=&#34;end&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;b &lt;/text&gt;
&lt;path d=&#34;M53,146 L 82,146 Q 111,146 129,164 L 147,182&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M53,218 L 82,218 Q 111,218 129,200 L 147,182&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M53,146 L 61,156 Q 68,167 68,182 Q 68,196 61,207 L 53,218&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;99&#34; y=&#34;182&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;OR&lt;/text&gt;
&lt;path d=&#34;M147,182L183,182&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;183&#34; y=&#34;182&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; a or b&lt;/text&gt;
&lt;path d=&#34;M66,167L17,167&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;17&#34; y=&#34;167&#34; text-anchor=&#34;end&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;a &lt;/text&gt;
&lt;path d=&#34;M66,196L17,196&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;17&#34; y=&#34;196&#34; text-anchor=&#34;end&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;b &lt;/text&gt;
&lt;path d=&#34;M58,290 L 87,290 Q 116,290 134,308 L 152,326&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M58,362 L 87,362 Q 116,362 134,344 L 152,326&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M58,290 L 66,300 Q 73,311 73,326 Q 73,340 66,351 L 58,362&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M48,290 L 56,300 Q 63,311 63,326 Q 63,340 56,351 L 48,362&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;106&#34; y=&#34;326&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;XOR&lt;/text&gt;
&lt;path d=&#34;M152,326L188,326&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;188&#34; y=&#34;326&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; a xor b&lt;/text&gt;
&lt;path d=&#34;M61,311L18,311&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;18&#34; y=&#34;311&#34; text-anchor=&#34;end&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;a &lt;/text&gt;
&lt;path d=&#34;M61,340L18,340&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;18&#34; y=&#34;340&#34; text-anchor=&#34;end&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;b &lt;/text&gt;
&lt;path d=&#34;M57,506L57,434L129,470Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke-linejoin:round;stroke:rgb(0,0,0);&#34; /&gt;
&lt;circle cx=&#34;136&#34; cy=&#34;470&#34; r=&#34;7.2&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;85&#34; y=&#34;470&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;NOT&lt;/text&gt;
&lt;path d=&#34;M143,470L187,470&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;187&#34; y=&#34;470&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; a not b&lt;/text&gt;
&lt;path d=&#34;M57,455L18,455&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;18&#34; y=&#34;455&#34; text-anchor=&#34;end&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;a &lt;/text&gt;
&lt;path d=&#34;M57,484L18,484&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;18&#34; y=&#34;484&#34; text-anchor=&#34;end&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;b &lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;

AND: [
	right; line 0.4; arc
	up; arc
	left; line 0.4
	down; line 0.5
] at (0,0)
text at AND - (0.02,0) &#34;AND&#34; bold

line from AND.e right 0.25
text at last line.e &#34; a and b&#34; ljust
line from AND.w + (0,0.1) left 0.25
text at last line.w &#34;a &#34; rjust
line from AND.w - (0,0.1) left 0.25
text at last line.w &#34;b &#34; rjust

OR: [
	line from (0, 0.25) then right 0.4 then down 0.25 right 0.25 radius 0.25
	line from (0, -0.25) then right 0.4 then up 0.25 right 0.25 radius 0.25
	line from (0, 0.25) to (0.1,0.1) to (0.1, -0.1) to (0, -0.25) radius 0.25
] at (0,-1)
text at OR - (0.01,0)  &#34;OR&#34; bold

line from OR.e right 0.25
text at last line.e &#34; a or b&#34; ljust
line from OR.w + (0.09,0.1) left 0.34
text at last line.w &#34;a &#34; rjust
line from OR.w + (0.09,-0.1) left 0.34
text at last line.w &#34;b &#34; rjust

XOR: [
	line from (0, 0.25) then right 0.4 then down 0.25 right 0.25 radius 0.25
	line from (0, -0.25) then right 0.4 then up 0.25 right 0.25 radius 0.25
	line from (0, 0.25) to (0.1,0.1) to (0.1, -0.1) to (0, -0.25) radius 0.25
	line from (-0.07, 0.25) to (0.03,0.1) to (0.03, -0.1) to (-0.07, -0.25) radius 0.25
] at (0,-2)
text at XOR + (0.04,0) &#34;XOR&#34; bold

line from XOR.e right 0.25
text at last line.e &#34; a xor b&#34; ljust
line from XOR.w + (0.09,0.1) left 0.3
text at last line.w &#34;a &#34; rjust
line from XOR.w + (0.09,-0.1) left 0.3
text at last line.w &#34;b &#34; rjust

NOT: [
	line from (0, 0) then up 0.5 then right 0.5 down 0.25 close
	circle radius 0.05 with w at last line.e
] at (0,-3)
text at NOT - (0.105,0) &#34;NOT&#34; bold

line from NOT.e right 0.3
text at last line.e &#34; a not b&#34; ljust
line from NOT.w + (0,0.1) left 0.27
text at last line.w &#34;a &#34; rjust
line from NOT.w + (0,-0.1) left 0.27
text at last line.w &#34;b &#34; rjust
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;A guick search yielded a &lt;a href=&#34;https://youtu.be/kbXwFWMl6WA&#34;&gt;decent YouTube
video&lt;/a&gt; on simple gates. To see a more
complex example of how to combine several gates to do something
useful, go to &lt;a href=&#34;https://sciencedemos.org.uk/logic_gates.php&#34;&gt;this site&lt;/a&gt;
and choose the “4-bit addition” preset.&lt;/p&gt;
&lt;h2 id=&#34;anding-and-oring-bits&#34;&gt;“ANDing” and “ORing” bits&lt;/h2&gt;
&lt;p&gt;Just as we can &lt;code&gt;and&lt;/code&gt; together two bits, we can &lt;code&gt;and&lt;/code&gt; together two
numbers each made up of many bits: we just perform the &lt;code&gt;and&lt;/code&gt; bit by
bit:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0 1 0 1 0 1 1 0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;b&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1 0 1 1 0 0 1 0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;a &lt;em&gt;and&lt;/em&gt; b&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0 0 0 1 0 0 1 0 &lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Same with &lt;code&gt;or:&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0 1 0 1 0 1 1 0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;b&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1 0 1 1 0 0 1 0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;a &lt;em&gt;or&lt;/em&gt; b&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1 1 1 1 0 1 1 0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;xor:&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0 1 0 1 0 1 1 0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;b&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1 0 1 1 0 0 1 0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;a &lt;em&gt;or&lt;/em&gt; b&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1 1 1 0 0 1 0 0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;not:&lt;/code&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;a&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0 1 0 1 0 1 1 0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;&lt;em&gt;not&lt;/em&gt; a&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1 0 1 0 1 0 0 1&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;In Go code, these operations would use &lt;code&gt;&amp;amp;&lt;/code&gt; for &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt; for &lt;code&gt;or&lt;/code&gt;,
&lt;code&gt;^&lt;/code&gt; for &lt;code&gt;xor&lt;/code&gt;, and a prefixed &lt;code&gt;^&lt;/code&gt; for &lt;code&gt;not&lt;/code&gt; (most languages use a
prefixed &lt;code&gt;~&lt;/code&gt;):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;var&lt;/span&gt; a &lt;span style=&#34;color:#902000&#34;&gt;uint8&lt;/span&gt; = &lt;span style=&#34;color:#40a070&#34;&gt;0b01010110&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;var&lt;/span&gt; b &lt;span style=&#34;color:#902000&#34;&gt;uint8&lt;/span&gt; = &lt;span style=&#34;color:#40a070&#34;&gt;0b10110010&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;a:       %08b\n&amp;#34;&lt;/span&gt;, a)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;b:       %08b\n&amp;#34;&lt;/span&gt;, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;a and b: %08b\n&amp;#34;&lt;/span&gt;, a&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;a or b:  %08b\n&amp;#34;&lt;/span&gt;, a|b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;a xor b: %08b\n&amp;#34;&lt;/span&gt;, a^b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Printf&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;not a:   %08b\n&amp;#34;&lt;/span&gt;, ^a)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;a:       01010110
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;b:       10110010
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;a and b: 00010010
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;a or b:  11110110
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;a xor b: 11100100
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;not a:   10101001
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;*/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div align=&#34;center&#34;&gt;&lt;i&gt;(playground version &lt;a href=&#34;https://go.dev/play/p/9IbjCDynXWf&#34;&gt;here&lt;/a&gt;)&lt;/i&gt;&lt;/div&gt;
&lt;p&gt;In Python, it would look very similar:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0b01010110&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0b10110010&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;a:       &lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;{&lt;/span&gt;a&lt;span style=&#34;color:#70a0d0&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;08b&lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# a:       01010110&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;b:       &lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;{&lt;/span&gt;a&lt;span style=&#34;color:#70a0d0&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;08b&lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# b:       01010110&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;a and b: &lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;{&lt;/span&gt;a&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;b&lt;span style=&#34;color:#70a0d0&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;08b&lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# a and b: 00010010&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;a or b:  &lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;{&lt;/span&gt;a&lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt;b&lt;span style=&#34;color:#70a0d0&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;08b&lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# a or b:  11110110&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;a xor b: &lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;{&lt;/span&gt;a&lt;span style=&#34;color:#666&#34;&gt;^&lt;/span&gt;b&lt;span style=&#34;color:#70a0d0&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;08b&lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# a xor b: 11100100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# For not, we have to force the result back into the range [0,255].&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# (If the highest bit in a number is set, the number is&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# interpreted as a negative number.)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#4070a0&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;not a:   &lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;~&lt;/span&gt;a &lt;span style=&#34;color:#666&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;256&lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;08b&lt;/span&gt;&lt;span style=&#34;color:#70a0d0&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# not a:   10101001&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;In the &lt;a href=&#34;../2e/&#34;&gt;next part&lt;/a&gt;, we&amp;rsquo;ll learn how to read and change the
values of individual bits.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Named after &lt;a href=&#34;https://www.irishphilosophy.com/2014/12/08/ones-and-zeros/&#34;&gt;George Boole&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Although, of course, if I said, “I&amp;rsquo;ll wash the dishes if you
take the trash out &lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; feed the dog,“ and you did both, I&amp;rsquo;d still
wash the dishes!&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>
    
    
    
    <item>
      <title>CS Ramble — Set 2c - binary and bits</title>
      <link>https://zellyn.com/2022/02/cs-ramble/2c/</link>
      <pubDate>Thu, 17 Feb 2022 21:30:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/02/cs-ramble/2c/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is post is part of &lt;a href=&#34;../2a/&#34;&gt;set 2&lt;/a&gt; of &lt;a href=&#34;../&#34;&gt;A Ramble Around
CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In this post, we&amp;rsquo;re going to become more familiar with thinking in
binary.&lt;/p&gt;
&lt;h2 id=&#34;basics&#34;&gt;Basics&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s use our example byte from last time to show the anatomy of a byte: &lt;code&gt;0b10111001 == 0xB9 == 185&lt;/code&gt;&lt;/p&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:242px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 242.554 164.16&#34;&gt;
&lt;path d=&#34;M35,85L57,85L57,55L35,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;46&#34; y=&#34;70&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M57,85L79,85L79,55L57,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;68&#34; y=&#34;70&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M79,85L101,85L101,55L79,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;90&#34; y=&#34;70&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M101,85L123,85L123,55L101,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;112&#34; y=&#34;70&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M123,85L145,85L145,55L123,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;134&#34; y=&#34;70&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M145,85L167,85L167,55L145,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;156&#34; y=&#34;70&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M167,85L189,85L189,55L167,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;178&#34; y=&#34;70&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M189,85L211,85L211,55L189,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;200&#34; y=&#34;70&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;46&#34; y=&#34;93&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;128&lt;/text&gt;
&lt;text x=&#34;68&#34; y=&#34;93&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;64&lt;/text&gt;
&lt;text x=&#34;90&#34; y=&#34;93&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;32&lt;/text&gt;
&lt;text x=&#34;112&#34; y=&#34;93&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;16&lt;/text&gt;
&lt;text x=&#34;134&#34; y=&#34;93&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;156&#34; y=&#34;93&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;178&#34; y=&#34;93&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;200&#34; y=&#34;93&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;46&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;“high bit”&lt;/text&gt;
&lt;polygon points=&#34;46,55 41,43 50,43&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M46,27L46,49&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;200&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;“low bit”&lt;/text&gt;
&lt;polygon points=&#34;200,55 195,43 204,43&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M200,27L200,49&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M116,114Q123,114 123,107&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M35,107Q35,114 42,114&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M86,114Q79,114 79,121&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M79,121Q79,114 72,114&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M116,114L86,114&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M72,114L42,114&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;79&#34; y=&#34;131&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;B&lt;/text&gt;
&lt;text x=&#34;79&#34; y=&#34;151&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;“high nibble”    &lt;/text&gt;
&lt;path d=&#34;M204,114Q211,114 211,107&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M123,107Q123,114 130,114&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M174,114Q167,114 167,121&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M167,121Q167,114 160,114&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M204,114L174,114&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M160,114L130,114&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;167&#34; y=&#34;131&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;text x=&#34;167&#34; y=&#34;151&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;    “low nibble”&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
define $brace {
  $offsety = $4 / 2
  $offsetx = $3/abs($3) * abs($offsety)
  $pointx = $1+0.5*$3
  $pointy = $2+$4
  arc from ($1+$offsetx,$2+$offsety) to ($1,$2) thin
  arc from ($1+$3,$2) to ($1+$3-$offsetx, $2+$offsety) thin
  arc from ($pointx-$offsetx,$pointy-$offsety) to ($pointx,$pointy) thin
  arc from ($pointx,$pointy) to ($pointx+$offsetx,$pointy-$offsety) thin
  line from 4th last arc.start to 2nd last arc.start thin
  line from last arc.end to 3rd last arc.end thin
}

box &#34;1&#34; fit fill lightblue
box same &#34;0&#34;
box same &#34;1&#34;
box same &#34;1&#34;
box same &#34;1&#34;
box same &#34;0&#34;
box same &#34;0&#34;
box same &#34;1&#34;

text at 1st box .s &#34;128&#34; below italic small
text at 2nd box .s &#34;64&#34; below italic small
text at 3rd box .s &#34;32&#34; below italic small
text at 4th box .s &#34;16&#34; below italic small
text at 5th box .s &#34;8&#34; below italic small
text at 6th box .s &#34;4&#34; below italic small
text at 7th box .s &#34;2&#34; below italic small
text at 8th box .s &#34;1&#34; below italic small

text at 0.3 n of 1st box.n &#34;“high bit”&#34; italic
arrow from last text.s to first box.n

text at 0.3 n of last box.n &#34;“low bit”&#34; italic
arrow from last text.s to last box.n

$width = 1st box.w.x - 4th box.e.x
$brace(4th box.se.x, 4th box.se.y-0.15, $width, -0.1)
text at last arc.start &#34;B&#34; below &#34;“high nibble”    &#34; below italic
$brace(last box.se.x, 4th box.se.y-0.15, $width, -0.1)
text at last arc.start &#34;9&#34; below &#34;    “low nibble”&#34; below italic
&lt;/pre&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; the work “nibble” is less common these days than it used
to be, when computers had much less memory, and making maximum use
of every little bit was more important. Don&amp;rsquo;t be surprised if people
haven&amp;rsquo;t heard of it: you can name-drop “high nibble” to increase
your nerd cred!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;bit-shifting&#34;&gt;Bit shifting&lt;/h2&gt;
&lt;p&gt;In base 10, if we shift digits to the left or right, we&amp;rsquo;re multiplying
or dividing by 10:&lt;/p&gt;
&lt;div id=&#39;pikchr-1&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-1&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:125px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 125.28 365.76&#34;&gt;
&lt;path d=&#34;M30,46L59,46L59,16L30,16Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;45&#34; y=&#34;31&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M59,46L88,46L88,16L59,16Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;31&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;path d=&#34;M88,46L117,46L117,16L88,16Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;102&#34; y=&#34;31&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;5&lt;/text&gt;
&lt;path d=&#34;M2,147L30,147L30,117L2,117Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;16&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M30,147L59,147L59,117L30,117Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;45&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;path d=&#34;M59,147L88,147L88,117L59,117Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;5&lt;/text&gt;
&lt;path d=&#34;M88,147L117,147L117,117L88,117Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;102&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M30,46L2,117&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M59,46L30,117&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M88,46L59,117&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M117,46L88,117&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;82&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;shift ←&lt;/text&gt;
&lt;path d=&#34;M26,97L92,97L92,66L26,66Z&#34;  style=&#34;fill:rgb(255,255,255);stroke-width:2.16;stroke:rgb(255,255,255);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;82&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;shift ←&lt;/text&gt;
&lt;path d=&#34;M30,248L59,248L59,218L30,218Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;45&#34; y=&#34;233&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M59,248L88,248L88,218L59,218Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;233&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;path d=&#34;M88,248L117,248L117,218L88,218Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;102&#34; y=&#34;233&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;5&lt;/text&gt;
&lt;path d=&#34;M59,349L88,349L88,318L59,318Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;334&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M88,349L117,349L117,318L88,318Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;102&#34; y=&#34;334&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;path d=&#34;M30,248L59,318&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M59,248L88,318&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M88,248L117,318&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;283&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;shift →&lt;/text&gt;
&lt;path d=&#34;M41,298L106,298L106,268L41,268Z&#34;  style=&#34;fill:rgb(255,255,255);stroke-width:2.16;stroke:rgb(255,255,255);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;283&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;shift →&lt;/text&gt;
&lt;path d=&#34;M120,363L123,363L123,2L120,2Z&#34;  style=&#34;fill:rgb(238,238,238);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box &#34;1&#34; fit width 0.2 fill lightblue
box same &#34;8&#34;
box same &#34;5&#34;

box same at 1st box + (-1st box.width, -0.7) &#34;1&#34;
box same &#34;8&#34;
box same &#34;5&#34;
box same &#34;0&#34;

line from 1st box.sw to 4th box.nw dashed thin
line same from 2nd box.sw to 5th box.nw
line same from 3rd box.sw to 6th box.nw
line same from 3rd box.se to 7th box.nw

text at ((2nd box.x + 5th box.x)/2, (2nd box.s.y + 5th box.n.y)/2) &#34;shift ←&#34;
box at last text width last text.width height last text.height color white fill white
text at last &#34;shift ←&#34; italic

RIGHT: box same as 1st box at 1.4 s of 1st box &#34;1&#34;
box same &#34;8&#34;
box same &#34;5&#34;

box same at RIGHT + (1st box.width, -0.7) &#34;1&#34;
box same &#34;8&#34;

line from 5th last box.sw to 2nd last box.nw dashed thin
line same from 4th last box.sw to last box.nw
line same from 3rd last box.sw to last box.ne

text at ((4th last box.w.x + last box.w.x)/2, (4th last box.s.y + last box.n.y)/2) &#34;shift →&#34;
box at last text width last text.width height last text.height color white fill white
text at last &#34;shift →&#34; italic

box with nw at 3rd box.ne + (0.02,0.1) height (1st box.n.y - 3rd last box.s.y + 0.2) \
  width 0.02 color 0xEEEEEE fill 0xEEEEEE
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In base 2, if we shift digits to the left or right, we&amp;rsquo;re multiplying
or dividing by 2:&lt;/p&gt;
&lt;div id=&#39;pikchr-2&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-2&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:125px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 125.28 365.76&#34;&gt;
&lt;path d=&#34;M30,46L59,46L59,16L30,16Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;45&#34; y=&#34;31&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M59,46L88,46L88,16L59,16Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;31&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M88,46L117,46L117,16L88,16Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;102&#34; y=&#34;31&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M2,147L30,147L30,117L2,117Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;16&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M30,147L59,147L59,117L30,117Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;45&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M59,147L88,147L88,117L59,117Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M88,147L117,147L117,117L88,117Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;102&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M30,46L2,117&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M59,46L30,117&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M88,46L59,117&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M117,46L88,117&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;82&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;shift ←&lt;/text&gt;
&lt;path d=&#34;M26,97L92,97L92,66L26,66Z&#34;  style=&#34;fill:rgb(255,255,255);stroke-width:2.16;stroke:rgb(255,255,255);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;82&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;shift ←&lt;/text&gt;
&lt;path d=&#34;M30,248L59,248L59,218L30,218Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;45&#34; y=&#34;233&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M59,248L88,248L88,218L59,218Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;233&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M88,248L117,248L117,218L88,218Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;102&#34; y=&#34;233&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M59,349L88,349L88,318L59,318Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;334&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M88,349L117,349L117,318L88,318Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;102&#34; y=&#34;334&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M30,248L59,318&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M59,248L88,318&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M88,248L117,318&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;283&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;shift →&lt;/text&gt;
&lt;path d=&#34;M41,298L106,298L106,268L41,268Z&#34;  style=&#34;fill:rgb(255,255,255);stroke-width:2.16;stroke:rgb(255,255,255);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;283&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;shift →&lt;/text&gt;
&lt;path d=&#34;M120,363L123,363L123,2L120,2Z&#34;  style=&#34;fill:rgb(238,238,238);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box &#34;1&#34; fit width 0.2 fill lightblue
	box same &#34;1&#34;
box same &#34;1&#34;

box same at 1st box + (-1st box.width, -0.7) &#34;1&#34;
box same &#34;1&#34;
box same &#34;1&#34;
box same &#34;0&#34;

line from 1st box.sw to 4th box.nw dashed thin
line same from 2nd box.sw to 5th box.nw
line same from 3rd box.sw to 6th box.nw
line same from 3rd box.se to 7th box.nw

text at ((2nd box.x + 5th box.x)/2, (2nd box.s.y + 5th box.n.y)/2) &#34;shift ←&#34;
box at last text width last text.width height last text.height color white fill white
text at last &#34;shift ←&#34; italic

RIGHT: box same as 1st box at 1.4 s of 1st box &#34;1&#34;
box same &#34;1&#34;
box same &#34;1&#34;

box same at RIGHT + (1st box.width, -0.7) &#34;1&#34;
box same &#34;1&#34;

line from 5th last box.sw to 2nd last box.nw dashed thin
line same from 4th last box.sw to last box.nw
line same from 3rd last box.sw to last box.ne

text at ((4th last box.w.x + last box.w.x)/2, (4th last box.s.y + last box.n.y)/2) &#34;shift →&#34;
box at last text width last text.width height last text.height color white fill white
text at last &#34;shift →&#34; italic

box with nw at 3rd box.ne + (0.02,0.1) height (1st box.n.y - 3rd last box.s.y + 0.2) \
  width 0.02 color 0xEEEEEE fill 0xEEEEEE
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In code, we use &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; to shift left, and &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; to shift right:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# python:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#007020&#34;&gt;bin&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;0b111&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;))  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# 0b1110&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#007020&#34;&gt;bin&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;0b111&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;))  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# 0b11&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can shift by a lot if we have the space for it. In python, there&amp;rsquo;s
no real limit on how big numbers can be, so we can shift as far as we
like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#007020&#34;&gt;bin&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;10&lt;/span&gt;))     &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# 0b10000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;10&lt;/span&gt;)          &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# 1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;130&lt;/span&gt;)           &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# 1361129467683753853853498429727072845824&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In a language like Go, where the bit widths are fixed (because numbers
occupy a specific number of bytes), we can shift right off the end!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;var&lt;/span&gt; a &lt;span style=&#34;color:#902000&#34;&gt;uint8&lt;/span&gt; = &lt;span style=&#34;color:#40a070&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Println&lt;/span&gt;(a&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;7&lt;/span&gt;)  &lt;span style=&#34;&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;128&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Println&lt;/span&gt;(a&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#40a070&#34;&gt;8&lt;/span&gt;)  &lt;span style=&#34;&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;(Longer example with several different widths you can play around with &lt;a href=&#34;https://go.dev/play/p/UF31Z4jEBig&#34;&gt;here&lt;/a&gt;.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As you may have noticed, you can (within the bounds of the bit-width
of your variable), replace &lt;code&gt;2ⁿ &lt;/code&gt; with &lt;code&gt;1 &amp;lt;&amp;lt; n&lt;/code&gt;, and you can likewise
replace &lt;code&gt;x × 2ⁿ&lt;/code&gt; with &lt;code&gt;x &amp;lt;&amp;lt; n&lt;/code&gt;. You can also replace &lt;code&gt;⌊ˣ⁄₂⌋&lt;/code&gt; with
&lt;code&gt;x &amp;gt;&amp;gt; 1&lt;/code&gt; and &lt;code&gt;⌊x/2ⁿ⌋&lt;/code&gt; with &lt;code&gt;x &amp;gt;&amp;gt; n&lt;/code&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. In fact, in compiled languages,
your compiler will make these substitutions in the compiled code
whenever it can, because bit-shifting is faster than multiplication.&lt;/p&gt;
&lt;p&gt;Although that may take a few minutes to sink in, you&amp;rsquo;re already
familiar with it in good old base 10: how do you multiply by &lt;code&gt;1000&lt;/code&gt;?
Just shift left three places (add three zeros). Since you multiply by
&lt;code&gt;10&lt;/code&gt; each time you shift left once, you can multiply by &lt;code&gt;10³&lt;/code&gt; by
shifting left &lt;code&gt;3&lt;/code&gt; places.&lt;/p&gt;
&lt;h3 id=&#34;fractions&#34;&gt;Fractions&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;re going to get into it deeply, but you can of course write
fractions in other bases. In base &lt;code&gt;10&lt;/code&gt;, we divide by ten each time we
move to the right, so the digit to the right of the “decimal” point is
of course the ⅒ column. To represent ½, we use ⁵⁄₁₀, and write &lt;code&gt;0.5&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In octal, the column to the right of the point is the ⅛ column, so
we&amp;rsquo;d use ⁴⁄₈, and write &lt;code&gt;0.4₈&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In binary, it&amp;rsquo;s the ½ column already, so we&amp;rsquo;d use ½, and write
&lt;code&gt;0.1₂&lt;/code&gt;. ¼ would be &lt;code&gt;0.01₂&lt;/code&gt;, and ¾ would be &lt;code&gt;0.11₂&lt;/code&gt;. Weird, huh? But it
all makes sense:&lt;/p&gt;
&lt;div id=&#39;pikchr-3&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-3&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:235px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 235.109 106.56&#34;&gt;
&lt;path d=&#34;M2,37L26,37L26,2L2,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;14&#34; y=&#34;19&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M26,37L51,37L51,2L26,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;39&#34; y=&#34;19&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M51,37L76,37L76,2L51,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;63&#34; y=&#34;19&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M76,37L100,37L100,2L76,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;88&#34; y=&#34;19&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M100,37L125,37L125,2L100,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;112&#34; y=&#34;19&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;156.25%&#34; dominant-baseline=&#34;central&#34;&gt;.&lt;/text&gt;
&lt;path d=&#34;M125,37L149,37L149,2L125,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;137&#34; y=&#34;19&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M149,37L174,37L174,2L149,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;162&#34; y=&#34;19&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M174,37L199,37L199,2L174,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;186&#34; y=&#34;19&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M199,37L223,37L223,2L199,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;211&#34; y=&#34;19&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;14&#34; y=&#34;47&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;39&#34; y=&#34;47&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;63&#34; y=&#34;47&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;88&#34; y=&#34;47&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;137&#34; y=&#34;47&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;½&lt;/text&gt;
&lt;text x=&#34;162&#34; y=&#34;47&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;¼&lt;/text&gt;
&lt;text x=&#34;186&#34; y=&#34;47&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⅛&lt;/text&gt;
&lt;text x=&#34;211&#34; y=&#34;47&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1⁄16&lt;/text&gt;
&lt;text x=&#34;112&#34; y=&#34;91&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;¾ ＝ ½ + ¼&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box &#34;0&#34; big fit fill lightblue
box same &#34;0&#34; big
box same &#34;0&#34; big
box same &#34;0&#34; big
box same &#34;.&#34; big big bold
box same &#34;1&#34; big
box same &#34;1&#34; big
box same &#34;0&#34; big
box same &#34;0&#34; big

text at 1st box .s &#34;8&#34; below italic
text at 2nd box .s &#34;4&#34; below italic
text at 3rd box .s &#34;2&#34; below italic
text at 4th box .s &#34;1&#34; below italic
text at 6th box .s &#34;½&#34; below italic
text at 7th box .s &#34;¼&#34; below italic
text at 8th box .s &#34;⅛&#34; below italic
text at 9th box .s &#34;1⁄16&#34; below italic

text at 0.5 s of 5th box &#34;¾ ＝ ½ + ¼&#34; big
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;We&amp;rsquo;ll explore how to work with the values of individual bits or
true/false values in the &lt;a href=&#34;../2d/&#34;&gt;next part&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;If you&amp;rsquo;re a bit rusty, &lt;code&gt;⌊a⌋&lt;/code&gt; means the next integer (whole
number) equal to or less than &lt;code&gt;a&lt;/code&gt;. It&amp;rsquo;s called the “floor” of &lt;code&gt;a&lt;/code&gt;:
&lt;code&gt;⌊2⌋&lt;/code&gt; ＝ &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;⌊1.9⌋&lt;/code&gt; ＝ &lt;code&gt;1&lt;/code&gt;, and &lt;code&gt;⌊−1.9⌋&lt;/code&gt; ＝ &lt;code&gt;−2&lt;/code&gt;. Similarly,
&lt;code&gt;⌈a⌉&lt;/code&gt; is the “ceiling” of &lt;code&gt;a&lt;/code&gt;: &lt;code&gt;⌈2⌉&lt;/code&gt; ＝ &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;⌈1.9⌉&lt;/code&gt; ＝ &lt;code&gt;2&lt;/code&gt;, and
&lt;code&gt;⌈−1.9⌉&lt;/code&gt; ＝ &lt;code&gt;−1&lt;/code&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>
    
    
    
    <item>
      <title>CS Ramble — Set 2b - bases</title>
      <link>https://zellyn.com/2022/02/cs-ramble/2b/</link>
      <pubDate>Wed, 16 Feb 2022 20:00:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/02/cs-ramble/2b/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is post is part of &lt;a href=&#34;../2a/&#34;&gt;set 2&lt;/a&gt; of &lt;a href=&#34;../&#34;&gt;A Ramble Around
CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;counting-in-tens-like-a-normal-human&#34;&gt;Counting in tens, like a normal human&lt;/h1&gt;
&lt;p&gt;We humans have 10 fingers, and we use ten digits for counting: &lt;strong&gt;&lt;code&gt;0, 1, 2, 3, 4, 5, 6, 7, 8, 9&lt;/code&gt;&lt;/strong&gt;. You can imagine that counting up works
kind of like a car odometer. We have wheels with 10 digits on each of
them, 0&amp;ndash;9. We turn the right-most wheel one digit to add one:&lt;/p&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:142px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 142.629 267.84&#34;&gt;
&lt;path d=&#34;M2,32L25,32L25,2L2,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,32L48,32L48,2L25,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,32L71,32L71,2L48,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,32L94,32L94,2L71,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,32L117,32L117,2L94,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,32L140,32L140,2L117,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;polygon points=&#34;71,58 68,50 74,50&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,35L71,54&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,90L25,90L25,60L2,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,90L48,90L48,60L25,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,90L71,90L71,60L48,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,90L94,90L94,60L71,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,90L117,90L117,60L94,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,90L140,90L140,60L117,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;85&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;71,116 68,108 74,108&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,93L71,112&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,149L25,149L25,118L2,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,149L48,149L48,118L25,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,149L71,149L71,118L48,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,149L94,149L94,118L71,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,149L117,149L117,118L94,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,149L140,149L140,118L117,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;71,174 68,167 74,167&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,151L71,171&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,207L25,207L25,177L2,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;192&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,207L48,207L48,177L25,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;192&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,207L71,207L71,177L48,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;192&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,207L94,207L94,177L71,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;192&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,207L117,207L117,177L94,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;192&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,207L140,207L140,177L117,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;182&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;202&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;polygon points=&#34;71,233 68,225 74,225&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,210L71,229&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,265L25,265L25,235L2,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,265L48,265L48,235L25,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,265L71,265L71,235L48,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,265L94,265L94,235L71,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,265L117,265L117,235L94,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,265L140,265L140,235L117,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold above &#34;1&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold above &#34;2&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;2&#34; bold
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;To count to numbers higher that &lt;code&gt;9&lt;/code&gt;, we start counting up in the
second-rightmost digit. The wheels are rigged up so that when a wheel
goes all the way around back to &lt;code&gt;0&lt;/code&gt;, it turns the wheel to its left
once, “carrying the 1”:&lt;/p&gt;
&lt;div id=&#39;pikchr-1&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-1&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:142px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 142.629 151.2&#34;&gt;
&lt;path d=&#34;M2,32L25,32L25,2L2,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,32L48,32L48,2L25,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,32L71,32L71,2L48,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,32L94,32L94,2L71,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,32L117,32L117,2L94,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,32L140,32L140,2L117,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;polygon points=&#34;71,58 68,50 74,50&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,35L71,54&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,90L25,90L25,60L2,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,90L48,90L48,60L25,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,90L71,90L71,60L48,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,90L94,90L94,60L71,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,90L117,90L117,60L94,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;105&#34; y=&#34;85&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M117,90L140,90L140,60L117,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;85&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;polygon points=&#34;71,116 68,108 74,108&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,93L71,112&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,149L25,149L25,118L2,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,149L48,149L48,118L25,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,149L71,149L71,118L48,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,149L94,149L94,118L71,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,149L117,149L117,118L94,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M117,149L140,149L140,118L117,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;9&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold above &#34;1&#34; bold below
box same &#34;9&#34; bold above &#34;0&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
box same &#34;0&#34; bold
&lt;/pre&gt;
&lt;/div&gt;
&lt;h1 id=&#34;counting-in-eights-like-an-octopus&#34;&gt;Counting in eights&amp;hellip; like an octopus?&lt;/h1&gt;
&lt;p&gt;So, let&amp;rsquo;s imagine that octopuses with their eight appendages only use
eight digits for counting: &lt;strong&gt;&lt;code&gt;0, 1, 2, 3, 4, 5, 6, 7&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I suppose they&amp;rsquo;d count the same way, but start counting up on the
second-rightmost digit after &lt;code&gt;7&lt;/code&gt;. And the wheels on their odometers
would have only digits 0&amp;ndash;7:&lt;/p&gt;
&lt;div id=&#39;pikchr-2&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-2&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:142px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 142.629 369.36&#34;&gt;
&lt;path d=&#34;M2,32L25,32L25,2L2,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,32L48,32L48,2L25,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,32L71,32L71,2L48,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,32L94,32L94,2L71,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,32L117,32L117,2L94,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,32L140,32L140,2L117,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;polygon points=&#34;71,58 68,50 74,50&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,35L71,54&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,90L25,90L25,60L2,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,90L48,90L48,60L25,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,90L71,90L71,60L48,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,90L94,90L94,60L71,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,90L117,90L117,60L94,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,90L140,90L140,60L117,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;85&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;71,116 68,108 74,108&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,93L71,112&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,149L25,149L25,118L2,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,149L48,149L48,118L25,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,149L71,149L71,118L48,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,149L94,149L94,118L71,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,149L117,149L117,118L94,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,149L140,149L140,118L117,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;71,212 68,204 74,204&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,157L71,208&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M2,250L25,250L25,220L2,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,250L48,250L48,220L25,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,250L71,250L71,220L48,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,250L94,250L94,220L71,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,250L117,250L117,220L94,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,250L140,250L140,220L117,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;7&lt;/text&gt;
&lt;polygon points=&#34;71,276 68,268 74,268&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,253L71,272&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,308L25,308L25,278L2,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;293&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,308L48,308L48,278L25,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;293&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,308L71,308L71,278L48,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;293&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,308L94,308L94,278L71,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;293&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,308L117,308L117,278L94,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;283&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;105&#34; y=&#34;303&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M117,308L140,308L140,278L117,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;283&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;7&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;303&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;polygon points=&#34;71,334 68,327 74,327&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,311L71,330&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,367L25,367L25,336L2,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,367L48,367L48,336L25,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,367L71,367L71,336L48,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,367L94,367L94,336L71,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,367L117,367L117,336L94,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M117,367L140,367L140,336L117,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold above &#34;1&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
arrow from 0.06 s of 3rd last box.sw then 0.38 s thin dashed; right

box at 0.6 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;7&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold above &#34;1&#34; bold below
box same &#34;7&#34; bold above &#34;0&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
box same &#34;0&#34; bold
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;So octopi would count:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0&lt;/li&gt;
&lt;li&gt;1&lt;/li&gt;
&lt;li&gt;2&lt;/li&gt;
&lt;li&gt;3&lt;/li&gt;
&lt;li&gt;4&lt;/li&gt;
&lt;li&gt;5&lt;/li&gt;
&lt;li&gt;6&lt;/li&gt;
&lt;li&gt;7 &amp;mdash; &lt;em&gt;add one, carry the 1:&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;10&lt;/li&gt;
&lt;li&gt;11&lt;/li&gt;
&lt;li&gt;12&lt;/li&gt;
&lt;li&gt;13&lt;/li&gt;
&lt;li&gt;14&lt;/li&gt;
&lt;li&gt;15&lt;/li&gt;
&lt;li&gt;16&lt;/li&gt;
&lt;li&gt;17 &amp;mdash; &lt;em&gt;add one, carry the 1:&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;20&lt;/li&gt;
&lt;li&gt;21&lt;/li&gt;
&lt;li&gt; ⋮&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;names-for-these-things&#34;&gt;Names for these things&lt;/h2&gt;
&lt;p&gt;We call the way we count “base 10”, or “decimal”. The octopodes use
“base 8”, also known as “octal”.&lt;/p&gt;
&lt;h2 id=&#34;getting-used-to-it&#34;&gt;Getting used to it&lt;/h2&gt;
&lt;p&gt;At this point&amp;mdash;weirdly!&amp;mdash;you probably have most of what you need to
understand different bases. The rest is working through the
implications, getting used to it, figuring out &lt;em&gt;why&lt;/em&gt; and &lt;em&gt;when&lt;/em&gt; using
different bases is useful, and learning how to write numbers in
different bases in your code.&lt;/p&gt;
&lt;h1 id=&#34;different-bases-and-computers&#34;&gt;Different bases and computers&lt;/h1&gt;
&lt;h2 id=&#34;base-2-binary&#34;&gt;Base 2: “Binary”&lt;/h2&gt;
&lt;p&gt;While it&amp;rsquo;s possible to create an
“&lt;a href=&#34;https://www.computerhistory.org/brochures/analog-computers/&#34;&gt;analog&lt;/a&gt;”
computer that uses different voltages corresponding smoothly to
different quantities, and there&amp;rsquo;s a rich history of &lt;a href=&#34;https://en.wikipedia.org/wiki/Mechanical_computer#Examples&#34;&gt;mechanical
computers&lt;/a&gt;,
most modern computers are electrical, and “digital”: inside, they use
only &lt;strong&gt;&lt;code&gt;on&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;off&lt;/code&gt;&lt;/strong&gt;, like a light switch. Using &lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt; for
“on”, and &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; for “off”.&lt;/p&gt;
&lt;p&gt;Base 2 is like counting if you&amp;rsquo;re a &amp;hellip; bird? using only your wings?
&amp;hellip; and have only two limbs to count on. It works just like the other
bases we&amp;rsquo;ve played with, except you&amp;rsquo;re “carrying the 1” a &lt;strong&gt;lot&lt;/strong&gt;!&lt;/p&gt;
&lt;div id=&#39;pikchr-3&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-3&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:142px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 142.629 501.12&#34;&gt;
&lt;path d=&#34;M2,32L25,32L25,2L2,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,32L48,32L48,2L25,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,32L71,32L71,2L48,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,32L94,32L94,2L71,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,32L117,32L117,2L94,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,32L140,32L140,2L117,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;polygon points=&#34;71,58 68,50 74,50&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,35L71,54&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,90L25,90L25,60L2,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,90L48,90L48,60L25,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,90L71,90L71,60L48,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,90L94,90L94,60L71,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,90L117,90L117,60L94,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,90L140,90L140,60L117,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;85&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;71,116 68,108 74,108&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,93L71,112&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,149L25,149L25,118L2,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,149L48,149L48,118L25,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,149L71,149L71,118L48,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,149L94,149L94,118L71,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,149L117,149L117,118L94,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,149L140,149L140,118L117,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;71,174 68,167 74,167&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,151L71,171&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,207L25,207L25,177L2,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;192&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,207L48,207L48,177L25,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;192&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,207L71,207L71,177L48,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;192&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,207L94,207L94,177L71,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;192&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,207L117,207L117,177L94,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;182&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;105&#34; y=&#34;202&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M117,207L140,207L140,177L117,177Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;182&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;202&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;polygon points=&#34;71,233 68,225 74,225&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,210L71,229&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,265L25,265L25,235L2,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,265L48,265L48,235L25,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,265L71,265L71,235L48,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,265L94,265L94,235L71,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,265L117,265L117,235L94,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M117,265L140,265L140,235L117,235Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;polygon points=&#34;71,291 68,283 74,283&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,268L71,287&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,324L25,324L25,293L2,293Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;308&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,324L48,324L48,293L25,293Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;308&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,324L71,324L71,293L48,293Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;308&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,324L94,324L94,293L71,293Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;308&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,324L117,324L117,293L94,293Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;308&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M117,324L140,324L140,293L117,293Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;298&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;318&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;71,349 68,342 74,342&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,326L71,346&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,382L25,382L25,352L2,352Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;367&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,382L48,382L48,352L25,352Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;367&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,382L71,382L71,352L48,352Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;367&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,382L94,382L94,352L71,352Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;367&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,382L117,382L117,352L94,352Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;367&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M117,382L140,382L140,352L117,352Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;367&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;71,408 68,400 74,400&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,385L71,404&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,440L25,440L25,410L2,410Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;425&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,440L48,440L48,410L25,410Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;425&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,440L71,440L71,410L48,410Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;425&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,440L94,440L94,410L71,410Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;415&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;82&#34; y=&#34;435&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M94,440L117,440L117,410L94,410Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;415&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;105&#34; y=&#34;435&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,440L140,440L140,410L117,410Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;415&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;435&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;polygon points=&#34;71,466 68,458 74,458&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,443L71,462&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,498L25,498L25,468L2,468Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;483&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,498L48,498L48,468L25,468Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;483&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,498L71,498L71,468L48,468Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;483&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,498L94,498L94,468L71,468Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;483&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M94,498L117,498L117,468L94,468Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;483&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,498L140,498L140,468L117,468Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;483&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold above &#34;1&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold above &#34;1&#34; bold below
box same &#34;1&#34; bold above &#34;0&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
box same &#34;0&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
box same &#34;0&#34; bold above &#34;1&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
box same &#34;1&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold above &#34;1&#34; bold below
box same &#34;1&#34; bold above &#34;0&#34; bold below
box same &#34;1&#34; bold above &#34;0&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
box same &#34;0&#34; bold
box same &#34;0&#34; bold
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Instead of a “ones digit”, “tens digit”, “hundreds digit”, etc., we
have a “ones digit”, a “twos digit”, a “fours digit”, an “eights
digit”, a “sixteens digit”, etc. Just like with base 10, each time you
move one digit to the left, you multiply by the base. &lt;em&gt;(Our gangly
molluscan friends would have a “ones digit”, an “eights digit”, a
“sixty-fours digit”, etc.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If we have four switches, we can represent &lt;code&gt;0101&lt;/code&gt; (&lt;code&gt;5&lt;/code&gt; in decimal)
using “·” for off and “✓” for on like this:&lt;/p&gt;
&lt;div id=&#39;pikchr-4&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-4&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:96px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 96.48 70.848&#34;&gt;
&lt;path d=&#34;M2,52L25,52L25,22L2,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;path d=&#34;M25,52L48,52L48,22L25,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:3.2562;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;✓&lt;/text&gt;
&lt;path d=&#34;M48,52L71,52L71,22L48,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.46171;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;path d=&#34;M71,52L94,52L94,22L71,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:3.28884;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;✓&lt;/text&gt;
&lt;text x=&#34;13&#34; y=&#34;60&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;36&#34; y=&#34;60&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;59&#34; y=&#34;60&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;82&#34; y=&#34;60&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;13&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;36&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;59&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;82&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box &#34;·&#34; fit fill lightblue thin
box same &#34;✓&#34; thick thick
box same &#34;·&#34; thin thin
box same &#34;✓&#34; thick thick

text at 1st box .s &#34;8&#34; below italic small
text at 2nd box .s &#34;4&#34; below italic small
text at 3rd box .s &#34;2&#34; below italic small
text at 4th box .s &#34;1&#34; below italic small

text at 1st box .n &#34;0&#34; above
text at 2nd box .n &#34;1&#34; above bold
text at 3rd box .n &#34;0&#34; above
text at 4th box .n &#34;1&#34; above bold
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;We can then use wires to carry these signals around, like to a &lt;a href=&#34;https://www.jameco.com/Jameco/workshop/TechTip/working-with-seven-segment-displays.html&#34;&gt;Seven
Segment
Display&lt;/a&gt;:&lt;/p&gt;
&lt;div id=&#39;pikchr-5&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-5&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:509px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 509.811 273.219&#34;&gt;
&lt;path d=&#34;M390,182L500,182L500,9L390,9Z&#34;  style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,254L25,254L25,224L2,224Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;239&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;path d=&#34;M25,254L48,254L48,224L25,224Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:3.2562;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;239&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;✓&lt;/text&gt;
&lt;path d=&#34;M48,254L71,254L71,224L48,224Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.46171;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;239&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;path d=&#34;M71,254L94,254L94,224L71,224Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:3.28884;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;239&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;✓&lt;/text&gt;
&lt;path d=&#34;M413,90L405,82L405,46L413,37L422,46L422,82Z&#34;  style=&#34;fill:rgb(255,0,0);stroke-width:2.16;stroke-linejoin:round;stroke:rgb(255,0,0);&#34; /&gt;
&lt;path d=&#34;M419,32L427,23L463,23L472,32L463,41L427,41Z&#34;  style=&#34;fill:rgb(255,0,0);stroke-width:2.16;stroke-linejoin:round;stroke:rgb(255,0,0);&#34; /&gt;
&lt;path d=&#34;M477,37L468,46L468,82L477,90L486,82L486,46Z&#34;  style=&#34;fill:rgb(68,68,68);stroke-width:2.16;stroke-linejoin:round;stroke:rgb(68,68,68);&#34; /&gt;
&lt;path d=&#34;M477,100L468,109L468,145L477,154L486,145L486,109Z&#34;  style=&#34;fill:rgb(255,0,0);stroke-width:2.16;stroke-linejoin:round;stroke:rgb(255,0,0);&#34; /&gt;
&lt;path d=&#34;M472,159L463,150L427,150L419,159L427,167L463,167Z&#34;  style=&#34;fill:rgb(255,0,0);stroke-width:2.16;stroke-linejoin:round;stroke:rgb(255,0,0);&#34; /&gt;
&lt;path d=&#34;M413,154L405,145L405,109L413,100L422,109L422,145Z&#34;  style=&#34;fill:rgb(68,68,68);stroke-width:2.16;stroke-linejoin:round;stroke:rgb(68,68,68);&#34; /&gt;
&lt;path d=&#34;M419,95L427,87L463,87L472,95L463,104L427,104Z&#34;  style=&#34;fill:rgb(255,0,0);stroke-width:2.16;stroke-linejoin:round;stroke:rgb(255,0,0);&#34; /&gt;
&lt;path d=&#34;M383,189L507,189L507,2L383,2Z&#34;  style=&#34;fill:none;stroke-width:3.24;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;262&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;36&#34; y=&#34;262&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;59&#34; y=&#34;262&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;82&#34; y=&#34;262&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M13,224L13,78L383,78&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke-linejoin:round;stroke:rgb(128,128,128);&#34; /&gt;
&lt;path d=&#34;M36,224L36,90L383,90&#34;  style=&#34;fill:none;stroke-width:3.24;stroke-linejoin:round;stroke:rgb(139,0,0);&#34; /&gt;
&lt;path d=&#34;M59,224L59,101L383,101&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke-linejoin:round;stroke:rgb(128,128,128);&#34; /&gt;
&lt;path d=&#34;M82,224L82,113L383,113&#34;  style=&#34;fill:none;stroke-width:3.24;stroke-linejoin:round;stroke:rgb(139,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box &#34;·&#34; fit fill lightblue thin
box same &#34;✓&#34; thick thick
box same &#34;·&#34; thin thin
box same &#34;✓&#34; thick thick

$s = 0.06
$b = 0.25
$g = 0.05
$on = red
$off = 0x444444

[
line up $s left $s then up $b then up $s right $s then down $s right $s then down $b close fill $on color $on
line from $g ne of last.n up $s right $s then right $b then down $s right $s then down $s left $s then left $b close fill $on color $on
line from $g se of last.e down $s left $s then down $b then down $s right $s then up $s right $s then up $b close fill $off color $off
line from 1.4*$g s of last.s down $s left $s then down $b then down $s right $s then up $s right $s then up $b close fill $on color $on
line from $g sw of last.s up $s left $s then left $b then down $s left $s then down $s right $s then right $b close fill $on color $on
line from $g nw of last.w up $s left $s then up $b then up $s right $s then down $s right $s then down $b close fill $off color $off
line from $g ne of last.n up $s right $s then right $b then down $s right $s then down $s left $s then left $b close fill $on color $on
] at (3,1)

box at last.c behind last width last.width + 0.2 height last.height + 0.2 fill black
box at last.c width last.width + 0.1 height last.height + 0.1 thick

text at 1st box .s &#34;8&#34; below italic small
text at 2nd box .s &#34;4&#34; below italic small
text at 3rd box .s &#34;2&#34; below italic small
text at 4th box .s &#34;1&#34; below italic small

line from 1st box.n up until even with 0.12 n of last box.c then right until even with last box.w thin color grey
line from 2nd box.n up until even with 0.04 n of last box.c then right until even with last box.w thick color darkred
line from 3rd box.n up until even with 0.04 s of last box.c then right until even with last box.w thin color grey
line from 4th box.n up until even with 0.12 s of last box.c then right until even with last box.w thick color darkred
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You can play around with a circuit simulation of a seven segment
display I found on everycircuit.com
&lt;a href=&#34;https://everycircuit.com/circuit/6711990626287616&#34;&gt;here&lt;/a&gt;. &lt;em&gt;Note that
in the diagram above, I left out the “decoder” you need to convert
from 4-wire (4-bit) &lt;code&gt;0–9&lt;/code&gt; binary data to 7-wire segment on/off data.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;bits&#34;&gt;“Bits”&lt;/h3&gt;
&lt;p&gt;We call each &lt;strong&gt;bi&lt;/strong&gt;nary &lt;strong&gt;i&lt;/strong&gt;nformation dig&lt;strong&gt;it&lt;/strong&gt; a “bit”: &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; or
&lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt;. A bit is also the most basic “piece” or “unit” of information
you can have: true/false, yes/no, +/-, on/off, &lt;em&gt;(heads/tails,
left/right, up/down, &amp;hellip;)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In many programming languages, you can use binary numbers directly in
your programs by using a prefix of &lt;code&gt;0b&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# A `0b` prefix indicates a binary number:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0b101&lt;/span&gt;      &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# 5: 1×1 + 0×2 + 1×4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0b11111111&lt;/span&gt; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# 255: 1×1 + 1×2 + 1×4 + 1×8 + 1×16 + 1×32 + 1×64 + 1×128&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# In many languages, you can even break the digis into&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# groups for readability. Here we use groups of 4 bits:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0b1000_0000&lt;/span&gt; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# 128&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;base-16-hexadecimal&#34;&gt;Base 16: “Hexadecimal”&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s very common to use base 16, or “hexadecimal”, numbers in computer
programs. To expand our repertoire to 16 digits, we use the usual
&lt;code&gt;0–9&lt;/code&gt; and then add on &lt;code&gt;A–F&lt;/code&gt;: &lt;code&gt;0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other than that, things work the same as before; the odometer wheels
just have 16 digits:&lt;/p&gt;
&lt;div id=&#39;pikchr-6&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-6&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:142px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 142.629 587.52&#34;&gt;
&lt;path d=&#34;M2,32L25,32L25,2L2,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,32L48,32L48,2L25,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,32L71,32L71,2L48,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,32L94,32L94,2L71,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,32L117,32L117,2L94,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,32L140,32L140,2L117,2Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;polygon points=&#34;71,58 68,50 74,50&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,35L71,54&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,90L25,90L25,60L2,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,90L48,90L48,60L25,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,90L71,90L71,60L48,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,90L94,90L94,60L71,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,90L117,90L117,60L94,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;75&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,90L140,90L140,60L117,60Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;85&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;71,116 68,108 74,108&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,93L71,112&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,149L25,149L25,118L2,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,149L48,149L48,118L25,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,149L71,149L71,118L48,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,149L94,149L94,118L71,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,149L117,149L117,118L94,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,149L140,149L140,118L117,118Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;133&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;71,212 68,204 74,204&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,157L71,208&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M2,250L25,250L25,220L2,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,250L48,250L48,220L25,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,250L71,250L71,220L48,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,250L94,250L94,220L71,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,250L117,250L117,220L94,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,250L140,250L140,220L117,220Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;235&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;polygon points=&#34;71,276 68,268 74,268&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,253L71,272&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,308L25,308L25,278L2,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;293&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,308L48,308L48,278L25,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;293&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,308L71,308L71,278L48,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;293&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,308L94,308L94,278L71,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;293&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,308L117,308L117,278L94,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;293&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,308L140,308L140,278L117,278Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;283&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;303&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;A&lt;/text&gt;
&lt;polygon points=&#34;71,334 68,327 74,327&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,311L71,330&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,367L25,367L25,336L2,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,367L48,367L48,336L25,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,367L71,367L71,336L48,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,367L94,367L94,336L71,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,367L117,367L117,336L94,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,367L140,367L140,336L117,336Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;352&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;A&lt;/text&gt;
&lt;polygon points=&#34;71,430 68,422 74,422&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,375L71,426&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);stroke-dasharray:7.2,7.2;&#34; /&gt;
&lt;path d=&#34;M2,468L25,468L25,438L2,438Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;453&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,468L48,468L48,438L25,438Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;453&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,468L71,468L71,438L48,438Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;453&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,468L94,468L94,438L71,438Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;453&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,468L117,468L117,438L94,438Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;453&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M117,468L140,468L140,438L117,438Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;453&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;F&lt;/text&gt;
&lt;polygon points=&#34;71,494 68,486 74,486&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,471L71,490&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,527L25,527L25,496L2,496Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;511&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,527L48,527L48,496L25,496Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;511&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,527L71,527L71,496L48,496Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;511&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,527L94,527L94,496L71,496Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;511&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,527L117,527L117,496L94,496Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;501&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;105&#34; y=&#34;522&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M117,527L140,527L140,496L117,496Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;501&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;F&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;522&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;polygon points=&#34;71,552 68,545 74,545&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M71,529L71,549&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M2,585L25,585L25,555L2,555Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;570&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M25,585L48,585L48,555L25,555Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;36&#34; y=&#34;570&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M48,585L71,585L71,555L48,555Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;59&#34; y=&#34;570&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M71,585L94,585L94,555L71,555Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;82&#34; y=&#34;570&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M94,585L117,585L117,555L94,555Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;105&#34; y=&#34;570&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M117,585L140,585L140,555L117,555Z&#34;  style=&#34;fill:rgb(51,51,51);stroke-width:2.16;stroke:rgb(238,238,238);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;570&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(238,238,238)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold above &#34;1&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
arrow from 0.06 s of 3rd last box.sw then 0.38 s thin dashed; right

box at 0.6 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;9&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold
box same &#34;9&#34; bold above &#34;A&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold
box same &#34;A&#34; bold
arrow from 0.06 s of 3rd last box.sw then 0.38 s thin dashed; right

box at 0.6 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;F&#34; bold
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;0&#34; bold above &#34;1&#34; bold below
box same &#34;F&#34; bold above &#34;0&#34; bold below
arrow from 0.02 s of 3rd last box.sw then 0.16 s thin; right

box at 0.3 s of 6th last box.s fill 0x333333 color 0xEEEEEE fit &#34;0&#34; bold fit
box same &#34;0&#34; bold; box same &#34;0&#34; bold; box same &#34;0&#34; bold
box same &#34;1&#34; bold
box same &#34;0&#34; bold
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In most programming languages, you can use hexadecimal numbers
directly in your programs by using a prefix of &lt;code&gt;0x&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# A `0x` prefix indicates a hexadecimal number:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0x0101&lt;/span&gt;  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# 257: 1×1 + 0×16 + 1×256 + 0×4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;0xFF&lt;/span&gt;    &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;# 255: 15×1 + 15×16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;why-hexadecimal&#34;&gt;Why hexadecimal?&lt;/h3&gt;
&lt;p&gt;We mentioned &lt;a href=&#34;../1b/#computer-memory&#34;&gt;last set&lt;/a&gt; that a byte can hold
numbers from 0&amp;ndash;255. That&amp;rsquo;s because a byte is made up of 8
bits. &lt;em&gt;(This is where the
“&lt;a href=&#34;https://www.hbomax.com/8-bit-christmas&#34;&gt;8-bit&lt;/a&gt;” moniker comes from
with the 8-bit computers of the 1980&amp;rsquo;s: Apple ][, Commodore 64, ZX
Spectrum, Atari 2600, Nintendo Entertainment System, BBC Micro,
etc. They used computer chips that worked with one byte&amp;mdash;8 bits&amp;mdash;of
information at a time.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Well, writing out full binary numbers &amp;mdash; like &lt;code&gt;0x10111001&lt;/code&gt;&amp;mdash; takes
up a lot of space, and is hard to read. It happens that one
hexadecimal digit holds exactly four bits, and so any byte value can
be represented with two hex digits:&lt;/p&gt;
&lt;div id=&#39;pikchr-7&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-7&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:208px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 208.202 286.47&#34;&gt;
&lt;path d=&#34;M19,32L41,32L41,2L19,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;30&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M41,32L63,32L63,2L41,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;52&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M63,32L85,32L85,2L63,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M85,32L107,32L107,2L85,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;96&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M107,32L129,32L129,2L107,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;118&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M129,32L151,32L151,2L129,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;140&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M151,32L173,32L173,2L151,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;162&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M173,32L195,32L195,2L173,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;184&#34; y=&#34;17&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;30&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;128&lt;/text&gt;
&lt;text x=&#34;52&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;64&lt;/text&gt;
&lt;text x=&#34;74&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;32&lt;/text&gt;
&lt;text x=&#34;96&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;16&lt;/text&gt;
&lt;text x=&#34;118&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;140&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;162&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;184&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M8,133L30,133L30,102L8,102Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;19&#34; y=&#34;118&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M30,133L52,133L52,102L30,102Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;41&#34; y=&#34;118&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M52,133L74,133L74,102L52,102Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;63&#34; y=&#34;118&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M74,133L96,133L96,102L74,102Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;85&#34; y=&#34;118&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M118,133L140,133L140,102L118,102Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;129&#34; y=&#34;118&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M140,133L162,133L162,102L140,102Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;151&#34; y=&#34;118&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M162,133L184,133L184,102L162,102Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;173&#34; y=&#34;118&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M184,133L206,133L206,102L184,102Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;195&#34; y=&#34;118&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;polygon points=&#34;52,92 53,80 61,84&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M74,53L54,87&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;polygon points=&#34;162,92 152,84 160,80&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M140,53L159,87&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;19&#34; y=&#34;141&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;41&#34; y=&#34;141&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;63&#34; y=&#34;141&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;85&#34; y=&#34;141&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;129&#34; y=&#34;141&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;151&#34; y=&#34;141&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;173&#34; y=&#34;141&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;195&#34; y=&#34;141&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;52&#34; y=&#34;176&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;156.25%&#34; dominant-baseline=&#34;central&#34;&gt;11: 0xB&lt;/text&gt;
&lt;text x=&#34;162&#34; y=&#34;176&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;156.25%&#34; dominant-baseline=&#34;central&#34;&gt;9: 0x9&lt;/text&gt;
&lt;path d=&#34;M85,284L107,284L107,254L85,254Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;96&#34; y=&#34;269&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;B&lt;/text&gt;
&lt;path d=&#34;M107,284L129,284L129,254L107,254Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;118&#34; y=&#34;269&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;polygon points=&#34;85,243 74,237 81,232&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M52,197L81,239&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;polygon points=&#34;129,243 132,232 139,237&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M162,197L132,239&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box &#34;1&#34; fit fill lightblue
box same &#34;0&#34;
box same &#34;1&#34;
box same &#34;1&#34;
box same &#34;1&#34;
box same &#34;0&#34;
box same &#34;0&#34;
box same &#34;1&#34;

text at 1st box .s &#34;128&#34; below italic small
text at 2nd box .s &#34;64&#34; below italic small
text at 3rd box .s &#34;32&#34; below italic small
text at 4th box .s &#34;16&#34; below italic small
text at 5th box .s &#34;8&#34; below italic small
text at 6th box .s &#34;4&#34; below italic small
text at 7th box .s &#34;2&#34; below italic small
text at 8th box .s &#34;1&#34; below italic small

box same at (-1st box.width / 2, -0.7) &#34;1&#34;
box same &#34;0&#34;
box same &#34;1&#34;
box same &#34;1&#34;
move last box.width
box same &#34;1&#34;
box same &#34;0&#34;
box same &#34;0&#34;
box same &#34;1&#34;

arrow from 6th last text.s to 0.07 n of 6th last box.nw
arrow from 3rd last text.s to 0.07 n of 3rd last box.ne

text at 8th last box .s &#34;8&#34; below italic small
text at 7th last box .s &#34;4&#34; below italic small
text at 6th last box .s &#34;2&#34; below italic small
text at 5th last box .s &#34;1&#34; below italic small
text at 4th last box .s &#34;8&#34; below italic small
text at 3rd last box .s &#34;4&#34; below italic small
text at 2nd last box .s &#34;2&#34; below italic small
text at 1st last box .s &#34;1&#34; below italic small

text at 0.3 s of 6th last box.sw &#34;11: 0xB&#34; big big
text at 0.3 s of 2nd last box.sw &#34;9: 0x9&#34; big big

box same as 1st box at (4th box.x, last text.s.y - 0.5) &#34;B&#34;
box same &#34;9&#34;

arrow from 2nd last text.s to 0.07 n of 2nd last box.nw
arrow from last text.s to 0.07 n of last box.ne
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;So &lt;code&gt;0b10111001 == 0xB9 == 185&lt;/code&gt;. But it&amp;rsquo;s a &lt;em&gt;whole&lt;/em&gt; lot easer to
convert &lt;code&gt;B&lt;/code&gt; (&lt;code&gt;1011&lt;/code&gt;) and &lt;code&gt;9&lt;/code&gt; (&lt;code&gt;1001&lt;/code&gt;) to &lt;code&gt;10111001&lt;/code&gt; than it is to
convert &lt;code&gt;185&lt;/code&gt;. Each group of 4 bits&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; corresponds to one hex digit.&lt;/p&gt;
&lt;p&gt;Now we understand the hexadecimal part of the output of &lt;code&gt;man ascii&lt;/code&gt;. If you look up “#”, you&amp;rsquo;ll see that it&amp;rsquo;s 23 in hexadecimal (we
can also write 23&lt;sub&gt;16&lt;/sub&gt;). If you type a “#” into a web form,
you&amp;rsquo;ll often see it show up as &lt;code&gt;%23&lt;/code&gt; in the URL, as in
&lt;a href=&#34;https://google.com/search?q=%23&#34;&gt;google.com/search?q=%23&lt;/a&gt;. (You can
say the octothorpe is “percent encoded” as &lt;code&gt;%23&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We&amp;rsquo;ll get deeper into binary and working with bits in the &lt;a href=&#34;../2c/&#34;&gt;next part&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;A group of four bits is also called a
“&lt;a href=&#34;https://en.wikipedia.org/wiki/Nibble&#34;&gt;nibble&lt;/a&gt;” &amp;mdash; half a “bite”!&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>
    
    
    
    <item>
      <title>CS Ramble — Set 2a - questions</title>
      <link>https://zellyn.com/2022/02/cs-ramble/2a/</link>
      <pubDate>Tue, 15 Feb 2022 20:15:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/02/cs-ramble/2a/</guid>
      <description>&lt;p&gt;&lt;em&gt;These are the questions for set 2 of &lt;a href=&#34;../&#34;&gt;A Ramble Around CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;questions-for-set-2&#34;&gt;Questions for set 2&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;If humans had eight fingers, and only used the digits 0–7 to count,
how would they write what we call “ten”? What would they mean when
they wrote “100”? What would a “round number” mean to them? (To us, 10, 100, 1000,
etc. are “round numbers”.)&lt;/li&gt;
&lt;li&gt;What if you only had the digits 0 and 1? How would you write what we
call “ten”? What would it mean when you wrote “100”? What would a
“round number” look like?&lt;/li&gt;
&lt;li&gt;What does &lt;code&gt;print(1&amp;lt;&amp;lt;8)&lt;/code&gt; print in your favorite programming language?
Why? What’s going on?&lt;/li&gt;
&lt;li&gt;What does &lt;code&gt;print(65 | 32)&lt;/code&gt; print in your favorite programming
language? Why? What’s going on? How about &lt;code&gt;print(90 | 32)&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;What does it mean that ‘A’ is 65, and ‘a’ is 65|32, ‘Z’ is 90, and
‘z’ is 90|32?
&lt;ul&gt;
&lt;li&gt;Ruby: &lt;code&gt;(&#39;A&#39;.ord | 32).chr&lt;/code&gt; → &lt;code&gt;&amp;quot;a&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Python: &lt;code&gt;chr(ord(&#39;a&#39;) | 32)&lt;/code&gt; → &lt;code&gt;&#39;a&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Javascript: &lt;code&gt;String.fromCharCode(&#39;A&#39;.charCodeAt(0) | 32)&lt;/code&gt; → &lt;code&gt;&amp;quot;a&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Hint: what kind of number is 32 in binary?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What if humans had 16 fingers and had 16 different digits? (Let’s
say, 0–9 for the first ten, and A–F for the next 6.) How would they
write what we call “ten”? What would they mean when they wrote
“100”?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;We&amp;rsquo;ll start discussing numeric bases in the &lt;a href=&#34;../2b/&#34;&gt;next part&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Tailscale diagram in Pikchr</title>
      <link>https://zellyn.com/2022/02/tailscale-diagram-in-pikchr/</link>
      <pubDate>Mon, 07 Feb 2022 00:49:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/02/tailscale-diagram-in-pikchr/</guid>
      <description>&lt;p&gt;Just for fun, I decided to try to use &lt;a href=&#34;https://pikchr.org&#34;&gt;Pikchr&lt;/a&gt; to
reproduce one of the diagrams in Tailscale&amp;rsquo;s &lt;a href=&#34;https://tailscale.com/blog/how-nat-traversal-works/&#34;&gt;How NAT traversal
works&lt;/a&gt; article,
which often receive praise.&lt;/p&gt;
&lt;p&gt;Pikchr is not intended for this kind of diagram:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pikchr is not intended as a replacement for point-and-click diagrams
creation software. Pikchr is to point-and-click systems as Markdown
is to MS-Word or Google-Docs. Point-and-click interfaces have their
place. But so do text-based systems such as Markdown and Pikchr.&lt;br/&gt;
    &amp;mdash; &lt;a href=&#34;https://pikchr.org/home/doc/trunk/doc/purpose.md&#34;&gt;The Intended Scope And Purpose Of Pikchr&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And indeed, reproducing the diagram took me hours, whereas I could
have reproduced it in a point-and-click diagram editor in 10 or 15
minutes. The diagrams I made about &lt;a href=&#34;../cs-ramble/1b/&#34;&gt;memory and
variables&lt;/a&gt; are a better example of the kind of thing
you can whip up quickly while writing.&lt;/p&gt;
&lt;p&gt;Still, it was fun, and hopefully instructive, and those diagrams
really are great.&lt;/p&gt;
&lt;!-- make the image wider than the usual 600px in this theme --&gt;
&lt;div style=&#39;width:700px;padding:auto;position:relative;left:-75px&#39;&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:2913px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 2913.12 1547.28&#34;&gt;
&lt;path d=&#34;M30,789L722,789A28 28 0 0 0 750 760L750,371A28 28 0 0 0 722 342L30,342A28 28 0 0 0 2 371L2,760A28 28 0 0 0 30 789Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M254,637L340,637A28 28 0 0 0 369 609L369,522A28 28 0 0 0 340 493L254,493A28 28 0 0 0 225 522L225,609A28 28 0 0 0 254 637Z&#34;  style=&#34;fill:rgb(52,52,51);&#34; /&gt;
&lt;path d=&#34;M271,619A23 23 0 0 0 295 596L295,535A23 23 0 0 0 271 511A23 23 0 0 0 247 535L247,596A23 23 0 0 0 271 619Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;path d=&#34;M265,539L294,539L294,511L265,511Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;text x=&#34;297&#34; y=&#34;449&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(89,88,87)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;VPN Client&lt;/text&gt;
&lt;text x=&#34;297&#34; y=&#34;729&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(3,3,3)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Workstation&lt;/text&gt;
&lt;path d=&#34;M30,1545L563,1545A28 28 0 0 0 592 1516L592,1127A28 28 0 0 0 563 1098L30,1098A28 28 0 0 0 2 1127L2,1516A28 28 0 0 0 30 1545Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M676,1545L733,1545A28 28 0 0 0 762 1516L762,1127A28 28 0 0 0 733 1098L676,1098A28 28 0 0 0 647 1127L647,1516A28 28 0 0 0 676 1545Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M254,1393L340,1393A28 28 0 0 0 369 1365L369,1278A28 28 0 0 0 340 1249L254,1249A28 28 0 0 0 225 1278L225,1365A28 28 0 0 0 254 1393Z&#34;  style=&#34;fill:rgb(52,52,51);&#34; /&gt;
&lt;path d=&#34;M271,1375A23 23 0 0 0 295 1352L295,1291A23 23 0 0 0 271 1267A23 23 0 0 0 247 1291L247,1352A23 23 0 0 0 271 1375Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;path d=&#34;M265,1296L294,1296L294,1267L265,1267Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;text x=&#34;297&#34; y=&#34;1205&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(89,88,87)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;VPN Client&lt;/text&gt;
&lt;text x=&#34;297&#34; y=&#34;1485&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(3,3,3)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Workstation&lt;/text&gt;
&lt;path d=&#34;M1089,1275L1895,1275A28 28 0 0 0 1924 1246L1924,547A28 28 0 0 0 1895 519L1089,519A28 28 0 0 0 1060 547L1060,1246A28 28 0 0 0 1089 1275Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M1449,983L1535,983A28 28 0 0 0 1564 954L1564,868A28 28 0 0 0 1535 839L1449,839A28 28 0 0 0 1420 868L1420,954A28 28 0 0 0 1449 983Z&#34;  style=&#34;fill:rgb(52,52,51);&#34; /&gt;
&lt;path d=&#34;M1466,965A23 23 0 0 0 1490 941L1490,881A23 23 0 0 0 1466 857A23 23 0 0 0 1442 881L1442,941A23 23 0 0 0 1466 965Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;path d=&#34;M1460,885L1489,885L1489,856L1460,856Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;text x=&#34;1492&#34; y=&#34;794&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(89,88,87)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;VPN Hub&lt;/text&gt;
&lt;text x=&#34;1492&#34; y=&#34;1187&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(3,3,3)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Server&lt;/text&gt;
&lt;path d=&#34;M2349,1134L2882,1134A28 28 0 0 0 2910 1105L2910,717A28 28 0 0 0 2882 688L2349,688A28 28 0 0 0 2320 717L2320,1105A28 28 0 0 0 2349 1134Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M2179,1134L2237,1134A28 28 0 0 0 2265 1105L2265,717A28 28 0 0 0 2237 688L2179,688A28 28 0 0 0 2150 717L2150,1105A28 28 0 0 0 2179 1134Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M2572,983L2658,983A28 28 0 0 0 2687 954L2687,868A28 28 0 0 0 2658 839L2572,839A28 28 0 0 0 2543 868L2543,954A28 28 0 0 0 2572 983Z&#34;  style=&#34;fill:rgb(52,52,51);&#34; /&gt;
&lt;path d=&#34;M2589,965A23 23 0 0 0 2613 941L2613,881A23 23 0 0 0 2589 857A23 23 0 0 0 2566 881L2566,941A23 23 0 0 0 2589 965Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;path d=&#34;M2584,885L2612,885L2612,856L2584,856Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;text x=&#34;2615&#34; y=&#34;794&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(89,88,87)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;VPN Client&lt;/text&gt;
&lt;text x=&#34;2615&#34; y=&#34;1074&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(3,3,3)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;EC2 VM&lt;/text&gt;
&lt;path d=&#34;M703,789L812,789L812,342L703,342Z&#34;  style=&#34;fill:rgb(73,100,149);&#34; /&gt;
&lt;path d=&#34;M703,516L812,542L812,588L703,614Z&#34;  style=&#34;fill:rgb(174,192,224);&#34; /&gt;
&lt;text x=&#34;758&#34; y=&#34;270&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(73,100,149)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Windows Firewall&lt;/text&gt;
&lt;circle cx=&#34;758&#34; cy=&#34;182&#34; r=&#34;36&#34;  style=&#34;fill:none;stroke-width:7.2;stroke:rgb(90,121,166);&#34; /&gt;
&lt;path d=&#34;M742,182L774,182L758,166L774,182L758,198L774,182&#34;  style=&#34;fill:none;stroke-width:7.2;stroke-linejoin:round;stroke:rgb(73,100,149);&#34; /&gt;
&lt;path d=&#34;M703,1545L812,1545L812,1098L703,1098Z&#34;  style=&#34;fill:rgb(73,100,149);&#34; /&gt;
&lt;path d=&#34;M703,1272L812,1298L812,1344L703,1370Z&#34;  style=&#34;fill:rgb(174,192,224);&#34; /&gt;
&lt;text x=&#34;758&#34; y=&#34;1026&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(73,100,149)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Office Firewall&lt;/text&gt;
&lt;circle cx=&#34;758&#34; cy=&#34;938&#34; r=&#34;36&#34;  style=&#34;fill:none;stroke-width:7.2;stroke:rgb(90,121,166);&#34; /&gt;
&lt;path d=&#34;M742,938L774,938L758,922L774,938L758,954L774,938&#34;  style=&#34;fill:none;stroke-width:7.2;stroke-linejoin:round;stroke:rgb(73,100,149);&#34; /&gt;
&lt;path d=&#34;M2100,1134L2209,1134L2209,688L2100,688Z&#34;  style=&#34;fill:rgb(73,100,149);&#34; /&gt;
&lt;path d=&#34;M2209,862L2100,888L2100,934L2209,960Z&#34;  style=&#34;fill:rgb(174,192,224);&#34; /&gt;
&lt;text x=&#34;2154&#34; y=&#34;555&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(73,100,149)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;AWS&lt;/text&gt;
&lt;text x=&#34;2154&#34; y=&#34;616&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(73,100,149)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Security Group&lt;/text&gt;
&lt;text x=&#34;2154&#34; y=&#34;676&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(73,100,149)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;circle cx=&#34;2154&#34; cy=&#34;467&#34; r=&#34;36&#34;  style=&#34;fill:none;stroke-width:7.2;stroke:rgb(90,121,166);&#34; /&gt;
&lt;path d=&#34;M2170,467L2139,467L2154,483L2139,467L2154,451L2139,467&#34;  style=&#34;fill:none;stroke-width:7.2;stroke-linejoin:round;stroke:rgb(73,100,149);&#34; /&gt;
&lt;circle cx=&#34;369&#34; cy=&#34;565&#34; r=&#34;7.2&#34; style=&#34;fill:rgb(198,88,53);stroke-width:2.16;stroke:rgb(198,88,53);&#34; /&gt;
&lt;circle cx=&#34;369&#34; cy=&#34;1321&#34; r=&#34;7.2&#34; style=&#34;fill:rgb(198,88,53);stroke-width:2.16;stroke:rgb(198,88,53);&#34; /&gt;
&lt;circle cx=&#34;2543&#34; cy=&#34;911&#34; r=&#34;7.2&#34; style=&#34;fill:rgb(198,88,53);stroke-width:2.16;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M369,565 L 801,565 Q 945,565 1049,665 L 1172,783 Q 1276,882 1346,882 L 1416,882&#34;  style=&#34;fill:none;stroke-width:5.76;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M1416,882L1394,861L1416,882L1394,904L1416,882&#34;  style=&#34;fill:none;stroke-width:5.76;stroke-linejoin:round;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M369,1321 L 801,1321 Q 945,1321 1039,1213 L 1182,1049 Q 1276,940 1346,940 L 1416,940&#34;  style=&#34;fill:none;stroke-width:5.76;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M1416,940L1394,918L1416,940L1394,961L1416,940&#34;  style=&#34;fill:none;stroke-width:5.76;stroke-linejoin:round;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M2543,911L1568,911&#34;  style=&#34;fill:none;stroke-width:5.76;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M1568,911L1590,889L1568,911L1590,933L1568,911&#34;  style=&#34;fill:none;stroke-width:5.76;stroke-linejoin:round;stroke:rgb(198,88,53);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
topmargin = 1
fontscale = 3
color = 0xc65835 # Orange

define $boxlet {
  oval at -0.18,0 height 0.75 width 0.33 color none fill 0xd6d6d6
  box same as last at -0.12,0.28 height 0.2 width 0.2 radius 0
  box at 0,0 height 1 width 1 color none fill 0x343433 radius 0.2 behind last box
}

define $wall {
  box at 0,0 height 3.1 width 0.76 color none fill 0x496495
  line from -0.38*$1,0.34 to $1*0.38,0.16 to $1*0.38,-0.16 to -0.38*$1,-0.34 close color none fill 0xaec0e0
}

define $wall_info {
  text at last.n + (0.0, 0.5) color 0x496495 $2 bold
  circle at last.n + (0.0,0.3) radius 0.25 thickness 0.05 color 0x5a79a6
  line from (last.x-$1*0.11,last circle.c.y) \
    right $1*0.22 then \
    up $1*0.11 left $1*0.11 then \
    down $1*0.11 right $1*0.11 then \
    down $1*0.11 left $1*0.11 then \
    up $1*0.11 right $1*0.11 \
    color 0x496495 thickness 0.05
}

define $area {
  box at ($1,$2) width $3 height $4 color none fill 0xf9f9f8 radius 0.2
}

# Servers

$area(0.55,0,5.2,3.1)

WS1: [ $boxlet() ] at (0, 0)
text at last.n + (0.0, 0.1) color 0x595857 &#34;VPN Client&#34; above
text at last.s - (0.0, 1) color 0x030303 $2 &#34;Workstation&#34; below

$area(0,-5.25,4.1,3.1)
$area(2.83,-5.25,0.8,3.1)

WS2: [ $boxlet() ] at (0, -5.25)
text at last.n + (0.0, 0.1) color 0x595857 &#34;VPN Client&#34; above
text at last.s - (0.0, 1) color 0x030303 &#34;Workstation&#34; below

$area(8.3,-2.3,6,5.25)

HUB: [ $boxlet() ] at (8.3, -2.4)
text at last.n + (0.0, 0.1) color 0x595857 &#34;VPN Hub&#34;  above
text at last.s - (0.0, 1.78) color 0x030303 &#34;Server&#34; below

$area(16.10,HUB.c.y,4.1,3.1)
$area(13.27,HUB.c.y,0.8,3.1)

WS3: [ $boxlet() ] at (16.10, HUB.c.y)
text at last.n + (0.0, 0.1) color 0x595857 &#34;VPN Client&#34;  above
text at last.s - (0.0, 1) color 0x030303 &#34;EC2 VM&#34; below

[ $wall(1) ] at (3.20,0)
$wall_info(1, &#34;Windows Firewall&#34;)

[ $wall(1) ] at (3.2,-5.25)
$wall_info(1, &#34;Office Firewall&#34;)

[ $wall(-1) ] at (12.9,HUB.c.y)
$wall_info(-1, &#34;AWS&#34; bold &#34;Security Group&#34; bold &#34;&#34;)

dot at WS1.e radius 0.05
dot at WS2.e radius 0.05
dot at WS3.w radius 0.05

line from WS1.e right 4 then down until even with (0,HUB.y+0.2) right 2.3 then right until even with (HUB.w-0.03,0) thickness 0.04 radius 1
line up 0.15 left 0.15 down 0.15 right 0.15 down 0.15 left 0.15 up 0.15 right 0.15 thickness 0.04

line from WS2.e right 4 then up until even with (0,HUB.y-0.2) right 2.3 then right until even with (HUB.w-0.03,0) thickness 0.04 radius 1
line up 0.15 left 0.15 down 0.15 right 0.15 down 0.15 left 0.15 up 0.15 right 0.15 thickness 0.04

line from WS3.w to 0.03 right of HUB.e thickness 0.04
line up 0.15 right 0.15 down 0.15 left 0.15 down 0.15 right 0.15 up 0.15 left 0.15 thickness 0.04
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;(Click image to see Pikchr source)&lt;/em&gt;&lt;/p&gt;
&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>
    
    
    
    <item>
      <title>CS Ramble — Set 1c: variables</title>
      <link>https://zellyn.com/2022/02/cs-ramble/1c/</link>
      <pubDate>Thu, 03 Feb 2022 20:12:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/02/cs-ramble/1c/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is post is part of &lt;a href=&#34;../1a/&#34;&gt;set 1&lt;/a&gt; of &lt;a href=&#34;../&#34;&gt;A Ramble Around
CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;variables&#34;&gt;Variables&lt;/h1&gt;
&lt;p&gt;When you say &lt;code&gt;a = 42&lt;/code&gt;, what is happening in memory? Well, &lt;code&gt;a&lt;/code&gt; is
actually just a synonym for a particular piece of your computer&amp;rsquo;s
memory.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s say your program happend to put &lt;code&gt;a&lt;/code&gt; in memory location &lt;code&gt;1234&lt;/code&gt;:&lt;/p&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:292px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 292.32 85.68&#34;&gt;
&lt;path d=&#34;M2,83L74,83L74,47L2,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M74,83L146,83L146,47L74,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;110&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M146,83L218,83L218,47L146,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;182&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M218,83L290,83L290,47L218,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;254&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1233&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;14&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1234&lt;/text&gt;
&lt;text x=&#34;182&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1235&lt;/text&gt;
&lt;text x=&#34;254&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1236&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box width 0.5 height 0.25 fill lightblue &#34;0&#34; bold
box same &#34;42&#34; bold
box same &#34;0&#34; bold
box same &#34;0&#34; bold

text at 1st box.n &#34;1233&#34; above
text at 2nd box.n &#34;a&#34; big bold above &#34;1234&#34; above
text at 3rd box.n &#34;1235&#34; above
text at 4th box.n &#34;1236&#34; above
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;If we don&amp;rsquo;t care about the exact memory location (and we usually
don&amp;rsquo;t), we can draw that like this:&lt;/p&gt;
&lt;div id=&#39;pikchr-1&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-1&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:112px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 112.118 40.32&#34;&gt;
&lt;path d=&#34;M37,38L109,38L109,2L37,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;73&#34; y=&#34;20&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;text x=&#34;37&#34; y=&#34;20&#34; text-anchor=&#34;end&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a:  &lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box width 0.5 height 0.25 fill lightblue &#34;42&#34;
text at last box.w &#34;a:  &#34; bold rjust big
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now, when you say &lt;code&gt;b = a&lt;/code&gt; (and assuming your program happens to pick
&lt;code&gt;1235&lt;/code&gt; for &lt;code&gt;b&lt;/code&gt;), we get:&lt;/p&gt;
&lt;div id=&#39;pikchr-2&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-2&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:292px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 292.32 85.68&#34;&gt;
&lt;path d=&#34;M2,83L74,83L74,47L2,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M74,83L146,83L146,47L74,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;110&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M146,83L218,83L218,47L146,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;182&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M218,83L290,83L290,47L218,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;254&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1233&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;14&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1234&lt;/text&gt;
&lt;text x=&#34;182&#34; y=&#34;14&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;b&lt;/text&gt;
&lt;text x=&#34;182&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1234&lt;/text&gt;
&lt;text x=&#34;254&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1236&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box width 0.5 height 0.25 fill lightblue &#34;0&#34; bold
box same &#34;42&#34; bold
box same &#34;42&#34; bold
box same &#34;0&#34; bold

text at 1st box.n &#34;1233&#34; above
text at 2nd box.n &#34;a&#34; big bold above &#34;1234&#34; above
text at 3rd box.n &#34;b&#34; big bold above &#34;1234&#34; above
text at 4th box.n &#34;1236&#34; above
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;or, alternatively:&lt;/p&gt;
&lt;div id=&#39;pikchr-3&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-3&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:113px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 113.069 148.32&#34;&gt;
&lt;path d=&#34;M38,38L110,38L110,2L38,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;20&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M38,146L110,146L110,110L38,110Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;74&#34; y=&#34;128&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;20&#34; text-anchor=&#34;end&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a:  &lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;128&#34; text-anchor=&#34;end&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;b:  &lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
down
box width 0.5 height 0.25 fill lightblue &#34;42&#34;
move
box width 0.5 height 0.25 fill lightblue &#34;42&#34;

text at first box.w &#34;a:  &#34; bold rjust big
text at last box.w &#34;b:  &#34; bold rjust big
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, the program has made a &lt;em&gt;copy&lt;/em&gt; of the value of &lt;code&gt;a&lt;/code&gt;, and
given &lt;code&gt;b&lt;/code&gt; the same value.&lt;/p&gt;
&lt;p&gt;What if we have a more complicated value? Many languages have
“structure” or “struct” types, which can combine pieces of data together. For
instance, here&amp;rsquo;s a snippet of Go:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Define a “struct” with two fields, both bytes, named `x` and `y`:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;type&lt;/span&gt; MyThing &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  x &lt;span style=&#34;color:#902000&#34;&gt;byte&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  y &lt;span style=&#34;color:#902000&#34;&gt;byte&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Create a new variable named `a`, of type MyThing, and give it some
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// initial values:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;a &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; MyThing{ x: &lt;span style=&#34;color:#40a070&#34;&gt;42&lt;/span&gt;, y: &lt;span style=&#34;color:#40a070&#34;&gt;99&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, what we have is this:&lt;/p&gt;
&lt;div id=&#39;pikchr-4&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-4&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:292px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 292.32 108&#34;&gt;
&lt;path d=&#34;M2,105L74,105L74,69L2,69Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;87&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M74,105L146,105L146,69L74,69Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;110&#34; y=&#34;87&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M146,105L218,105L218,69L146,69Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;182&#34; y=&#34;87&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;99&lt;/text&gt;
&lt;path d=&#34;M218,105L290,105L290,69L218,69Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;254&#34; y=&#34;87&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;59&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1233&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;59&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1234&lt;/text&gt;
&lt;text x=&#34;182&#34; y=&#34;59&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1235&lt;/text&gt;
&lt;text x=&#34;254&#34; y=&#34;59&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1236&lt;/text&gt;
&lt;path d=&#34;M81,33Q74,33 74,41&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M218,41Q218,33 210,33&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M138,33Q146,33 146,26&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M146,26Q146,33 153,33&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M81,33L138,33&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M153,33L210,33&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;a&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box width 0.5 height 0.25 fill lightblue &#34;0&#34; bold
box same &#34;42&#34; bold
box same &#34;99&#34; bold
box same &#34;0&#34; bold

text at 1st box.n &#34;1233&#34; above
text at 2nd box.n &#34;1234&#34; above
text at 3rd box.n &#34;1235&#34; above
text at 4th box.n &#34;1236&#34; above

arc from 2nd box.nw + (0.05,0.25) to 2nd box.nw + (0,0.2) thin
arc from 3rd box.ne + (0,0.2) to 3rd box.ne + (-0.05,0.25) thin
arc from 2nd box.ne + (-0.05,0.25) to 2nd box.ne + (0,0.3) thin
arc from 2nd box.ne + (0,0.3) to 2nd box.ne + (0.05,0.25) thin
line from 4th last arc.ne to 2nd last arc.sw thin
line from last arc.se to 3rd last arc.nw thin
text at last arc.nw + (0,0.03) &#34;a&#34; bold above
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;or, alternatively:&lt;/p&gt;
&lt;div id=&#39;pikchr-5&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-5&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:175px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 175.622 60.48&#34;&gt;
&lt;text x=&#34;12&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a:&lt;/text&gt;
&lt;path d=&#34;M29,58L101,58L101,22L29,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;65&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M101,58L173,58L173,22L101,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;137&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;99&lt;/text&gt;
&lt;text x=&#34;65&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;x&lt;/text&gt;
&lt;text x=&#34;137&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;y&lt;/text&gt;
&lt;path d=&#34;M29,58L173,58L173,22L29,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
text &#34;a:&#34; big bold
box width 0.5 height 0.25 fill lightblue &#34;42&#34; thin
box same &#34;99&#34;
text at 2nd last box.n &#34;x&#34; above
text at last box.n &#34;y&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;We can update the individual fields of &lt;code&gt;a&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Update the `9` field of `a` to 17:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;a.y = &lt;span style=&#34;color:#40a070&#34;&gt;17&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And now we have:&lt;/p&gt;
&lt;div id=&#39;pikchr-6&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-6&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:175px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 175.622 60.48&#34;&gt;
&lt;text x=&#34;12&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a:&lt;/text&gt;
&lt;path d=&#34;M29,58L101,58L101,22L29,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;65&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M101,58L173,58L173,22L101,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;137&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;17&lt;/text&gt;
&lt;text x=&#34;65&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;x&lt;/text&gt;
&lt;text x=&#34;137&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;y&lt;/text&gt;
&lt;path d=&#34;M29,58L173,58L173,22L29,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
text &#34;a:&#34; big bold
box width 0.5 height 0.25 fill lightblue &#34;42&#34; thin
box same &#34;17&#34;
text at 2nd last box.n &#34;x&#34; above
text at last box.n &#34;y&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;If we now create a variable &lt;code&gt;b&lt;/code&gt; with &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s value:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Create a new variable named `b`, also of type MyThing, and give it
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// the same value as `a`:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;b &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We get:&lt;/p&gt;
&lt;div id=&#39;pikchr-7&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-7&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:176px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 176.573 132.48&#34;&gt;
&lt;text x=&#34;12&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a:&lt;/text&gt;
&lt;path d=&#34;M29,58L101,58L101,22L29,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;65&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M101,58L173,58L173,22L101,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;137&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;17&lt;/text&gt;
&lt;text x=&#34;65&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;x&lt;/text&gt;
&lt;text x=&#34;137&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;y&lt;/text&gt;
&lt;path d=&#34;M29,58L173,58L173,22L29,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;b:&lt;/text&gt;
&lt;path d=&#34;M30,130L102,130L102,94L30,94Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;66&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M102,130L174,130L174,94L102,94Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;138&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;17&lt;/text&gt;
&lt;text x=&#34;66&#34; y=&#34;84&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;x&lt;/text&gt;
&lt;text x=&#34;138&#34; y=&#34;84&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;y&lt;/text&gt;
&lt;path d=&#34;M30,130L174,130L174,94L30,94Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
text &#34;a:&#34; big bold
box width 0.5 height 0.25 fill lightblue &#34;42&#34; thin
box same &#34;17&#34;
text at 2nd last box.n &#34;x&#34; above
text at last box.n &#34;y&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none

move to 1st text.w + (0,-0.5)
text &#34;b:&#34; big bold
box width 0.5 height 0.25 fill lightblue &#34;42&#34; thin
box same &#34;17&#34;
text at 2nd last box.n &#34;x&#34; above
text at last box.n &#34;y&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Once again, our program created a &lt;strong&gt;copy&lt;/strong&gt; of the &lt;strong&gt;value&lt;/strong&gt; of &lt;code&gt;a&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;What if we have wider types inside the struct? No problem, they work
just as described in the &lt;a href=&#34;../1b&#34;&gt;last post&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Define a struct with two fields, one a byte, and one a 16-bit
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// unsigned integer (which takes up 2 bytes):
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;type&lt;/span&gt; YourThing &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  w &lt;span style=&#34;color:#902000&#34;&gt;byte&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  z &lt;span style=&#34;color:#902000&#34;&gt;uint16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Create a new variable named `c`, of type YourThing, and give it some
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// initial values:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;c &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; YourThing{ w: &lt;span style=&#34;color:#40a070&#34;&gt;42&lt;/span&gt;, z: &lt;span style=&#34;color:#40a070&#34;&gt;258&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Which looks like:&lt;/p&gt;
&lt;div id=&#39;pikchr-8&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-8&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:364px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 364.32 162.72&#34;&gt;
&lt;path d=&#34;M2,91L74,91L74,55L2,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;73&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M74,91L146,91L146,55L74,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;110&#34; y=&#34;73&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M146,91L218,91L218,55L146,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;182&#34; y=&#34;73&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;path d=&#34;M218,91L290,91L290,55L218,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;254&#34; y=&#34;73&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M290,91L362,91L362,55L290,55Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;326&#34; y=&#34;73&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M81,33Q74,33 74,41&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M290,41Q290,33 282,33&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M174,33Q182,33 182,26&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M182,26Q182,33 189,33&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M81,33L174,33&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M189,33L282,33&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;182&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;c&lt;/text&gt;
&lt;path d=&#34;M138,113Q146,113 146,105&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M74,105Q74,113 81,113&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M117,113Q110,113 110,120&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M110,120Q110,113 102,113&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M138,113L117,113&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M102,113L81,113&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;110&#34; y=&#34;130&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;w&lt;/text&gt;
&lt;path d=&#34;M282,113Q290,113 290,105&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M146,105Q146,113 153,113&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M225,113Q218,113 218,120&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M218,120Q218,113 210,113&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M282,113L225,113&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M210,113L153,113&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;218&#34; y=&#34;130&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;z&lt;/text&gt;
&lt;text x=&#34;218&#34; y=&#34;150&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;(258 = 2 + 1×256)&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
define $brace {
  $offsety = $4 / 2
  $offsetx = $3/abs($3) * abs($offsety)
  $pointx = $1+0.5*$3
  $pointy = $2+$4
  arc from ($1+$offsetx,$2+$offsety) to ($1,$2) thin
  arc from ($1+$3,$2) to ($1+$3-$offsetx, $2+$offsety) thin
  arc from ($pointx-$offsetx,$pointy-$offsety) to ($pointx,$pointy) thin
  arc from ($pointx,$pointy) to ($pointx+$offsetx,$pointy-$offsety) thin
  line from 4th last arc.start to 2nd last arc.start thin
  line from last arc.end to 3rd last arc.end thin
}

box width 0.5 height 0.25 fill lightblue &#34;0&#34; bold
box same &#34;42&#34; bold
box same &#34;2&#34; bold
box same &#34;1&#34; bold
box same &#34;0&#34; bold

$brace(4th last box.nw.x, 4th last box.nw.y+0.1, 1.5, 0.1)
text at last arc.start + (0,0.03) &#34;c&#34; bold above

$brace(4th last box.se.x, 4th last box.se.y-0.1, -0.5, -0.1)
text at last arc.start &#34;w&#34; below

$brace(2nd last box.se.x, 2nd last box.se.y-0.1, -1, -0.1)
text at last arc.start &#34;z&#34; below &#34;(258 = 2 + 1×256)&#34; below
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Or, alternatively:&lt;/p&gt;
&lt;div id=&#39;pikchr-9&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-9&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:246px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 246.672 60.48&#34;&gt;
&lt;text x=&#34;12&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;c:&lt;/text&gt;
&lt;path d=&#34;M28,58L100,58L100,22L28,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;64&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M100,58L244,58L244,22L100,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;172&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;258&lt;/text&gt;
&lt;text x=&#34;64&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;w&lt;/text&gt;
&lt;text x=&#34;172&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;z&lt;/text&gt;
&lt;path d=&#34;M28,58L244,58L244,22L28,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
text &#34;c:&#34; big bold
box width 0.5 height 0.25 fill lightblue &#34;42&#34; thin
box same width 1 &#34;258&#34;
text at 2nd last box.n &#34;w&#34; above
text at last box.n &#34;z&#34; above
box same with w at 2nd last box.w width 1.5 thickness 0.015 fill none
&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&#34;pointers&#34;&gt;Pointers&lt;/h2&gt;
&lt;p&gt;To talk about text, we first need to introduce something called a
“pointer”. You may have run into that term before, and it may have
been confusing or intimidating.&lt;/p&gt;
&lt;p&gt;Actually, it&amp;rsquo;s a way of talking about something we&amp;rsquo;ve already seen.&lt;/p&gt;
&lt;p&gt;Remember when we said we&amp;rsquo;d put &lt;code&gt;42&lt;/code&gt; in &lt;code&gt;a&lt;/code&gt;, and that our program
happened to put &lt;code&gt;a&lt;/code&gt; in location &lt;code&gt;1234&lt;/code&gt; in memory? Here&amp;rsquo;s the diagram
again:&lt;/p&gt;
&lt;div id=&#39;pikchr-10&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-10&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:292px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 292.32 85.68&#34;&gt;
&lt;path d=&#34;M2,83L74,83L74,47L2,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M74,83L146,83L146,47L74,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;110&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M146,83L218,83L218,47L146,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;182&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M218,83L290,83L290,47L218,47Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;254&#34; y=&#34;65&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1233&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;14&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1234&lt;/text&gt;
&lt;text x=&#34;182&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1235&lt;/text&gt;
&lt;text x=&#34;254&#34; y=&#34;37&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1236&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box width 0.5 height 0.25 fill lightblue &#34;0&#34; bold
box same &#34;42&#34; bold
box same &#34;0&#34; bold
box same &#34;0&#34; bold

text at 1st box.n &#34;1233&#34; above
text at 2nd box.n &#34;a&#34; big bold above &#34;1234&#34; above
text at 3rd box.n &#34;1235&#34; above
text at 4th box.n &#34;1236&#34; above
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Well, &lt;code&gt;1234&lt;/code&gt; is called the “address” of &lt;code&gt;a&lt;/code&gt;. If you put that in a
variable, say &lt;code&gt;b&lt;/code&gt;, then we say &lt;code&gt;b&lt;/code&gt; is a “pointer” to &lt;code&gt;a&lt;/code&gt;:&lt;/p&gt;
&lt;div id=&#39;pikchr-11&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-11&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:313px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 313.978 187.2&#34;&gt;
&lt;path d=&#34;M2,110L74,110L74,74L2,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M74,110L146,110L146,74L74,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;110&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M146,110L218,110L218,74L146,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;182&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;210&lt;/text&gt;
&lt;path d=&#34;M218,110L290,110L290,74L218,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;254&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1233&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1234&lt;/text&gt;
&lt;text x=&#34;182&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1235&lt;/text&gt;
&lt;text x=&#34;254&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1236&lt;/text&gt;
&lt;path d=&#34;M81,38Q74,38 74,46&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M146,46Q146,38 138,38&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M102,38Q110,38 110,31&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M110,31Q110,38 117,38&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M81,38L102,38&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M117,38L138,38&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;110&#34; y=&#34;14&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a&lt;/text&gt;
&lt;path d=&#34;M282,132Q290,132 290,125&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M146,125Q146,132 153,132&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M225,132Q218,132 218,139&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M218,139Q218,132 210,132&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M282,132L225,132&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M210,132L153,132&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;218&#34; y=&#34;152&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;b&lt;/text&gt;
&lt;text x=&#34;218&#34; y=&#34;174&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;(1234 = 210 + 4×256)&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
define $brace {
  $offsety = $4 / 2
  $offsetx = $3/abs($3) * abs($offsety)
  $pointx = $1+0.5*$3
  $pointy = $2+$4
  arc from ($1+$offsetx,$2+$offsety) to ($1,$2) thin
  arc from ($1+$3,$2) to ($1+$3-$offsetx, $2+$offsety) thin
  arc from ($pointx-$offsetx,$pointy-$offsety) to ($pointx,$pointy) thin
  arc from ($pointx,$pointy) to ($pointx+$offsetx,$pointy-$offsety) thin
  line from 4th last arc.start to 2nd last arc.start thin
  line from last arc.end to 3rd last arc.end thin
}

box width 0.5 height 0.25 fill lightblue &#34;0&#34; bold
box same &#34;42&#34; bold
box same &#34;210&#34; bold
box same &#34;4&#34; bold

text at 1st box.n &#34;1233&#34; above
text at 2nd box.n &#34;1234&#34; above
text at 3rd box.n &#34;1235&#34; above
text at 4th box.n &#34;1236&#34; above

$brace(2nd box.nw.x, 2nd box.nw.y+0.2, 0.5, 0.1)
text at last arc.start + (0,0.03) &#34;a&#34; big bold above

$brace(last box.se.x, 2nd last box.se.y-0.1, -1, -0.1)
text at last arc.start &#34;b&#34; big bold below &#34;(1234 = 210 + 4×256)&#34; below
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In Go, you&amp;rsquo;d do that like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#40a070&#34;&gt;42&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// `b` now points to `a`. It&amp;#39;s value is the address at which a&amp;#39;s value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// is stored. In Go (and most languages), the computer still keeps
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// track of the fact that it is a &amp;#34;pointer to integer&amp;#34;, not just a
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// generic &amp;#34;pointer&amp;#34;, so that it knows what to do with it if you, say,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// print the value:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Println&lt;/span&gt;(a)  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// → 42
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;b) &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// → 42, *b is &amp;#34;the value that `b` points&amp;#34; to (`a`)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Println&lt;/span&gt;(b)  &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// → 0xc00009c000, when I ran it; of course it varies
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Println&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;b) &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// → 0xc000094018, this is where `b` is stored
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;(&lt;a href=&#34;https://go.dev/play/p/DlLW6MtzNSd&#34;&gt;live example for you to play
with&lt;/a&gt; - click “run”)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;That last value—&lt;code&gt;0xc00009c000&lt;/code&gt;—brings up a good point. The example we
showed above, with &lt;code&gt;b&lt;/code&gt; getting a value of &lt;code&gt;1234&lt;/code&gt;, that fits in just
two bytes, is a little outdated. Two bytes was enough to store
addresses on machines like the Apple II or Commodore 64, which had a
&lt;a href=&#34;http://www.visual6502.org/JSSim/&#34;&gt;chip&lt;/a&gt; that maxed out at 64k
(256×256 = 65536 bytes). Nowadays, your computer and operating system
are in 32- or 64-bit mode, so pointers take 32 or 64 bits (4 or 8
bytes) to store. So the example above would more accurately look
something like this:&lt;/p&gt;
&lt;div id=&#39;pikchr-12&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-12&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:796px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 796.32 187.2&#34;&gt;
&lt;path d=&#34;M2,110L74,110L74,74L2,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M74,110L146,110L146,74L74,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;110&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M146,110L218,110L218,74L146,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;182&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;210&lt;/text&gt;
&lt;path d=&#34;M218,110L290,110L290,74L218,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;254&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;path d=&#34;M290,110L362,110L362,74L290,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;326&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M362,110L434,110L434,74L362,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;398&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M434,110L506,110L506,74L434,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;470&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M506,110L578,110L578,74L506,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;542&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M578,110L650,110L650,74L578,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;614&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M650,110L722,110L722,74L650,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;686&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M722,110L794,110L794,74L722,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;758&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1233&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1234&lt;/text&gt;
&lt;text x=&#34;182&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1235&lt;/text&gt;
&lt;text x=&#34;254&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1236&lt;/text&gt;
&lt;text x=&#34;326&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1237&lt;/text&gt;
&lt;text x=&#34;398&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1238&lt;/text&gt;
&lt;text x=&#34;470&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1239&lt;/text&gt;
&lt;text x=&#34;542&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1240&lt;/text&gt;
&lt;text x=&#34;614&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1241&lt;/text&gt;
&lt;text x=&#34;686&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1242&lt;/text&gt;
&lt;text x=&#34;758&#34; y=&#34;64&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1243&lt;/text&gt;
&lt;path d=&#34;M81,38Q74,38 74,46&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M146,46Q146,38 138,38&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M102,38Q110,38 110,31&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M110,31Q110,38 117,38&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M81,38L102,38&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M117,38L138,38&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;110&#34; y=&#34;14&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a&lt;/text&gt;
&lt;path d=&#34;M714,132Q722,132 722,125&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M146,125Q146,132 153,132&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M441,132Q434,132 434,139&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M434,139Q434,132 426,132&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M714,132L441,132&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M426,132L153,132&#34;  style=&#34;fill:none;stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;434&#34; y=&#34;152&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;b&lt;/text&gt;
&lt;text x=&#34;434&#34; y=&#34;174&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;(&amp;amp;a = 1234 = 210 + 4×256 + 0×65536 + 0×16777216 + 0× ...)&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
define $brace {
  $offsety = $4 / 2
  $offsetx = $3/abs($3) * abs($offsety)
  $pointx = $1+0.5*$3
  $pointy = $2+$4
  arc from ($1+$offsetx,$2+$offsety) to ($1,$2) thin
  arc from ($1+$3,$2) to ($1+$3-$offsetx, $2+$offsety) thin
  arc from ($pointx-$offsetx,$pointy-$offsety) to ($pointx,$pointy) thin
  arc from ($pointx,$pointy) to ($pointx+$offsetx,$pointy-$offsety) thin
  line from 4th last arc.start to 2nd last arc.start thin
  line from last arc.end to 3rd last arc.end thin
}

box width 0.5 height 0.25 fill lightblue &#34;0&#34; bold
box same &#34;42&#34; bold
box same &#34;210&#34; bold
box same &#34;4&#34; bold
box same &#34;0&#34; bold
box same &#34;0&#34; bold
box same &#34;0&#34; bold
box same &#34;0&#34; bold
box same &#34;0&#34; bold
box same &#34;0&#34; bold
box same &#34;0&#34; bold

text at 1st box.n &#34;1233&#34; above
text at 2nd box.n &#34;1234&#34; above
text at 3rd box.n &#34;1235&#34; above
text at 4th box.n &#34;1236&#34; above
text at 5th box.n &#34;1237&#34; above
text at 6th box.n &#34;1238&#34; above
text at 7th box.n &#34;1239&#34; above
text at 8th box.n &#34;1240&#34; above
text at 9th box.n &#34;1241&#34; above
text at 10th box.n &#34;1242&#34; above
text at 11th box.n &#34;1243&#34; above

$brace(2nd box.nw.x, 2nd box.nw.y+0.2, 0.5, 0.1)
text at last arc.start + (0,0.03) &#34;a&#34; big bold above

$brace(2nd last box.se.x, 2nd last box.se.y-0.1, -4, -0.1)
text at last arc.start &#34;b&#34; big bold below &#34;(&amp;a = 1234 = 210 + 4×256 + 0×65536 + 0×16777216 + 0× ...)&#34; below
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;We don&amp;rsquo;t usually care about exactly how big pointers are (unless we&amp;rsquo;re
in a phase of caring how big everything is), and often draw that last
picture like this:&lt;/p&gt;
&lt;div id=&#39;pikchr-13&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-13&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:104px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 104.573 112.32&#34;&gt;
&lt;text x=&#34;12&#34; y=&#34;20&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a:&lt;/text&gt;
&lt;path d=&#34;M29,38L101,38L101,2L29,2Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;65&#34; y=&#34;20&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;text x=&#34;13&#34; y=&#34;92&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;b:&lt;/text&gt;
&lt;path d=&#34;M30,110L102,110L102,74L30,74Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;circle cx=&#34;66&#34; cy=&#34;92&#34; r=&#34;4.32&#34; style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;polygon points=&#34;65,38 69,49 61,49&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M66,92L65,43&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
text &#34;a:&#34; big bold
box width 0.5 height 0.25 fill lightblue &#34;42&#34;

move to 1st text.w + (0,-0.5)
text &#34;b:&#34; big bold
box width 0.5 height 0.25 fill lightblue
dot at last.c radius 0.03
arrow from last to first box.s
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Some ways of talking about pointers. We “dereference” &lt;code&gt;b&lt;/code&gt; to get the
value it points to, &lt;code&gt;42&lt;/code&gt;. In Go, as mentioned above, and in fact in
many languages that descend from C, this is written &lt;code&gt;*b&lt;/code&gt;. Conversely,
we can “get a reference to &lt;code&gt;a&lt;/code&gt;” (&lt;code&gt;a&lt;/code&gt;&amp;rsquo;s address in memory) by writing
&lt;code&gt;&amp;amp;a&lt;/code&gt;. People often talk about “following a pointer”, which means
exactly what it sounds like: just follow the arrow!&lt;/p&gt;
&lt;p&gt;You actually now know enough to understand what a “linked list” is!&lt;/p&gt;
&lt;div id=&#39;pikchr-14&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-14&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:685px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 685.382 60.48&#34;&gt;
&lt;text x=&#34;12&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a:&lt;/text&gt;
&lt;path d=&#34;M29,58L101,58L101,22L29,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;circle cx=&#34;65&#34; cy=&#34;40&#34; r=&#34;4.32&#34; style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;polygon points=&#34;137,40 125,44 125,36&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M65,40L131,40&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M137,58L209,58L209,22L137,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;173&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M209,58L281,58L281,22L209,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;circle cx=&#34;245&#34; cy=&#34;40&#34; r=&#34;4.32&#34; style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;173&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;data&lt;/text&gt;
&lt;text x=&#34;245&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;next&lt;/text&gt;
&lt;path d=&#34;M137,58L281,58L281,22L137,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;polygon points=&#34;317,40 305,44 305,36&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M245,40L311,40&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M317,58L389,58L389,22L317,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;353&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;17&lt;/text&gt;
&lt;path d=&#34;M389,58L461,58L461,22L389,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;circle cx=&#34;425&#34; cy=&#34;40&#34; r=&#34;4.32&#34; style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;353&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;data&lt;/text&gt;
&lt;text x=&#34;425&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;next&lt;/text&gt;
&lt;path d=&#34;M317,58L461,58L461,22L317,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;polygon points=&#34;497,40 485,44 485,36&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M425,40L491,40&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M497,58L569,58L569,22L497,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;533&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;23&lt;/text&gt;
&lt;path d=&#34;M569,58L641,58L641,22L569,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;circle cx=&#34;605&#34; cy=&#34;40&#34; r=&#34;4.32&#34; style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;533&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;data&lt;/text&gt;
&lt;text x=&#34;605&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;next&lt;/text&gt;
&lt;path d=&#34;M497,58L641,58L641,22L497,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;polygon points=&#34;677,40 665,44 665,36&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M605,40L671,40&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M677,40L677,30L677,50L677,40&#34;  style=&#34;fill:none;stroke-width:2.16;stroke-linejoin:round;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M683,40L683,30L683,50L683,40&#34;  style=&#34;fill:none;stroke-width:2.16;stroke-linejoin:round;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
text &#34;a:&#34; big bold
box width 0.5 height 0.25 fill lightblue
dot at last radius 0.03

arrow from last dot
box same as first box thin &#34;42&#34; bold
box same
dot at last radius 0.03
text at 2nd last box.n &#34;data&#34; above
text at last box.n &#34;next&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none

arrow from last dot
box same as 2nd box &#34;17&#34; bold
box same
dot at last radius 0.03
text at 2nd last box.n &#34;data&#34; above
text at last box.n &#34;next&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none

arrow from last dot
box same as 2nd box &#34;23&#34; bold
box same
dot at last radius 0.03
text at 2nd last box.n &#34;data&#34; above
text at last box.n &#34;next&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none

arrow from last dot
line up 0.07 down 0.14 up 0.07
move right 0.04
line up 0.07 down 0.14 up 0.07
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;That last pointer is a “null pointer”&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;: by convention, a pointer with
the value &lt;code&gt;0&lt;/code&gt;—also called &lt;code&gt;null&lt;/code&gt;—points to nothing, and is drawn as ⟶‖&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s create that linked list in Go:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Each Node has some data, and a pointer to the next Node (possibly
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// null)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;type&lt;/span&gt; Node &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	data &lt;span style=&#34;color:#902000&#34;&gt;int&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	next &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;Node
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Construct the linked list in the diagram above, the laborious way:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;node1 &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; Node{data:&lt;span style=&#34;color:#40a070&#34;&gt;42&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node2 &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; Node{data:&lt;span style=&#34;color:#40a070&#34;&gt;17&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node3 &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; Node{data:&lt;span style=&#34;color:#40a070&#34;&gt;23&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node1.next = &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;node2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node2.next = &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;node3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node3.next = &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;nil&lt;/span&gt; &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Go spells &amp;#34;null&amp;#34; as &amp;#34;nil&amp;#34;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;a &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;node1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Construct the linked list in a more concise way. `&amp;amp;Node{}` is Go
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// shorthand for creating a struct value and then immediately taking
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// its address.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;a = &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;Node{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	data: &lt;span style=&#34;color:#40a070&#34;&gt;42&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	next: &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;Node{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		data: &lt;span style=&#34;color:#40a070&#34;&gt;17&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		next: &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;Node{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			data: &lt;span style=&#34;color:#40a070&#34;&gt;23&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			next: &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;nil&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Print the linked list by repeatedly following the `next` pointer
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// until we get a null pointer.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;for&lt;/span&gt; a &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;nil&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Println&lt;/span&gt;(a.data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	a = a.next
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Prints:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 42
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 17
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 23
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;(&lt;a href=&#34;https://go.dev/play/p/rh067JWmftb&#34;&gt;playground version&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;values-vs-references&#34;&gt;Values vs References&lt;/h3&gt;
&lt;p&gt;Once last thing for this part. Remember our earlier &lt;code&gt;MyThing&lt;/code&gt; example?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Define a “struct” with two fields, both bytes, named `x` and `y`:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;type&lt;/span&gt; MyThing &lt;span style=&#34;color:#007020;font-weight:bold&#34;&gt;struct&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  x &lt;span style=&#34;color:#902000&#34;&gt;byte&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  y &lt;span style=&#34;color:#902000&#34;&gt;byte&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Create a new variable named `a`, of type MyThing, and give it some
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// initial values:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;a &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; MyThing{ x: &lt;span style=&#34;color:#40a070&#34;&gt;42&lt;/span&gt;, y: &lt;span style=&#34;color:#40a070&#34;&gt;17&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which copied &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s &lt;em&gt;value&lt;/em&gt; into &lt;code&gt;b&lt;/code&gt;, giving us:&lt;/p&gt;
&lt;div id=&#39;pikchr-15&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-15&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:176px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 176.573 132.48&#34;&gt;
&lt;text x=&#34;12&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a:&lt;/text&gt;
&lt;path d=&#34;M29,58L101,58L101,22L29,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;65&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M101,58L173,58L173,22L101,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;137&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;17&lt;/text&gt;
&lt;text x=&#34;65&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;x&lt;/text&gt;
&lt;text x=&#34;137&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;y&lt;/text&gt;
&lt;path d=&#34;M29,58L173,58L173,22L29,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;b:&lt;/text&gt;
&lt;path d=&#34;M30,130L102,130L102,94L30,94Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;66&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M102,130L174,130L174,94L102,94Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;138&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;17&lt;/text&gt;
&lt;text x=&#34;66&#34; y=&#34;84&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;x&lt;/text&gt;
&lt;text x=&#34;138&#34; y=&#34;84&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;y&lt;/text&gt;
&lt;path d=&#34;M30,130L174,130L174,94L30,94Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
text &#34;a:&#34; big bold
box width 0.5 height 0.25 fill lightblue &#34;42&#34; thin
box same &#34;17&#34;
text at 2nd last box.n &#34;x&#34; above
text at last box.n &#34;y&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none

move to 1st text.w + (0,-0.5)
text &#34;b:&#34; big bold
box width 0.5 height 0.25 fill lightblue &#34;42&#34; thin
box same &#34;17&#34;
text at 2nd last box.n &#34;x&#34; above
text at last box.n &#34;y&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;What if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; were pointers instead?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Create a new variable named `a`, of type pointer-to-MyThing, and
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// give it some initial values:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;a &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;MyThing{ x: &lt;span style=&#34;color:#40a070&#34;&gt;42&lt;/span&gt;, y: &lt;span style=&#34;color:#40a070&#34;&gt;17&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// Copy a&amp;#39;s value into b:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;b &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s value is a pointer: a 64-bit number, the address of that
&lt;code&gt;MyThing&lt;/code&gt; structure. So copying that value into &lt;code&gt;b&lt;/code&gt; makes &lt;code&gt;b&lt;/code&gt; point to
the &lt;em&gt;same&lt;/em&gt; structure!&lt;/p&gt;
&lt;div id=&#39;pikchr-16&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-16&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:355px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 355.622 132.48&#34;&gt;
&lt;text x=&#34;12&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a:&lt;/text&gt;
&lt;path d=&#34;M29,58L101,58L101,22L29,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;circle cx=&#34;65&#34; cy=&#34;40&#34; r=&#34;4.32&#34; style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;polygon points=&#34;209,40 197,44 197,36&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M65,40L203,40&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M209,58L281,58L281,22L209,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;245&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M281,58L353,58L353,22L281,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;317&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;17&lt;/text&gt;
&lt;text x=&#34;245&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;x&lt;/text&gt;
&lt;text x=&#34;317&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;y&lt;/text&gt;
&lt;path d=&#34;M209,58L353,58L353,22L209,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;13&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;b:&lt;/text&gt;
&lt;path d=&#34;M30,130L102,130L102,94L30,94Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;circle cx=&#34;66&#34; cy=&#34;112&#34; r=&#34;4.32&#34; style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;polygon points=&#34;208,50 197,54 197,46&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M66,112 L 90,112 Q 113,112 137,81 Q 161,50 182,50 L 203,50&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
text &#34;a:&#34; big bold
box width 0.5 height 0.25 fill lightblue
dot at last radius 0.03

arrow from last dot go 1 east
box same &#34;42&#34; thin
box same &#34;17&#34;
text at 2nd last box.n &#34;x&#34; above
text at last box.n &#34;y&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none

move to 1st text.w + (0,-0.5)
text &#34;b:&#34; big bold
box same as first box
dot at last radius 0.03
arrow from last dot go right 0.33 then right 0.33 up 0.43 then right 0.33 radius 0.3
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;If you now change part of what &lt;code&gt;b&lt;/code&gt; points to, you&amp;rsquo;re changing the
thing &lt;code&gt;a&lt;/code&gt; points to too, since they point to the same value!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// In Go, you can refer to the `y` field of `b` with `b.y`, whether
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// `b` is a struct value, or a pointer to a struct value. In C, you&amp;#39;d
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// need to use `b-&amp;gt;y` if `b` was a pointer.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;b.y = &lt;span style=&#34;color:#40a070&#34;&gt;23&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Println&lt;/span&gt;(b.y) &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 23
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;&lt;/span&gt;fmt.&lt;span style=&#34;color:#06287e&#34;&gt;Println&lt;/span&gt;(a.y) &lt;span style=&#34;color:#60a0b0;font-style:italic&#34;&gt;// 23
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;text&#34;&gt;Text&lt;/h1&gt;
&lt;p&gt;We finally have enough background to write about how text is
stored. Most languages have a &lt;code&gt;string&lt;/code&gt; type, which stores pieces of
text. A common value for a &lt;code&gt;string&lt;/code&gt; type, under the covers, is a
pointer to an area of memory to hold the text, and integer holding the
length in bytes.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;The actual characters are stored in memory as we described in the
&lt;a href=&#34;../1b&#34;&gt;last post&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#666&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#4070a0&#34;&gt;&amp;#34;Hello, world&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div id=&#39;pikchr-17&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-17&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:619px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 619.446 198.303&#34;&gt;
&lt;text x=&#34;12&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;a:&lt;/text&gt;
&lt;path d=&#34;M29,58L101,58L101,22L29,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;circle cx=&#34;65&#34; cy=&#34;40&#34; r=&#34;4.32&#34; style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M101,58L173,58L173,22L101,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:1.4472;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;137&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;12&lt;/text&gt;
&lt;text x=&#34;65&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;str&lt;/text&gt;
&lt;text x=&#34;137&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;len&lt;/text&gt;
&lt;path d=&#34;M29,58L173,58L173,22L29,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M185,160L221,160L221,124L185,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;203&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;H&lt;/text&gt;
&lt;path d=&#34;M221,160L257,160L257,124L221,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;239&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;e&lt;/text&gt;
&lt;path d=&#34;M257,160L293,160L293,124L257,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;275&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;l&lt;/text&gt;
&lt;path d=&#34;M293,160L329,160L329,124L293,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;311&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;l&lt;/text&gt;
&lt;path d=&#34;M329,160L365,160L365,124L329,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;347&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;o&lt;/text&gt;
&lt;path d=&#34;M365,160L401,160L401,124L365,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;383&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;,&lt;/text&gt;
&lt;path d=&#34;M401,160L437,160L437,124L401,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;419&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;␣&lt;/text&gt;
&lt;path d=&#34;M437,160L473,160L473,124L437,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;455&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;w&lt;/text&gt;
&lt;path d=&#34;M473,160L509,160L509,124L473,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;491&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;o&lt;/text&gt;
&lt;path d=&#34;M509,160L545,160L545,124L509,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;527&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;r&lt;/text&gt;
&lt;path d=&#34;M545,160L581,160L581,124L545,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;563&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;l&lt;/text&gt;
&lt;path d=&#34;M581,160L617,160L617,124L581,124Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;599&#34; y=&#34;142&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;d&lt;/text&gt;
&lt;path d=&#34;M185,196L221,196L221,160L185,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;203&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;72&lt;/text&gt;
&lt;path d=&#34;M221,196L257,196L257,160L221,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;239&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;101&lt;/text&gt;
&lt;path d=&#34;M257,196L293,196L293,160L257,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;275&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;108&lt;/text&gt;
&lt;path d=&#34;M293,196L329,196L329,160L293,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;311&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;108&lt;/text&gt;
&lt;path d=&#34;M329,196L365,196L365,160L329,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;347&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;111&lt;/text&gt;
&lt;path d=&#34;M365,196L401,196L401,160L365,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;383&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;44&lt;/text&gt;
&lt;path d=&#34;M401,196L437,196L437,160L401,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;419&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;32&lt;/text&gt;
&lt;path d=&#34;M437,196L473,196L473,160L437,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;455&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;119&lt;/text&gt;
&lt;path d=&#34;M473,196L509,196L509,160L473,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;491&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;111&lt;/text&gt;
&lt;path d=&#34;M509,196L545,196L545,160L509,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;527&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;114&lt;/text&gt;
&lt;path d=&#34;M545,196L581,196L581,160L545,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;563&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;108&lt;/text&gt;
&lt;path d=&#34;M581,196L617,196L617,160L581,160Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;599&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;100&lt;/text&gt;
&lt;polygon points=&#34;185,142 174,147 173,138&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M65,40Q74,151 179,142&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
text &#34;a:&#34; big bold
box width 0.5 height 0.25 fill lightblue thin
dot at last radius 0.03
box same with w at last box.e &#34;12&#34;
text at 2nd last box.n &#34;str&#34; above
text at last box.n &#34;len&#34; above
box same with w at 2nd last box.w width 1 thickness 0.015 fill none

box at 1 se of first box.e width 0.5 * linewid height 0.5*linewid fill lightblue &#34;H&#34; bold
box same &#34;e&#34; bold
box same &#34;l&#34; bold
box same &#34;l&#34; bold
box same &#34;o&#34; bold
box same &#34;,&#34; bold
box same &#34;␣&#34;
box same &#34;w&#34; bold
box same &#34;o&#34; bold
box same &#34;r&#34; bold
box same &#34;l&#34; bold
box same &#34;d&#34; bold

box fill 0xd8ecf3 with n at H.s height H.height width H.width &#34;72&#34;
box same &#34;101&#34;
box same &#34;108&#34;
box same &#34;108&#34;
box same &#34;111&#34;
box same &#34;44&#34;
box same &#34;32&#34;
box same &#34;119&#34;
box same &#34;111&#34;
box same &#34;114&#34;
box same &#34;108&#34;
box same &#34;100&#34;

arc from last dot to H.w -&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;How about letters and words in foreign scripts? Well, for that, you
need a “character encoding”, a way of giving each character a number
and a representation as bytes. The most common one used to be
&lt;a href=&#34;https://www.asciitable.com/&#34;&gt;ASCII&lt;/a&gt;&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;, but the modern answer the
problem is &lt;a href=&#34;https://home.unicode.org/&#34;&gt;Unicode&lt;/a&gt;, an ambitious scheme
to assign a unique number to every letter in every alphabet of every
written language. And a bunch of
&lt;a href=&#34;https://emojipedia.org/poodle/&#34;&gt;Emojis&lt;/a&gt;. And &lt;a href=&#34;https://unicode-table.com/en/blocks/box-drawing/&#34;&gt;other
things&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unicode takes care of giving each character/symbol a unique
number&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;, but the numbers get pretty big, and you still have to
figure out how to represent them in just little old bytes. For that
you need an &lt;em&gt;encoding&lt;/em&gt;. Unless you have good reasons and know what
you&amp;rsquo;re doing, you&amp;rsquo;ll mostly want to use
&lt;a href=&#34;https://sethmlarson.dev/blog/utf-8&#34;&gt;UTF-8&lt;/a&gt;, which leaves the lower
128 ASCII characters alone, and then uses a clever encoding to encode
all the other Unicode code points. The &lt;a href=&#34;https://www.cl.cam.ac.uk/~mgk25/ucs/utf-8-history.txt&#34;&gt;origin
story&lt;/a&gt; is fun.&lt;/p&gt;
&lt;h1 id=&#34;summary&#34;&gt;Summary&lt;/h1&gt;
&lt;p&gt;Well, that&amp;rsquo;s been a fun ramble; thanks for sticking with us!
Remember, you can start at any of the concepts we&amp;rsquo;ve discussed here,
and explore as deeply as you want. There are is nothing wrong with not
knowing, questions, disinterest, or &lt;em&gt;way&lt;/em&gt; too much interest, and no
such thing as bad questions or things you&amp;rsquo;re “supposed” to know.&lt;/p&gt;
&lt;p&gt;A couple of interesting links to leave you with, since they contain
interesting and clear discussions of topics we&amp;rsquo;ve covered here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://sethmlarson.dev/blog/utf-8&#34;&gt;How does UTF-8 turn “😂” into
“F09F9882”?&lt;/a&gt; by Seth Michael
Larson&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://davidamos.dev/why-cant-you-reverse-a-flag-emoji/&#34;&gt;Why can&amp;rsquo;t you reverse a string with a flag
emoji?&lt;/a&gt; by
David Amos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Up next are the &lt;a href=&#34;../2a/&#34;&gt;questions for set 2&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;Many consider null pointers to be a &lt;a href=&#34;https://news.ycombinator.com/item?id=12427069&#34;&gt;big
mistake&lt;/a&gt;, and
many modern languages make them impossible.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;At least, that&amp;rsquo;s how &lt;a href=&#34;https://github.com/golang/go/blob/6f327f7b889b81549d551ce6963067267578bd70/src/runtime/string.go#L238-L241&#34;&gt;Go does
it&lt;/a&gt;. In
C, it&amp;rsquo;s just a pointer, and you count on a &lt;code&gt;0&lt;/code&gt; byte to terminate the
string. If that sounds risky, like you could miss the &lt;code&gt;0&lt;/code&gt;, and just
run off into some other part of memory, well, yep!&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;On Unix systems, like Linux and Mac OS, you can type &lt;code&gt;man ascii&lt;/code&gt;
in a terminal window to see the ASCII values. The bottom set shows
them in decimal, and is probably what you want. We&amp;rsquo;ll get into Octal
and Hexadecimal and all that some other time.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;Actually, it gives each &lt;em&gt;code point&lt;/em&gt; a number, and then one or
more of those combine to make one “user-perceived character”, as
Wikipedia puts it. It&amp;rsquo;s complicated. &lt;a href=&#34;https://manishearth.github.io/blog/2017/01/14/stop-ascribing-meaning-to-unicode-code-points/&#34;&gt;This post by Manish
Goregaokar&lt;/a&gt;
goes into lots of details.&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>
    
    
    
    <item>
      <title>CS Ramble — Set 1b - memory, text, numbers</title>
      <link>https://zellyn.com/2022/02/cs-ramble/1b/</link>
      <pubDate>Thu, 03 Feb 2022 08:00:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/02/cs-ramble/1b/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is post is part of &lt;a href=&#34;../1a/&#34;&gt;set 1&lt;/a&gt; of &lt;a href=&#34;../&#34;&gt;A Ramble Around
CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;computer-memory&#34;&gt;Computer memory&lt;/h1&gt;
&lt;p&gt;You can imagine all your computer&amp;rsquo;s memory as a series of little boxes,
numbered from 0 (because we&amp;rsquo;re computer people), and going up, and up,
and up. The laptop I&amp;rsquo;m typing this on has 32MB of memory, or
34,359,738,368 little boxes!&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:513px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 513.187 60.48&#34;&gt;
&lt;path d=&#34;M2,58L29,58L29,22L2,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M29,58L56,58L56,22L29,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M56,58L83,58L83,22L56,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M83,58L110,58L110,22L83,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M110,58L137,58L137,22L110,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M137,58L164,58L164,22L137,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M164,58L191,58L191,22L164,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M191,58L218,58L218,22L191,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M218,58L245,58L245,22L218,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M245,58L272,58L272,22L245,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M272,58L299,58L299,22L272,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M299,58L326,58L326,22L299,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M380,58L407,58L407,22L380,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;353&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;· · ·&lt;/text&gt;
&lt;text x=&#34;15&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;42&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;69&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;96&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;3&lt;/text&gt;
&lt;text x=&#34;123&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;150&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;5&lt;/text&gt;
&lt;text x=&#34;177&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;6&lt;/text&gt;
&lt;text x=&#34;204&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;7&lt;/text&gt;
&lt;text x=&#34;231&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;258&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;text x=&#34;285&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;10&lt;/text&gt;
&lt;text x=&#34;312&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;11&lt;/text&gt;
&lt;text x=&#34;380&#34; y=&#34;12&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;34,359,738,367&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
boxwid /=4
boxht /= 2
box fill lightblue
box same
box same
box same
box same
box same
box same
box same
box same
box same
box same
box same

move width boxwid*2

box same //  &#34;34,359,738,367&#34; above

text at last move &#34;· · ·&#34; big bold

text at 1st box.n &#34;0&#34; above
text at 2nd box.n &#34;1&#34; above
text at 3rd box.n &#34;2&#34; above
text at 4th box.n &#34;3&#34; above
text at 5th box.n &#34;4&#34; above
text at 6th box.n &#34;5&#34; above
text at 7th box.n &#34;6&#34; above
text at 8th box.n &#34;7&#34; above
text at 9th box.n &#34;8&#34; above
text at 10th box.n &#34;9&#34; above
text at 11th box.n &#34;10&#34; above
text at 12th box.n &#34;11&#34; above
text at 13th box.nw &#34;34,359,738,367&#34; above ljust
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;We&amp;rsquo;ll get into “bits” and “bytes” and counting in “binary” later, but
for now, let&amp;rsquo;s just take it as given that each of those boxes holds a
single “byte”: a number from 0 to 255.&lt;/p&gt;
&lt;h1 id=&#34;text&#34;&gt;Text&lt;/h1&gt;
&lt;p&gt;If we want to store letters in the boxes, we have to come up with some
kind of “&lt;a href=&#34;https://en.wikipedia.org/wiki/Character_encoding&#34;&gt;Character
Encoding&lt;/a&gt;”,
assigning a number to each letter.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I&amp;rsquo;d use 1 for “A”, 2 for “B”, &amp;hellip;, except it&amp;rsquo;s probably better to
just jump straight to the actual numbers your computer (usually) uses
(called “&lt;a href=&#34;https://en.wikipedia.org/wiki/ASCII&#34;&gt;ASCII&lt;/a&gt;”&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;) so we get used
to seeing the real numbers:&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#39;pikchr-1&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-1&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:587px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 587.29 96.48&#34;&gt;
&lt;text x=&#34;65&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;“Hello, world”&lt;/text&gt;
&lt;polygon points=&#34;153,40 141,44 141,36&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M117,40L147,40&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M153,58L189,58L189,22L153,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;171&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;H&lt;/text&gt;
&lt;path d=&#34;M189,58L225,58L225,22L189,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;207&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;e&lt;/text&gt;
&lt;path d=&#34;M225,58L261,58L261,22L225,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;243&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;l&lt;/text&gt;
&lt;path d=&#34;M261,58L297,58L297,22L261,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;279&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;l&lt;/text&gt;
&lt;path d=&#34;M297,58L333,58L333,22L297,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;315&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;o&lt;/text&gt;
&lt;path d=&#34;M333,58L369,58L369,22L333,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;351&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;,&lt;/text&gt;
&lt;path d=&#34;M369,58L405,58L405,22L369,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;387&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;␣&lt;/text&gt;
&lt;path d=&#34;M405,58L441,58L441,22L405,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;423&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;w&lt;/text&gt;
&lt;path d=&#34;M441,58L477,58L477,22L441,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;459&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;o&lt;/text&gt;
&lt;path d=&#34;M477,58L513,58L513,22L477,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;495&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;r&lt;/text&gt;
&lt;path d=&#34;M513,58L549,58L549,22L513,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;531&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;l&lt;/text&gt;
&lt;path d=&#34;M549,58L585,58L585,22L549,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;567&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;d&lt;/text&gt;
&lt;path d=&#34;M153,94L189,94L189,58L153,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;171&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;72&lt;/text&gt;
&lt;path d=&#34;M189,94L225,94L225,58L189,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;207&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;101&lt;/text&gt;
&lt;path d=&#34;M225,94L261,94L261,58L225,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;243&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;108&lt;/text&gt;
&lt;path d=&#34;M261,94L297,94L297,58L261,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;279&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;108&lt;/text&gt;
&lt;path d=&#34;M297,94L333,94L333,58L297,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;315&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;111&lt;/text&gt;
&lt;path d=&#34;M333,94L369,94L369,58L333,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;351&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;44&lt;/text&gt;
&lt;path d=&#34;M369,94L405,94L405,58L369,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;387&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;32&lt;/text&gt;
&lt;path d=&#34;M405,94L441,94L441,58L405,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;423&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;119&lt;/text&gt;
&lt;path d=&#34;M441,94L477,94L477,58L441,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;459&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;111&lt;/text&gt;
&lt;path d=&#34;M477,94L513,94L513,58L477,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;495&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;114&lt;/text&gt;
&lt;path d=&#34;M513,94L549,94L549,58L513,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;531&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;108&lt;/text&gt;
&lt;path d=&#34;M549,94L585,94L585,58L549,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;567&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;100&lt;/text&gt;
&lt;text x=&#34;171&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;207&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;243&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;279&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;3&lt;/text&gt;
&lt;text x=&#34;315&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;351&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;5&lt;/text&gt;
&lt;text x=&#34;387&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;6&lt;/text&gt;
&lt;text x=&#34;423&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;7&lt;/text&gt;
&lt;text x=&#34;459&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;495&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;text x=&#34;531&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;10&lt;/text&gt;
&lt;text x=&#34;567&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;11&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
right
text &#34;“Hello, world”&#34;
arrow from last text.e - (0.12,0) width linewid/2

box width 0.5 * linewid height 0.5*linewid fill lightblue &#34;H&#34; bold
box same &#34;e&#34; bold
box same &#34;l&#34; bold
box same &#34;l&#34; bold
box same &#34;o&#34; bold
box same &#34;,&#34; bold
box same &#34;␣&#34;
box same &#34;w&#34; bold
box same &#34;o&#34; bold
box same &#34;r&#34; bold
box same &#34;l&#34; bold
box same &#34;d&#34; bold

box fill 0xd8ecf3 with n at 1st box.s height H.height width H.width &#34;72&#34;
box same &#34;101&#34;
box same &#34;108&#34;
box same &#34;108&#34;
box same &#34;111&#34;
box same &#34;44&#34;
box same &#34;32&#34;
box same &#34;119&#34;
box same &#34;111&#34;
box same &#34;114&#34;
box same &#34;108&#34;
box same &#34;100&#34;

text at 1st box.n &#34;0&#34; above
text at 2nd box.n &#34;1&#34; above
text at 3rd box.n &#34;2&#34; above
text at 4th box.n &#34;3&#34; above
text at 5th box.n &#34;4&#34; above
text at 6th box.n &#34;5&#34; above
text at 7th box.n &#34;6&#34; above
text at 8th box.n &#34;7&#34; above
text at 9th box.n &#34;8&#34; above
text at 10th box.n &#34;9&#34; above
text at 11th box.n &#34;10&#34; above
text at 12th box.n &#34;11&#34; above
&lt;/pre&gt;
&lt;/div&gt;
&lt;h1 id=&#34;numbers&#34;&gt;Numbers&lt;/h1&gt;
&lt;p&gt;Storing numbers in the boxes is easy if they&amp;rsquo;re between 0 and
255. Just stick them in there!&lt;/p&gt;
&lt;div id=&#39;pikchr-2&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-2&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:148px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 148.32 60.48&#34;&gt;
&lt;path d=&#34;M2,58L38,58L38,22L2,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;20&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M38,58L74,58L74,22L38,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;56&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;17&lt;/text&gt;
&lt;path d=&#34;M74,58L110,58L110,22L74,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;92&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,58L146,58L146,22L110,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;text x=&#34;20&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;56&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;92&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;3&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box width 0.5 * linewid height 0.5*linewid fill lightblue &#34;42&#34; bold
box same &#34;17&#34; bold
box same &#34;0&#34; bold
box same &#34;255&#34; bold

text at 1st box.n &#34;0&#34; above
text at 2nd box.n &#34;1&#34; above
text at 3rd box.n &#34;2&#34; above
text at 4th box.n &#34;3&#34; above
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;For negative numbers, we pretend some of the numbers are
negative:&lt;/p&gt;
&lt;div id=&#39;pikchr-3&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-3&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:213px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 213.898 480.96&#34;&gt;
&lt;path d=&#34;M2,58L74,58L74,22L2,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M2,94L74,94L74,58L2,58Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M2,130L74,130L74,94L2,94Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;145&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M2,196L74,196L74,160L2,160Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;126&lt;/text&gt;
&lt;path d=&#34;M2,232L74,232L74,196L2,196Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;214&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;127&lt;/text&gt;
&lt;path d=&#34;M2,268L74,268L74,232L2,232Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;128&lt;/text&gt;
&lt;path d=&#34;M2,304L74,304L74,268L2,268Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;286&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;129&lt;/text&gt;
&lt;path d=&#34;M2,340L74,340L74,304L2,304Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;322&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;130&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;355&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M2,406L74,406L74,370L2,370Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;388&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;253&lt;/text&gt;
&lt;path d=&#34;M2,442L74,442L74,406L2,406Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;424&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;254&lt;/text&gt;
&lt;path d=&#34;M2,478L74,478L74,442L2,442Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;460&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Value&lt;/text&gt;
&lt;path d=&#34;M110,58L182,58L182,22L110,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,94L182,94L182,58L110,58Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M110,130L182,130L182,94L110,94Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;145&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M110,196L182,196L182,160L110,160Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;126&lt;/text&gt;
&lt;path d=&#34;M110,232L182,232L182,196L110,196Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;214&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;127&lt;/text&gt;
&lt;path d=&#34;M110,268L182,268L182,232L110,232Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-128&lt;/text&gt;
&lt;path d=&#34;M110,304L182,304L182,268L110,268Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;286&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-127&lt;/text&gt;
&lt;path d=&#34;M110,340L182,340L182,304L110,304Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;322&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-126&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;355&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M110,406L182,406L182,370L110,370Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;388&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-3&lt;/text&gt;
&lt;path d=&#34;M110,442L182,442L182,406L110,406Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;424&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-2&lt;/text&gt;
&lt;path d=&#34;M110,478L182,478L182,442L110,442Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;460&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-1&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Interpretation&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
down
box width linewid height 0.5*linewid &#34;0&#34;
box same &#34;1&#34;
box same &#34;2&#34;
text  &#34;⋮&#34;
box same &#34;126&#34;
box same &#34;127&#34;
box same &#34;128&#34;
box same &#34;129&#34;
box same &#34;130&#34;
text &#34;⋮&#34;
box same &#34;253&#34;
box same &#34;254&#34;
box same &#34;255&#34;

text at 1st box.n &#34;Value&#34; bold above

I1: box same as 1st box with w at 1st box.e + (0.5*linewid,0) &#34;0&#34;
box same &#34;1&#34;
box same &#34;2&#34;
text  &#34;⋮&#34;
box same &#34;126&#34;
box same &#34;127&#34;
box same &#34;-128&#34;
box same &#34;-127&#34;
box same &#34;-126&#34;
text &#34;⋮&#34;
box same &#34;-3&#34;
box same &#34;-2&#34;
box same &#34;-1&#34;

text at I1.n &#34;Interpretation&#34; bold above
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Probably, it&amp;rsquo;s better to think of it in
&lt;a href=&#34;https://www.youtube.com/watch?v=5OjZWSdxlU0&#34;&gt;modular&lt;/a&gt;
(&lt;a href=&#34;http://math.ucdenver.edu/~wcherowi/clockar.html&#34;&gt;clock&lt;/a&gt;) arithmetic:&lt;/p&gt;
&lt;div id=&#39;pikchr-4&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-4&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:475px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 476 538.2&#34;&gt;
&lt;circle cx=&#34;237&#34; cy=&#34;288&#34; r=&#34;216&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;237&#34; y=&#34;101&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;50&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;286&#34; y=&#34;107&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;299&#34; y=&#34;58&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;331&#34; y=&#34;126&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;356&#34; y=&#34;82&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;370&#34; y=&#34;155&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;3&lt;/text&gt;
&lt;text x=&#34;406&#34; y=&#34;120&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;3&lt;/text&gt;
&lt;text x=&#34;400&#34; y=&#34;194&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;443&#34; y=&#34;169&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;418&#34; y=&#34;239&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;417&#34; y=&#34;233&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;415&#34; y=&#34;227&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;467&#34; y=&#34;226&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;465&#34; y=&#34;218&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;462&#34; y=&#34;211&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;189&#34; y=&#34;107&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;text x=&#34;176&#34; y=&#34;58&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-1&lt;/text&gt;
&lt;text x=&#34;144&#34; y=&#34;126&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;254&lt;/text&gt;
&lt;text x=&#34;119&#34; y=&#34;82&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-2&lt;/text&gt;
&lt;text x=&#34;105&#34; y=&#34;155&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;253&lt;/text&gt;
&lt;text x=&#34;69&#34; y=&#34;120&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-3&lt;/text&gt;
&lt;text x=&#34;75&#34; y=&#34;194&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;252&lt;/text&gt;
&lt;text x=&#34;32&#34; y=&#34;169&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-4&lt;/text&gt;
&lt;text x=&#34;57&#34; y=&#34;239&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;58&#34; y=&#34;233&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;60&#34; y=&#34;227&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;8&#34; y=&#34;226&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;10&#34; y=&#34;218&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;13&#34; y=&#34;211&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;370&#34; y=&#34;420&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;365&#34; y=&#34;425&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;360&#34; y=&#34;429&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;406&#34; y=&#34;456&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;400&#34; y=&#34;462&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;393&#34; y=&#34;467&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;331&#34; y=&#34;450&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;126&lt;/text&gt;
&lt;text x=&#34;356&#34; y=&#34;494&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;126&lt;/text&gt;
&lt;text x=&#34;286&#34; y=&#34;469&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;127&lt;/text&gt;
&lt;text x=&#34;299&#34; y=&#34;517&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;127&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;475&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;128&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;525&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-128&lt;/text&gt;
&lt;text x=&#34;189&#34; y=&#34;469&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;129&lt;/text&gt;
&lt;text x=&#34;176&#34; y=&#34;517&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-127&lt;/text&gt;
&lt;text x=&#34;144&#34; y=&#34;450&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;130&lt;/text&gt;
&lt;text x=&#34;119&#34; y=&#34;494&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-126&lt;/text&gt;
&lt;text x=&#34;105&#34; y=&#34;420&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;425&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;115&#34; y=&#34;429&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;69&#34; y=&#34;456&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;75&#34; y=&#34;462&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;82&#34; y=&#34;467&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;144&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;Value&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;14&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;Interpretation&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;278&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Signed interpretation&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;298&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;of byte values&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
circle radius 1.5 fill 0xd8ecf3

define $inner {
  line from (0,0) then 1.3 heading $1 invisible
  text at last line.end $2
}

define $outer {
  line from (0,0) then 1.65 heading $1 invisible
  text at last line.end $2
}

$inner(0, &#34;0&#34;); $outer(0, &#34;0&#34; bold)
$inner(15, &#34;1&#34;); $outer(15, &#34;1&#34; bold)
$inner(30, &#34;2&#34;); $outer(30, &#34;2&#34; bold)
$inner(45, &#34;3&#34;); $outer(45, &#34;3&#34; bold)
$inner(60, &#34;4&#34;); $outer(60, &#34;4&#34; bold)
$inner(75, &#34;·&#34; bold); $inner(73, &#34;·&#34; bold); $inner(71, &#34;·&#34; bold)
$outer(75, &#34;·&#34; bold); $outer(73, &#34;·&#34; bold); $outer(71, &#34;·&#34; bold)
$inner(345, &#34;255&#34;); $outer(345, &#34;-1&#34; bold)
$inner(330, &#34;254&#34;); $outer(330, &#34;-2&#34; bold)
$inner(315, &#34;253&#34;); $outer(315, &#34;-3&#34; bold)
$inner(300, &#34;252&#34;); $outer(300, &#34;-4&#34; bold)
$inner(285, &#34;·&#34; bold); $inner(287, &#34;·&#34; bold); $inner(289, &#34;·&#34; bold)
$outer(285, &#34;·&#34; bold); $outer(287, &#34;·&#34; bold); $outer(289, &#34;·&#34; bold)

$inner(135, &#34;·&#34; bold); $inner(137, &#34;·&#34; bold); $inner(139, &#34;·&#34; bold)
$outer(135, &#34;·&#34; bold); $outer(137, &#34;·&#34; bold); $outer(139, &#34;·&#34; bold)
$inner(150, &#34;126&#34;); $outer(150, &#34;126&#34; bold)
$inner(165, &#34;127&#34;); $outer(165, &#34;127&#34; bold)
$inner(180, &#34;128&#34;); $outer(180, &#34;-128&#34; bold)
$inner(195, &#34;129&#34;); $outer(195, &#34;-127&#34; bold)
$inner(210, &#34;130&#34;); $outer(210, &#34;-126&#34; bold)
$inner(225, &#34;·&#34; bold); $inner(223, &#34;·&#34; bold); $inner(221, &#34;·&#34; bold)
$outer(225, &#34;·&#34; bold); $outer(223, &#34;·&#34; bold); $outer(221, &#34;·&#34; bold)


text at (0, 1) &#34;Value&#34; big bold
text at (0, 1.9) &#34;Interpretation&#34; big bold
text at (0,0) &#34;Signed interpretation&#34; italic &#34;of byte values&#34; italic
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Since there are 256 spots in a full circle, going 255 spaces clockwise
(adding 255) is the same as going one space counter-clockwise
(subtracting 1).&lt;/p&gt;
&lt;p&gt;But that still only gives us 256 different values.&lt;/p&gt;
&lt;h2 id=&#34;bigger-numbers&#34;&gt;Bigger numbers&lt;/h2&gt;
&lt;p&gt;For bigger numbers, we&amp;rsquo;ll have to combine pairs of bytes, or groups of
4 or 8 (or more) bytes.&lt;/p&gt;
&lt;p&gt;In normal arabic numerals, we have &lt;strong&gt;ten&lt;/strong&gt; choices, 0–9, and then
spill over to the next space, whose value is multiplied by &lt;strong&gt;ten&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We can do the same with bytes: we have &lt;strong&gt;256&lt;/strong&gt; choices, 0–255, and
then spill over to the next space, whose value is multiplied by
&lt;strong&gt;256&lt;/strong&gt;.&lt;/p&gt;
&lt;div id=&#39;pikchr-5&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-5&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:219px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 219.093 465.12&#34;&gt;
&lt;path d=&#34;M2,78L74,78L74,42L2,42Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;60&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M2,114L74,114L74,78L2,78Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;96&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M2,150L74,150L74,114L2,114Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;165&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M2,216L74,216L74,180L2,180Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;198&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;254&lt;/text&gt;
&lt;path d=&#34;M2,252L74,252L74,216L2,216Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;234&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;path d=&#34;M2,288L74,288L74,252L2,252Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;270&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;256&lt;/text&gt;
&lt;path d=&#34;M2,324L74,324L74,288L2,288Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;306&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;257&lt;/text&gt;
&lt;path d=&#34;M2,360L74,360L74,324L2,324Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;342&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;258&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;375&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M2,426L74,426L74,390L2,390Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;408&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;65534&lt;/text&gt;
&lt;path d=&#34;M2,462L74,462L74,426L2,426Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;444&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;65535&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Value&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;32&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;52&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;72&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;path d=&#34;M110,78L146,78L146,42L110,42Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;60&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,114L146,114L146,78L110,78Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;96&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,150L146,150L146,114L110,114Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;165&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M110,216L146,216L146,180L110,180Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;198&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,252L146,252L146,216L110,216Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;234&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,288L146,288L146,252L110,252Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;270&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M110,324L146,324L146,288L110,288Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;306&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M110,360L146,360L146,324L110,324Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;342&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;375&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M110,426L146,426L146,390L110,390Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;408&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;path d=&#34;M110,462L146,462L146,426L110,426Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;444&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;path d=&#34;M146,78L182,78L182,42L146,42Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;60&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M146,114L182,114L182,78L146,78Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;96&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M146,150L182,150L182,114L146,114Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;164&#34; y=&#34;165&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M146,216L182,216L182,180L146,180Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;198&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;254&lt;/text&gt;
&lt;path d=&#34;M146,252L182,252L182,216L146,216Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;234&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;path d=&#34;M146,288L182,288L182,252L146,252Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;270&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M146,324L182,324L182,288L146,288Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;306&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M146,360L182,360L182,324L146,324Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;342&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;164&#34; y=&#34;375&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M146,426L182,426L182,390L146,390Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;408&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;254&lt;/text&gt;
&lt;path d=&#34;M146,462L182,462L182,426L146,426Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;444&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Representation&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;32&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;as 2 bytes&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;52&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;72&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
down
box width linewid height 0.5*linewid &#34;0&#34;
box same &#34;1&#34;
box same &#34;2&#34;
text  &#34;⋮&#34;
box same &#34;254&#34;
box same &#34;255&#34;
box same &#34;256&#34;
box same &#34;257&#34;
box same &#34;258&#34;
text  &#34;⋮&#34;
box same &#34;65534&#34;
box same &#34;65535&#34;

text at 1st box.n &#34;Value&#34; bold &#34;&#34; &#34;&#34; &#34;&#34;

I1: box same as 1st box with w at 1st box.e + (0.5*linewid,0) width 0.25 fill 0xd8ecf3 &#34;0&#34;
box same &#34;0&#34;
box same &#34;0&#34;
text  &#34;⋮&#34;
box same &#34;0&#34;
box same &#34;0&#34;
box same &#34;1&#34;
box same &#34;1&#34;
box same &#34;1&#34;
text  &#34;⋮&#34;
box same &#34;255&#34;
box same &#34;255&#34;

I2: box same as I1 with w at I1.e &#34;0&#34;
box same &#34;1&#34;
box same &#34;2&#34;
text  &#34;⋮&#34;
box same &#34;254&#34;
box same &#34;255&#34;
box same &#34;0&#34;
box same &#34;1&#34;
box same &#34;2&#34;
text  &#34;⋮&#34;
box same &#34;254&#34;
box same &#34;255&#34;

text at I1.ne &#34;Representation&#34; bold &#34;as 2 bytes&#34; bold &#34;&#34; &#34;&#34;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;So, &lt;code&gt;255 = 0×256 + 255&lt;/code&gt;, and &lt;code&gt;258 = 1×256 + 2&lt;/code&gt;. I&amp;rsquo;ve put the “×256”
byte first, to match how in the number “12”, the “×10” digit goes
first. Which byte you put first is a choice, and most current
computers actually put the littlest byte first and the “×256” byte
second. This is called “little-endian”, because the littlest byte
comes first. The opposite
“&lt;a href=&#34;https://en.wikipedia.org/wiki/Endianness&#34;&gt;endianness&lt;/a&gt;” is of course
“big-endian”. When you&amp;rsquo;re storing things on disk, or &lt;a href=&#34;https://hackaday.com/2015/12/12/raspberry-pi-communication-via-laser/&#34;&gt;sending numbers
to a Raspberry Pi with a
laser&lt;/a&gt;,
you can pick your own endianness!&lt;/p&gt;
&lt;p&gt;Just like with individual bytes, you can use half the space for
negative numbers, and turn the range 0…65535 into -32768…32767.&lt;/p&gt;
&lt;h2 id=&#34;a-note-on-names-for-things&#34;&gt;A note on names for things&lt;/h2&gt;
&lt;p&gt;All of these things have multiple names you might run into:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Bytes &lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt; Signed?&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Min&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Max&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt; Common names&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;255&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;(unsigned)&lt;/code&gt; &lt;em&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;(unsigned)&lt;/code&gt; &lt;em&gt;&lt;code&gt;char&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;uint8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-128&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;127&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;(signed)&lt;/code&gt; &lt;em&gt;&lt;code&gt;char&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;int8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;65535&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;unsigned int&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;unsigned short&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-32768&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;32767&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;int&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2³²-1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;unsigned int&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;unsigned long&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;uint32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-2³¹&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2³¹-1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;int&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;long&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;rune&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2⁶⁴-1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;unsigned long&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;em&gt;&lt;code&gt;uint&lt;/code&gt;&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-2⁶³&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2⁶³-1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;long&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;em&gt;&lt;code&gt;int&lt;/code&gt;&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note that many of the terms are ambiguous, between programming
languages, or even between computers.  In Go, for example, “int” can
mean 32 or 64 bits, depending on whether your computer is running in
32- or 64-bit mode. I&amp;rsquo;ve marked ambiguous names in &lt;em&gt;&lt;code&gt;italics&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In the &lt;a href=&#34;../1c/&#34;&gt;next part&lt;/a&gt;, we&amp;rsquo;ll discuss how your program&amp;rsquo;s
variables point to things in memory.&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;That&amp;rsquo;s 32×1024×1024×1024. 1024 bytes is a “kilobyte”, because
1024 is close to 1000, 1024×1024=1048576 bytes is a
“megabyte”, because it&amp;rsquo;s close to a million bytes, and
1024×1024×1024=1073741824 bytes is a “gigabyte”.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Technically, according to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Metric_prefix&#34;&gt;SI
prefixes&lt;/a&gt;, a
“kilobyte” (KB) is exactly 1000 bytes, and you should use
“kibibyte” (KiB) to refer to 1024 bytes. Since “kibibyte” sounds
more like a Pokémon or a kind of dog food for small, yappy dogs,
&lt;em&gt;nobody&lt;/em&gt; uses it. Except hard disk manufacturers, who insist on
using exact powers of 10 to make their hard disks sound 10%
bigger (for terabytes) than they really are.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;If you&amp;rsquo;re on Linux or MacOS, you can type &lt;code&gt;man ascii&lt;/code&gt; in your
terminal to see a list of ASCII codes. Ignore the hexadecimal (for
now) and octal (forever) sections; the decimal section at the bottom
is useful.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>
    
    
    
    <item>
      <title>CS Ramble — Set 1a - questions</title>
      <link>https://zellyn.com/2022/02/cs-ramble/1a/</link>
      <pubDate>Wed, 02 Feb 2022 19:58:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/02/cs-ramble/1a/</guid>
      <description>&lt;p&gt;&lt;em&gt;These are the questions for set 1 of &lt;a href=&#34;../&#34;&gt;A Ramble Around CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;questions-for-set-1&#34;&gt;Questions for set 1&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;When you say &lt;code&gt;a = &amp;quot;Hello, world&amp;quot;&lt;/code&gt; in your favorite language, how is
the string stored? How about &lt;code&gt;&amp;quot;Hello, 世界&amp;quot;&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;When you say &lt;code&gt;a = &amp;quot;Hello&amp;quot;&lt;/code&gt; and &lt;code&gt;b = &amp;quot; world&amp;quot;&lt;/code&gt; and then do &lt;code&gt;c = a + b&lt;/code&gt;, what happens? How are &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; stored?&lt;/li&gt;
&lt;li&gt;When you say &lt;code&gt;a = 42&lt;/code&gt;, and then &lt;code&gt;b = a&lt;/code&gt;, and then &lt;code&gt;b = 17&lt;/code&gt;, what are
&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;? Why?&lt;/li&gt;
&lt;li&gt;When you say &lt;code&gt;a = {&amp;quot;foo&amp;quot;: 42}&lt;/code&gt;, and then &lt;code&gt;b = a&lt;/code&gt;, and then &lt;code&gt;b.foo = 17&lt;/code&gt;, what are &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;? Why?&lt;/li&gt;
&lt;li&gt;Why do computer people use “foo” and “bar” all the time? What’s up
with that? What about 42 and 17?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;We&amp;rsquo;ll start discussing how memory is laid out and used to represent
numbers and text in the &lt;a href=&#34;../1b/&#34;&gt;next part&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>A ramble around CS</title>
      <link>https://zellyn.com/2022/02/cs-ramble/</link>
      <pubDate>Tue, 01 Feb 2022 08:00:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/02/cs-ramble/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;It turns out we have several folks at Square who arrived at
programming through boot-camps, or other non-CS paths, and feel a sort
of lingering insecurity (or get explicitly told by unkind people) that
their path left them without a solid grasp of “the fundamentals”.&lt;/p&gt;
&lt;p&gt;I have the pleasure of having a boot-camp grad on our team, &lt;a href=&#34;https://amyh.dev/&#34;&gt;Amy
Henning&lt;/a&gt;: she&amp;rsquo;s now several tech jobs in (and
fantastically capable), and has a great perspective on what our
industry can be like to people coming in from outside.&lt;/p&gt;
&lt;p&gt;We decided to try an experiment for folks in our company interested in
learning CS: I&amp;rsquo;ll play the grizzled veteran, and come up with
provocative questions, and we&amp;rsquo;ll meet for an hour every two weeks and
discuss them. I&amp;rsquo;m excited to see how it goes!&lt;/p&gt;
&lt;h2 id=&#34;encouragement&#34;&gt;Encouragement&lt;/h2&gt;
&lt;p&gt;As mentioned above, the genesis of this ramble was trying to fill in
the gaps that cause bootcamp grads to feel shaky. There&amp;rsquo;s an
interesting (and hopefully encouraging) thing about the stuff we&amp;rsquo;re
going to cover: for many of the concepts, after learning, thinking,
and chatting about them for an hour or two, you&amp;rsquo;ll be more comfortable
with them than many working programmers!&lt;/p&gt;
&lt;p&gt;For every CS grad who spent entire classes working with 1s and 0s,
desigining circuits to add and manipulate binary numbers, there are
two more programmers who took a different path and never learned&amp;mdash;or
don&amp;rsquo;t remember&amp;mdash;how to twiddle bits. Even a hand-wavy understanding
of how the processor&amp;rsquo;s use of memory affects the speed at which your
program executes will put you ahead of the 40%&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; of all programmers
for whom the CPU is just a complete mystery.&lt;/p&gt;
&lt;h2 id=&#34;how-to-use-these-blog-posts&#34;&gt;How to use these blog posts&lt;/h2&gt;
&lt;p&gt;As mentioned briefly before, every two weeks, we discuss a list of
questions shared two weeks previously. The next day, I send out a new
set of questions for folks to ponder, and we discuss those two weeks
later.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There is actually a &lt;strong&gt;lot&lt;/strong&gt; of material here. Working through it on
your own might be overwhelming, and a group or mentor would be very
helpful. If you decide to do it alone, don&amp;rsquo;t be afraid to go as
slowly as you need to. There&amp;rsquo;s no time limit!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The questions for each week below are verbatim from our group, while
the following posts are longer and prettier versions than we could
manage to discuss verbally in just one hour.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;ll probably be more satisfying to read the questions, and then give
yourself some time to investigate or at least think about them for a
while before reading the discussion posts. Or even work through the
questions with a group. If you do that, please get in touch!&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&#34;code-snippets&#34;&gt;Code snippets&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ll try to jump between common programming languages&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;, but keep all
snippets short and understandable.&lt;/p&gt;
&lt;h2 id=&#34;set-1&#34;&gt;Set 1&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;1a/&#34;&gt;Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;1b/&#34;&gt;Memory, text, and numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;1c/&#34;&gt;Variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;set-2&#34;&gt;Set 2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;2a/&#34;&gt;Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;2b/&#34;&gt;Bases&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;2c/&#34;&gt;Binary and bits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;2d/&#34;&gt;Boolean logic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;2e/&#34;&gt;Bit twiddling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!--
## Set 3
- [Questions](../../03/cs-ramble/3a/)
- [TBD](3b/)
--&gt;
&lt;h2 id=&#34;credits&#34;&gt;Credits&lt;/h2&gt;
&lt;p&gt;Any errors, omissions, or tangled didactic paths are the fault of me,
Zellyn.&lt;/p&gt;
&lt;p&gt;Thanks to Amy Henning and the whole boot-camp-grad crew at Square for
working through the first draft of this, making it up as we go along.&lt;/p&gt;
&lt;p&gt;Thanks to Eric Ayers for thoughtful suggestions and comments, most of
which I&amp;rsquo;m still working to incorporate!&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;83% of all statistics are made up on the spot&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;Yes, including this one.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;In fact, please get in touch for any reason at all! We&amp;rsquo;re doing
this to be helpful to people, and any feedback that could make it more
useful to more people would be welcome.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;But my preference for Go might occasionally be obvious!&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    
    
    <item>
      <title>gopikchr: a yakshave</title>
      <link>https://zellyn.com/2022/01/gopikchr-a-yakshave/</link>
      <pubDate>Sun, 30 Jan 2022 13:11:00 -0500</pubDate>
      
      <guid>https://zellyn.com/2022/01/gopikchr-a-yakshave/</guid>
      <description>&lt;p&gt;I just completed part of a long
&lt;a href=&#34;https://en.wiktionary.org/wiki/yak_shaving&#34;&gt;yak-shave&lt;/a&gt; to add
&lt;a href=&#34;https://pikchr.org&#34;&gt;Pikchr&lt;/a&gt; support to my blog, generated with
&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;. I hope it helps to spread of Pikchr, and
spurs implementations in other publishing pipelines.&lt;/p&gt;
&lt;p&gt;Actually, it&amp;rsquo;s just the bottom part of an even longer yak-shave!&lt;/p&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:651px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 651.024 264.384&#34;&gt;
&lt;path d=&#34;M2,30L506,30L506,2L2,2Z&#34;  style=&#34;fill:rgb(197,216,239);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;254&#34; y=&#34;16&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;open my garage with a raspberry pi&lt;/text&gt;
&lt;path d=&#34;M20,59L524,59L524,30L20,30Z&#34;  style=&#34;fill:rgb(217,230,242);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;272&#34; y=&#34;45&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;achieve accurate timing on a raspberry pi&lt;/text&gt;
&lt;path d=&#34;M38,88L542,88L542,59L38,59Z&#34;  style=&#34;fill:rgb(197,216,239);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;290&#34; y=&#34;74&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;understand how to use DMA for gpio sequences&lt;/text&gt;
&lt;path d=&#34;M56,117L560,117L560,88L56,88Z&#34;  style=&#34;fill:rgb(217,230,242);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;308&#34; y=&#34;102&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;“I should document this in a blog post”&lt;/text&gt;
&lt;path d=&#34;M74,146L578,146L578,117L74,117Z&#34;  style=&#34;fill:rgb(197,216,239);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;326&#34; y=&#34;131&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;“I need Pikchr for diagrams”: make Pikchr work in hugo&lt;/text&gt;
&lt;path d=&#34;M92,174L596,174L596,146L92,146Z&#34;  style=&#34;fill:rgb(217,230,242);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;344&#34; y=&#34;160&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;make Pikchr work in hugo&lt;/text&gt;
&lt;path d=&#34;M110,203L614,203L614,174L110,174Z&#34;  style=&#34;fill:rgb(197,216,239);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;362&#34; y=&#34;189&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;port Pikchr to go&lt;/text&gt;
&lt;path d=&#34;M128,232L632,232L632,203L128,203Z&#34;  style=&#34;fill:rgb(217,230,242);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;380&#34; y=&#34;218&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;port the lemon parser to go&lt;/text&gt;
&lt;text x=&#34;578&#34; y=&#34;131&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; ✓&lt;/text&gt;
&lt;text x=&#34;596&#34; y=&#34;160&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; ✓&lt;/text&gt;
&lt;text x=&#34;614&#34; y=&#34;189&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; ✓&lt;/text&gt;
&lt;text x=&#34;632&#34; y=&#34;218&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; ✓&lt;/text&gt;
&lt;text x=&#34;380&#34; y=&#34;254&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;(Click to see source)&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
down
box width 3.5in height 0.2in fill 0xc5d8ef \
                       &#34;open my garage with a raspberry pi&#34;
box same fill 0xd9e6f2 with .nw at linewid/4 east of 1st box.sw &#34;achieve accurate timing on a raspberry pi&#34;
box same as 1st box with .nw at linewid/4 east of 2nd box.sw    &#34;understand how to use DMA for gpio sequences&#34;
box same as 2nd box with .nw at linewid/4 east of 3rd box.sw   &#34;“I should document this in a blog post”&#34;
box same as 1st box with .nw at linewid/4 east of 4th box.sw   &#34;“I need Pikchr for diagrams”: make Pikchr work in hugo&#34;
box same as 2nd box with .nw at linewid/4 east of 5th box.sw   &#34;make Pikchr work in hugo&#34;
box same as 1st box with .nw at linewid/4 east of 6th box.sw   &#34;port Pikchr to go&#34;
box same as 2nd box with .nw at linewid/4 east of 7th box.sw   &#34;port the lemon parser to go&#34;
text at 5th box.e  &#34; ✓&#34; ljust
text at 6th box.e  &#34; ✓&#34; ljust
text at 7th box.e  &#34; ✓&#34; ljust
text at 8th box.e  &#34; ✓&#34; ljust
text at last box.s - (0,0.15) &#34;(Click to see source)&#34; italic small
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://pikchr.org&#34;&gt;Pikchr&lt;/a&gt; is a modern version of Brian Kernighan&amp;rsquo;s
&lt;a href=&#34;https://en.wikipedia.org/wiki/PIC_(markup_language)&#34;&gt;PIC markup language&lt;/a&gt;,
created by the folks who make SQLite and Fossil. Like so many things from
Bell Labs, it is extremely powerful, once you invest just a little time
to understand how it works.&lt;/p&gt;
&lt;p&gt;Pikchr is implemented in a single file,
&lt;a href=&#34;https://pikchr.org/home/doc/trunk/doc/build.md&#34;&gt;&lt;code&gt;pikchr.y&lt;/code&gt;&lt;/a&gt;,
processed using the &lt;a href=&#34;https://sqlite.org/src/doc/trunk/doc/lemon.html&#34;&gt;Lemon
Parser&lt;/a&gt; to generate
&lt;code&gt;lemon.c&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I decided to port both the Lemon Parser and Pikchr from C to Go, by
hand.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;Go and Pikchr are great! A pure-Go port of Pikchr might be useful to
others.&lt;/p&gt;
&lt;p&gt;Hugo might more readily accept pure-Go additions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sheer bloody-mindedness.&lt;/em&gt; At work we always have to make pragmatic
decisions. The repressed urge to fully shave the yak comes out in my
own time.&lt;/p&gt;
&lt;p&gt;I respect the SQLite folks: their software is an amazing gift to our
community. Think of this as a &lt;a href=&#34;https://apenwarr.ca/log/20211229&#34;&gt;gift&lt;/a&gt;
too.&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;How?&lt;/h2&gt;
&lt;p&gt;By hand. I looked at &lt;a href=&#34;https://pkg.go.dev/modernc.org/ccgo/v3&#34;&gt;ccgo&lt;/a&gt;,
the amazing C-to-Go compiler used to generate &lt;a href=&#34;https://pkg.go.dev/modernc.org/sqlite&#34;&gt;modernc
sqlite&lt;/a&gt;, a pure-Go translation
of sqlite. However, the code it generats to perform its magic is
(necessarily) complicated and ugly, which seems contrary to the spirit
of Pikchr. Nothing for it, but to dive in by hand. It can be almost
meditative:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Translate &lt;code&gt;lemon.c&lt;/code&gt; to Go, but still generate C code&lt;/li&gt;
&lt;li&gt;Find all the bugs until it compiles and generates the exact same C
code&lt;/li&gt;
&lt;li&gt;Translate the parser template, &lt;code&gt;lempar.tpl&lt;/code&gt; to Go, and generate Go
code&lt;/li&gt;
&lt;li&gt;Laboriously find all the bugs&lt;/li&gt;
&lt;li&gt;Translate &lt;code&gt;pikchr.y&lt;/code&gt; from C to Go&lt;/li&gt;
&lt;li&gt;Once again, fix all the bugs until the Go version generates exactly
the same Pikchr output&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In all, it was almost 12,000 lines of code. I started out trying to be
clever, but learned to keep things as similar as possible.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I tried to replace &lt;code&gt;char *&lt;/code&gt; with &lt;code&gt;[]rune&lt;/code&gt; at first, to handle
unicode rather than ascii. But I ended up using &lt;code&gt;[]byte&lt;/code&gt;, and even
zero-terminating the string! To move forward through the input, &lt;code&gt;z += 3&lt;/code&gt; becomes &lt;code&gt;z = z[3:]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;I tried replacing dynamically-sized arrays represented by &lt;code&gt;struct *&lt;/code&gt;,
&lt;code&gt;current_size&lt;/code&gt;, and &lt;code&gt;n&lt;/code&gt; (current index) with just slices. However, it turns
out to be cleaner to keep &lt;code&gt;n&lt;/code&gt; around, because the code will often
reference &lt;code&gt;s[n+1]&lt;/code&gt; or &lt;code&gt;s[n-1]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gopikchr/golemon&#34;&gt;golemon&lt;/a&gt;, the port of lemon to Go&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gopikchr/gopikchr&#34;&gt;gopikchr&lt;/a&gt;, the port of Pikchr to Go&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gopikchr/goldmark-pikchr&#34;&gt;goldmark-pikchr&lt;/a&gt;, a
goldmark plugin to render Pikchr diagrams in markdown&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zellyn/hugo/commit/87bbe9f2140a21e6d2759e7005c9e5a787651832&#34;&gt;hugo commit&lt;/a&gt;,
the tiny change needed to enable Pikchr support in Hugo in my fork&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-next&#34;&gt;What next?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Find the remaining bugs. I&amp;rsquo;m certain I didn&amp;rsquo;t find them all&lt;/li&gt;
&lt;li&gt;Set up github actions to create issues in the golemon and gopikchr
repositories whenever the C versions in Fossil change. Both change
infrequently, so keeping up should be little work&lt;/li&gt;
&lt;li&gt;Possibly, use these techniques to port the SQLite parser to Go, if
&lt;a href=&#34;https://github.com/kyleconroy/sqlc/issues/161#issuecomment-1022541349&#34;&gt;someone else doesn&amp;rsquo;t do it
first&lt;/a&gt;. A
Go SQLite-compatible parser seems more likely to get widely used,
and depended on, and I&amp;rsquo;m not certain I want to be the maintainer of
a &lt;a href=&#34;https://xkcd.com/2347/&#34;&gt;popular&lt;/a&gt; open source package&lt;/li&gt;
&lt;li&gt;Enjoy using Pikchr, and seeing other people use it!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;  &lt;!-- vertical spacer --&gt;&lt;/p&gt;
&lt;div id=&#39;pikchr-1&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-1&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:292px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 292.32 292.32&#34;&gt;
&lt;circle cx=&#34;146&#34; cy=&#34;146&#34; r=&#34;144&#34;  style=&#34;fill:rgb(255,255,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M38,146Q38,254 146,254&#34;  style=&#34;fill:none;stroke-width:3.24;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M146,254Q254,254 254,146&#34;  style=&#34;fill:none;stroke-width:3.24;stroke:rgb(0,0,0);&#34; /&gt;
&lt;ellipse cx=&#34;102&#34; cy=&#34;88&#34; rx=&#34;18&#34; ry=&#34;36&#34;  style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;ellipse cx=&#34;189&#34; cy=&#34;88&#34; rx=&#34;18&#34; ry=&#34;36&#34;  style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
circle radius 1 fill yellow
arc from -0.75,0 to 0,-0.75 thick
arc same from 0,-0.75 to 0.75,0
ellipse height 0.5 width 0.25 at -0.3,0.4 fill black
ellipse same at 0.3,0.4
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;  &lt;!-- vertical spacer --&gt;&lt;/p&gt;
&lt;h2 id=&#34;comments-reach-me-on-twitter&#34;&gt;Comments? Reach me on Twitter&lt;/h2&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I blogged a few days ago about porting Pikchr and the Lemon Parser to Go, but just now realized linking to a tweet at the end of the post is a satisfactory way to do conversations if your static blog doesn&amp;#39;t have comments!&lt;a href=&#34;https://t.co/aXtDNRMsyC&#34;&gt;https://t.co/aXtDNRMsyC&lt;/a&gt;&lt;/p&gt;&amp;mdash; @zellyn@hachyderm.io (@zellyn) &lt;a href=&#34;https://twitter.com/zellyn/status/1488960414595620870?ref_src=twsrc%5Etfw&#34;&gt;February 2, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;


&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>
    
    
    
    <item>
      <title>Project Todos</title>
      <link>https://zellyn.com/2018/03/project-todos/</link>
      <pubDate>Sat, 31 Mar 2018 22:50:18 -0400</pubDate>
      
      <guid>https://zellyn.com/2018/03/project-todos/</guid>
      <description>&lt;p&gt;In an effort to organize the many side-projects I would &lt;em&gt;like&lt;/em&gt; to do
— at least in my mind — but probably never will, I created
a &lt;a href=&#34;https://zellyn.com/page/projects/todo/&#34;&gt;Projects: TODO&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve never collaborated much on side projects. If something strikes
your fancy, I would &lt;em&gt;love&lt;/em&gt; to work together.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>New new site</title>
      <link>https://zellyn.com/2016/04/new-new-site/</link>
      <pubDate>Sun, 03 Apr 2016 16:57:38 -0400</pubDate>
      
      <guid>https://zellyn.com/2016/04/new-new-site/</guid>
      <description>&lt;p&gt;I just migrated this site from &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt; to
&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Expect problems (and hopefully more
frequent updates).&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>Continued fractions</title>
      <link>https://zellyn.com/2016/04/continued-fractions/</link>
      <pubDate>Sun, 03 Apr 2016 15:30:06 -0400</pubDate>
      
      <guid>https://zellyn.com/2016/04/continued-fractions/</guid>
      <description>$$
26 + \frac{1}{5 + \frac{1}{12 + \frac{1}{12 + \frac{1}{25 + \frac{1}{14 + \cdots}}}}}
$$
&lt;p&gt;Last night I lay thinking of
&lt;a href=&#34;https://en.wikipedia.org/wiki/Continued_fraction&#34;&gt;Continued Fractions&lt;/a&gt;,
trying to understand not just the notation, but what they mean.&lt;/p&gt;
&lt;p&gt;Trying to pull apart and unwind smaller and smaller parts of these
recurrent shapes gave way, as I fell asleep, to the same kind of
recursive unwinding, but of my own past.&lt;/p&gt;
&lt;p&gt;I dreamed all night of scattered childhood memories. At one point,
remembering a song – or perhaps just the act of singing – I was
pierced with a flash of a long-forgotten feeling: that all is right
with the world, that Mum and Dad are in charge, that I am safe.&lt;/p&gt;
&lt;p&gt;It’s amazing how profoundly we lose that feeling.&lt;/p&gt;
</description>
    </item>
    
    
    
    <item>
      <title>New Site</title>
      <link>https://zellyn.com/2016/04/new-site/</link>
      <pubDate>Sun, 03 Apr 2016 15:30:00 -0400</pubDate>
      
      <guid>https://zellyn.com/2016/04/new-site/</guid>
      <description>&lt;p&gt;Welcome to my new site. I’m just trying to get everything working:
expect both style and substance later.&lt;/p&gt;
&lt;p&gt;For now, my &lt;a href=&#34;http://zellyn.blogspot.com/&#34;&gt;old site&lt;/a&gt; is probably more
interesting.&lt;/p&gt;
</description>
    </item>
    
    
    
    
    
    
    
    
  </channel>
</rss>
