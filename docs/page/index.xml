<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pages on Zellyn Hunter</title>
    <link>https://zellyn.com/page/</link>
    <description>Recent content in Pages on Zellyn Hunter</description>
    <generator>Hugo -- gohugo.io</generator>

	<atom:link href="https://zellyn.com/page/index.xml" rel="self" type="application/rss+xml" />



    <item>
      <title>Tailscale diagram in Pikchr</title>
      <link>https://zellyn.com/2022/02/tailscale-diagram-in-pikchr/</link>
      <pubDate>Mon, 07 Feb 2022 00:49:00 -0500</pubDate>

      <guid>https://zellyn.com/2022/02/tailscale-diagram-in-pikchr/</guid>
      <description>&lt;p&gt;Just for fun, I decided to try to use &lt;a href=&#34;https://pikchr.org&#34;&gt;Pikchr&lt;/a&gt; to
reproduce one of the diagrams in Tailscale&amp;rsquo;s &lt;a href=&#34;https://tailscale.com/blog/how-nat-traversal-works/&#34;&gt;How NAT traversal
works&lt;/a&gt; article,
which often receive praise.&lt;/p&gt;
&lt;p&gt;Pikchr is not intended for this kind of diagram:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Pikchr is not intended as a replacement for point-and-click diagrams
creation software. Pikchr is to point-and-click systems as Markdown
is to MS-Word or Google-Docs. Point-and-click interfaces have their
place. But so do text-based systems such as Markdown and Pikchr.&lt;br/&gt;
    &amp;mdash; &lt;a href=&#34;https://pikchr.org/home/doc/trunk/doc/purpose.md&#34;&gt;The Intended Scope And Purpose Of Pikchr&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And indeed, reproducing the diagram took me hours, whereas I could
have reproduced it in a point-and-click diagram editor in 10 or 15
minutes. The diagrams I made about &lt;a href=&#34;../cs-ramble/1b/&#34;&gt;memory and
variables&lt;/a&gt; are a better example of the kind of thing
you can whip up quickly while writing.&lt;/p&gt;
&lt;p&gt;Still, it was fun, and hopefully instructive, and those diagrams
really are great.&lt;/p&gt;
&lt;!-- make the image wider than the usual 600px in this theme --&gt;
&lt;div style=&#39;width:700px;padding:auto;position:relative;left:-75px&#39;&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:2913px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 2913.12 1547.28&#34;&gt;
&lt;path d=&#34;M30,789L722,789A28 28 0 0 0 750 760L750,371A28 28 0 0 0 722 342L30,342A28 28 0 0 0 2 371L2,760A28 28 0 0 0 30 789Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M254,637L340,637A28 28 0 0 0 369 609L369,522A28 28 0 0 0 340 493L254,493A28 28 0 0 0 225 522L225,609A28 28 0 0 0 254 637Z&#34;  style=&#34;fill:rgb(52,52,51);&#34; /&gt;
&lt;path d=&#34;M271,619A23 23 0 0 0 295 596L295,535A23 23 0 0 0 271 511A23 23 0 0 0 247 535L247,596A23 23 0 0 0 271 619Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;path d=&#34;M265,539L294,539L294,511L265,511Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;text x=&#34;297&#34; y=&#34;449&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(89,88,87)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;VPN Client&lt;/text&gt;
&lt;text x=&#34;297&#34; y=&#34;729&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(3,3,3)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Workstation&lt;/text&gt;
&lt;path d=&#34;M30,1545L563,1545A28 28 0 0 0 592 1516L592,1127A28 28 0 0 0 563 1098L30,1098A28 28 0 0 0 2 1127L2,1516A28 28 0 0 0 30 1545Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M676,1545L733,1545A28 28 0 0 0 762 1516L762,1127A28 28 0 0 0 733 1098L676,1098A28 28 0 0 0 647 1127L647,1516A28 28 0 0 0 676 1545Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M254,1393L340,1393A28 28 0 0 0 369 1365L369,1278A28 28 0 0 0 340 1249L254,1249A28 28 0 0 0 225 1278L225,1365A28 28 0 0 0 254 1393Z&#34;  style=&#34;fill:rgb(52,52,51);&#34; /&gt;
&lt;path d=&#34;M271,1375A23 23 0 0 0 295 1352L295,1291A23 23 0 0 0 271 1267A23 23 0 0 0 247 1291L247,1352A23 23 0 0 0 271 1375Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;path d=&#34;M265,1296L294,1296L294,1267L265,1267Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;text x=&#34;297&#34; y=&#34;1205&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(89,88,87)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;VPN Client&lt;/text&gt;
&lt;text x=&#34;297&#34; y=&#34;1485&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(3,3,3)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Workstation&lt;/text&gt;
&lt;path d=&#34;M1089,1275L1895,1275A28 28 0 0 0 1924 1246L1924,547A28 28 0 0 0 1895 519L1089,519A28 28 0 0 0 1060 547L1060,1246A28 28 0 0 0 1089 1275Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M1449,983L1535,983A28 28 0 0 0 1564 954L1564,868A28 28 0 0 0 1535 839L1449,839A28 28 0 0 0 1420 868L1420,954A28 28 0 0 0 1449 983Z&#34;  style=&#34;fill:rgb(52,52,51);&#34; /&gt;
&lt;path d=&#34;M1466,965A23 23 0 0 0 1490 941L1490,881A23 23 0 0 0 1466 857A23 23 0 0 0 1442 881L1442,941A23 23 0 0 0 1466 965Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;path d=&#34;M1460,885L1489,885L1489,856L1460,856Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;text x=&#34;1492&#34; y=&#34;794&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(89,88,87)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;VPN Hub&lt;/text&gt;
&lt;text x=&#34;1492&#34; y=&#34;1187&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(3,3,3)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Server&lt;/text&gt;
&lt;path d=&#34;M2349,1134L2882,1134A28 28 0 0 0 2910 1105L2910,717A28 28 0 0 0 2882 688L2349,688A28 28 0 0 0 2320 717L2320,1105A28 28 0 0 0 2349 1134Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M2179,1134L2237,1134A28 28 0 0 0 2265 1105L2265,717A28 28 0 0 0 2237 688L2179,688A28 28 0 0 0 2150 717L2150,1105A28 28 0 0 0 2179 1134Z&#34;  style=&#34;fill:rgb(249,249,248);&#34; /&gt;
&lt;path d=&#34;M2572,983L2658,983A28 28 0 0 0 2687 954L2687,868A28 28 0 0 0 2658 839L2572,839A28 28 0 0 0 2543 868L2543,954A28 28 0 0 0 2572 983Z&#34;  style=&#34;fill:rgb(52,52,51);&#34; /&gt;
&lt;path d=&#34;M2589,965A23 23 0 0 0 2613 941L2613,881A23 23 0 0 0 2589 857A23 23 0 0 0 2566 881L2566,941A23 23 0 0 0 2589 965Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;path d=&#34;M2584,885L2612,885L2612,856L2584,856Z&#34;  style=&#34;fill:rgb(214,214,214);&#34; /&gt;
&lt;text x=&#34;2615&#34; y=&#34;794&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(89,88,87)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;VPN Client&lt;/text&gt;
&lt;text x=&#34;2615&#34; y=&#34;1074&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(3,3,3)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;EC2 VM&lt;/text&gt;
&lt;path d=&#34;M703,789L812,789L812,342L703,342Z&#34;  style=&#34;fill:rgb(73,100,149);&#34; /&gt;
&lt;path d=&#34;M703,516L812,542L812,588L703,614Z&#34;  style=&#34;fill:rgb(174,192,224);&#34; /&gt;
&lt;text x=&#34;758&#34; y=&#34;270&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(73,100,149)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Windows Firewall&lt;/text&gt;
&lt;circle cx=&#34;758&#34; cy=&#34;182&#34; r=&#34;36&#34;  style=&#34;fill:none;stroke-width:7.2;stroke:rgb(90,121,166);&#34; /&gt;
&lt;path d=&#34;M742,182L774,182L758,166L774,182L758,198L774,182&#34;  style=&#34;fill:none;stroke-width:7.2;stroke-linejoin:round;stroke:rgb(73,100,149);&#34; /&gt;
&lt;path d=&#34;M703,1545L812,1545L812,1098L703,1098Z&#34;  style=&#34;fill:rgb(73,100,149);&#34; /&gt;
&lt;path d=&#34;M703,1272L812,1298L812,1344L703,1370Z&#34;  style=&#34;fill:rgb(174,192,224);&#34; /&gt;
&lt;text x=&#34;758&#34; y=&#34;1026&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(73,100,149)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Office Firewall&lt;/text&gt;
&lt;circle cx=&#34;758&#34; cy=&#34;938&#34; r=&#34;36&#34;  style=&#34;fill:none;stroke-width:7.2;stroke:rgb(90,121,166);&#34; /&gt;
&lt;path d=&#34;M742,938L774,938L758,922L774,938L758,954L774,938&#34;  style=&#34;fill:none;stroke-width:7.2;stroke-linejoin:round;stroke:rgb(73,100,149);&#34; /&gt;
&lt;path d=&#34;M2100,1134L2209,1134L2209,688L2100,688Z&#34;  style=&#34;fill:rgb(73,100,149);&#34; /&gt;
&lt;path d=&#34;M2209,862L2100,888L2100,934L2209,960Z&#34;  style=&#34;fill:rgb(174,192,224);&#34; /&gt;
&lt;text x=&#34;2154&#34; y=&#34;555&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(73,100,149)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;AWS&lt;/text&gt;
&lt;text x=&#34;2154&#34; y=&#34;616&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(73,100,149)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;Security Group&lt;/text&gt;
&lt;text x=&#34;2154&#34; y=&#34;676&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(73,100,149)&#34; font-size=&#34;300%&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;circle cx=&#34;2154&#34; cy=&#34;467&#34; r=&#34;36&#34;  style=&#34;fill:none;stroke-width:7.2;stroke:rgb(90,121,166);&#34; /&gt;
&lt;path d=&#34;M2170,467L2139,467L2154,483L2139,467L2154,451L2139,467&#34;  style=&#34;fill:none;stroke-width:7.2;stroke-linejoin:round;stroke:rgb(73,100,149);&#34; /&gt;
&lt;circle cx=&#34;369&#34; cy=&#34;565&#34; r=&#34;7.2&#34; style=&#34;fill:rgb(198,88,53);stroke-width:2.16;stroke:rgb(198,88,53);&#34; /&gt;
&lt;circle cx=&#34;369&#34; cy=&#34;1321&#34; r=&#34;7.2&#34; style=&#34;fill:rgb(198,88,53);stroke-width:2.16;stroke:rgb(198,88,53);&#34; /&gt;
&lt;circle cx=&#34;2543&#34; cy=&#34;911&#34; r=&#34;7.2&#34; style=&#34;fill:rgb(198,88,53);stroke-width:2.16;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M369,565 L 801,565 Q 945,565 1049,665 L 1172,783 Q 1276,882 1346,882 L 1416,882&#34;  style=&#34;fill:none;stroke-width:5.76;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M1416,882L1394,861L1416,882L1394,904L1416,882&#34;  style=&#34;fill:none;stroke-width:5.76;stroke-linejoin:round;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M369,1321 L 801,1321 Q 945,1321 1039,1213 L 1182,1049 Q 1276,940 1346,940 L 1416,940&#34;  style=&#34;fill:none;stroke-width:5.76;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M1416,940L1394,918L1416,940L1394,961L1416,940&#34;  style=&#34;fill:none;stroke-width:5.76;stroke-linejoin:round;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M2543,911L1568,911&#34;  style=&#34;fill:none;stroke-width:5.76;stroke:rgb(198,88,53);&#34; /&gt;
&lt;path d=&#34;M1568,911L1590,889L1568,911L1590,933L1568,911&#34;  style=&#34;fill:none;stroke-width:5.76;stroke-linejoin:round;stroke:rgb(198,88,53);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
topmargin = 1
fontscale = 3
color = 0xc65835 # Orange

define $boxlet {
  oval at -0.18,0 height 0.75 width 0.33 color none fill 0xd6d6d6
  box same as last at -0.12,0.28 height 0.2 width 0.2 radius 0
  box at 0,0 height 1 width 1 color none fill 0x343433 radius 0.2 behind last box
}

define $wall {
  box at 0,0 height 3.1 width 0.76 color none fill 0x496495
  line from -0.38*$1,0.34 to $1*0.38,0.16 to $1*0.38,-0.16 to -0.38*$1,-0.34 close color none fill 0xaec0e0
}

define $wall_info {
  text at last.n + (0.0, 0.5) color 0x496495 $2 bold
  circle at last.n + (0.0,0.3) radius 0.25 thickness 0.05 color 0x5a79a6
  line from (last.x-$1*0.11,last circle.c.y) \
    right $1*0.22 then \
    up $1*0.11 left $1*0.11 then \
    down $1*0.11 right $1*0.11 then \
    down $1*0.11 left $1*0.11 then \
    up $1*0.11 right $1*0.11 \
    color 0x496495 thickness 0.05
}

define $area {
  box at ($1,$2) width $3 height $4 color none fill 0xf9f9f8 radius 0.2
}

# Servers

$area(0.55,0,5.2,3.1)

WS1: [ $boxlet() ] at (0, 0)
text at last.n + (0.0, 0.1) color 0x595857 &#34;VPN Client&#34; above
text at last.s - (0.0, 1) color 0x030303 $2 &#34;Workstation&#34; below

$area(0,-5.25,4.1,3.1)
$area(2.83,-5.25,0.8,3.1)

WS2: [ $boxlet() ] at (0, -5.25)
text at last.n + (0.0, 0.1) color 0x595857 &#34;VPN Client&#34; above
text at last.s - (0.0, 1) color 0x030303 &#34;Workstation&#34; below

$area(8.3,-2.3,6,5.25)

HUB: [ $boxlet() ] at (8.3, -2.4)
text at last.n + (0.0, 0.1) color 0x595857 &#34;VPN Hub&#34;  above
text at last.s - (0.0, 1.78) color 0x030303 &#34;Server&#34; below

$area(16.10,HUB.c.y,4.1,3.1)
$area(13.27,HUB.c.y,0.8,3.1)

WS3: [ $boxlet() ] at (16.10, HUB.c.y)
text at last.n + (0.0, 0.1) color 0x595857 &#34;VPN Client&#34;  above
text at last.s - (0.0, 1) color 0x030303 &#34;EC2 VM&#34; below

[ $wall(1) ] at (3.20,0)
$wall_info(1, &#34;Windows Firewall&#34;)

[ $wall(1) ] at (3.2,-5.25)
$wall_info(1, &#34;Office Firewall&#34;)

[ $wall(-1) ] at (12.9,HUB.c.y)
$wall_info(-1, &#34;AWS&#34; bold &#34;Security Group&#34; bold &#34;&#34;)

dot at WS1.e radius 0.05
dot at WS2.e radius 0.05
dot at WS3.w radius 0.05

line from WS1.e right 4 then down until even with (0,HUB.y+0.2) right 2.3 then right until even with (HUB.w-0.03,0) thickness 0.04 radius 1
line up 0.15 left 0.15 down 0.15 right 0.15 down 0.15 left 0.15 up 0.15 right 0.15 thickness 0.04

line from WS2.e right 4 then up until even with (0,HUB.y-0.2) right 2.3 then right until even with (HUB.w-0.03,0) thickness 0.04 radius 1
line up 0.15 left 0.15 down 0.15 right 0.15 down 0.15 left 0.15 up 0.15 right 0.15 thickness 0.04

line from WS3.w to 0.03 right of HUB.e thickness 0.04
line up 0.15 right 0.15 down 0.15 left 0.15 down 0.15 right 0.15 up 0.15 left 0.15 thickness 0.04
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;(Click image to see Pikchr source)&lt;/em&gt;&lt;/p&gt;
&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>



    <item>
      <title>CS Ramble — Week 1b - memory, text, numbers</title>
      <link>https://zellyn.com/2022/02/cs-ramble/1b/</link>
      <pubDate>Thu, 03 Feb 2022 08:00:00 -0500</pubDate>

      <guid>https://zellyn.com/2022/02/cs-ramble/1b/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is post is part of &lt;a href=&#34;../1a/&#34;&gt;week 1&lt;/a&gt; of &lt;a href=&#34;../&#34;&gt;A Ramble Around
CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;computer-memory&#34;&gt;Computer memory&lt;/h1&gt;
&lt;p&gt;You can imagine all your computer&amp;rsquo;s memory as a series of little boxes,
numbered from 0 (because we&amp;rsquo;re computer people), and going up, and up,
and up. The laptop I&amp;rsquo;m typing this on has 32MB of memory, or
34,359,738,368 little boxes!&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:513px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 513.187 60.48&#34;&gt;
&lt;path d=&#34;M2,58L29,58L29,22L2,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M29,58L56,58L56,22L29,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M56,58L83,58L83,22L56,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M83,58L110,58L110,22L83,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M110,58L137,58L137,22L110,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M137,58L164,58L164,22L137,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M164,58L191,58L191,22L164,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M191,58L218,58L218,22L191,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M218,58L245,58L245,22L218,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M245,58L272,58L272,22L245,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M272,58L299,58L299,22L272,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M299,58L326,58L326,22L299,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M380,58L407,58L407,22L380,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;353&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;· · ·&lt;/text&gt;
&lt;text x=&#34;15&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;42&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;69&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;96&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;3&lt;/text&gt;
&lt;text x=&#34;123&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;150&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;5&lt;/text&gt;
&lt;text x=&#34;177&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;6&lt;/text&gt;
&lt;text x=&#34;204&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;7&lt;/text&gt;
&lt;text x=&#34;231&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;258&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;text x=&#34;285&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;10&lt;/text&gt;
&lt;text x=&#34;312&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;11&lt;/text&gt;
&lt;text x=&#34;380&#34; y=&#34;12&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;34,359,738,367&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
boxwid /=4
boxht /= 2
box fill lightblue
box same
box same
box same
box same
box same
box same
box same
box same
box same
box same
box same

move width boxwid*2

box same //  &#34;34,359,738,367&#34; above

text at last move &#34;· · ·&#34; big bold

text at 1st box.n &#34;0&#34; above
text at 2nd box.n &#34;1&#34; above
text at 3rd box.n &#34;2&#34; above
text at 4th box.n &#34;3&#34; above
text at 5th box.n &#34;4&#34; above
text at 6th box.n &#34;5&#34; above
text at 7th box.n &#34;6&#34; above
text at 8th box.n &#34;7&#34; above
text at 9th box.n &#34;8&#34; above
text at 10th box.n &#34;9&#34; above
text at 11th box.n &#34;10&#34; above
text at 12th box.n &#34;11&#34; above
text at 13th box.nw &#34;34,359,738,367&#34; above ljust
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;We&amp;rsquo;ll get into “bits” and “bytes” and counting in “binary” later, but
for now, let&amp;rsquo;s just take it as given that each of those boxes holds a
single “byte”: a number from 0 to 255.&lt;/p&gt;
&lt;h1 id=&#34;text&#34;&gt;Text&lt;/h1&gt;
&lt;p&gt;If we want to store letters in the boxes, we have to come up with some
kind of “&lt;a href=&#34;https://en.wikipedia.org/wiki/Character_encoding&#34;&gt;Character
Encoding&lt;/a&gt;”,
assigning a number to each letter.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I&amp;rsquo;d use 1 for “A”, 2 for “B”, &amp;hellip;, except it&amp;rsquo;s probably better to
just jump straight to the actual numbers your computer (usually) uses
(called “&lt;a href=&#34;https://en.wikipedia.org/wiki/ASCII&#34;&gt;ASCII&lt;/a&gt;”&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;) so we get used
to seeing the real numbers:&lt;/em&gt;&lt;/p&gt;
&lt;div id=&#39;pikchr-1&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-1&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:587px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 587.29 96.48&#34;&gt;
&lt;text x=&#34;65&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;“Hello, world”&lt;/text&gt;
&lt;polygon points=&#34;153,40 141,44 141,36&#34; style=&#34;fill:rgb(0,0,0)&#34;/&gt;
&lt;path d=&#34;M117,40L147,40&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M153,58L189,58L189,22L153,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;171&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;H&lt;/text&gt;
&lt;path d=&#34;M189,58L225,58L225,22L189,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;207&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;e&lt;/text&gt;
&lt;path d=&#34;M225,58L261,58L261,22L225,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;243&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;l&lt;/text&gt;
&lt;path d=&#34;M261,58L297,58L297,22L261,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;279&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;l&lt;/text&gt;
&lt;path d=&#34;M297,58L333,58L333,22L297,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;315&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;o&lt;/text&gt;
&lt;path d=&#34;M333,58L369,58L369,22L333,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;351&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;,&lt;/text&gt;
&lt;path d=&#34;M369,58L405,58L405,22L369,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;387&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;␣&lt;/text&gt;
&lt;path d=&#34;M405,58L441,58L441,22L405,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;423&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;w&lt;/text&gt;
&lt;path d=&#34;M441,58L477,58L477,22L441,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;459&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;o&lt;/text&gt;
&lt;path d=&#34;M477,58L513,58L513,22L477,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;495&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;r&lt;/text&gt;
&lt;path d=&#34;M513,58L549,58L549,22L513,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;531&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;l&lt;/text&gt;
&lt;path d=&#34;M549,58L585,58L585,22L549,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;567&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;d&lt;/text&gt;
&lt;path d=&#34;M153,94L189,94L189,58L153,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;171&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;72&lt;/text&gt;
&lt;path d=&#34;M189,94L225,94L225,58L189,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;207&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;101&lt;/text&gt;
&lt;path d=&#34;M225,94L261,94L261,58L225,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;243&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;108&lt;/text&gt;
&lt;path d=&#34;M261,94L297,94L297,58L261,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;279&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;108&lt;/text&gt;
&lt;path d=&#34;M297,94L333,94L333,58L297,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;315&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;111&lt;/text&gt;
&lt;path d=&#34;M333,94L369,94L369,58L333,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;351&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;44&lt;/text&gt;
&lt;path d=&#34;M369,94L405,94L405,58L369,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;387&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;32&lt;/text&gt;
&lt;path d=&#34;M405,94L441,94L441,58L405,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;423&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;119&lt;/text&gt;
&lt;path d=&#34;M441,94L477,94L477,58L441,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;459&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;111&lt;/text&gt;
&lt;path d=&#34;M477,94L513,94L513,58L477,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;495&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;114&lt;/text&gt;
&lt;path d=&#34;M513,94L549,94L549,58L513,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;531&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;108&lt;/text&gt;
&lt;path d=&#34;M549,94L585,94L585,58L549,58Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;567&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;100&lt;/text&gt;
&lt;text x=&#34;171&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;207&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;243&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;279&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;3&lt;/text&gt;
&lt;text x=&#34;315&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;351&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;5&lt;/text&gt;
&lt;text x=&#34;387&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;6&lt;/text&gt;
&lt;text x=&#34;423&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;7&lt;/text&gt;
&lt;text x=&#34;459&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;8&lt;/text&gt;
&lt;text x=&#34;495&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;9&lt;/text&gt;
&lt;text x=&#34;531&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;10&lt;/text&gt;
&lt;text x=&#34;567&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;11&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
right
text &#34;“Hello, world”&#34;
arrow from last text.e - (0.12,0) width linewid/2

box width 0.5 * linewid height 0.5*linewid fill lightblue &#34;H&#34; bold
box same &#34;e&#34; bold
box same &#34;l&#34; bold
box same &#34;l&#34; bold
box same &#34;o&#34; bold
box same &#34;,&#34; bold
box same &#34;␣&#34;
box same &#34;w&#34; bold
box same &#34;o&#34; bold
box same &#34;r&#34; bold
box same &#34;l&#34; bold
box same &#34;d&#34; bold

box fill 0xd8ecf3 with n at 1st box.s height H.height width H.width &#34;72&#34;
box same &#34;101&#34;
box same &#34;108&#34;
box same &#34;108&#34;
box same &#34;111&#34;
box same &#34;44&#34;
box same &#34;32&#34;
box same &#34;119&#34;
box same &#34;111&#34;
box same &#34;114&#34;
box same &#34;108&#34;
box same &#34;100&#34;

text at 1st box.n &#34;0&#34; above
text at 2nd box.n &#34;1&#34; above
text at 3rd box.n &#34;2&#34; above
text at 4th box.n &#34;3&#34; above
text at 5th box.n &#34;4&#34; above
text at 6th box.n &#34;5&#34; above
text at 7th box.n &#34;6&#34; above
text at 8th box.n &#34;7&#34; above
text at 9th box.n &#34;8&#34; above
text at 10th box.n &#34;9&#34; above
text at 11th box.n &#34;10&#34; above
text at 12th box.n &#34;11&#34; above
&lt;/pre&gt;
&lt;/div&gt;
&lt;h1 id=&#34;numbers&#34;&gt;Numbers&lt;/h1&gt;
&lt;p&gt;Storing numbers in the boxes is easy if they&amp;rsquo;re between 0 and
255. Just stick them in there!&lt;/p&gt;
&lt;div id=&#39;pikchr-2&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-2&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:148px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 148.32 60.48&#34;&gt;
&lt;path d=&#34;M2,58L38,58L38,22L2,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;20&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;42&lt;/text&gt;
&lt;path d=&#34;M38,58L74,58L74,22L38,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;56&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;17&lt;/text&gt;
&lt;path d=&#34;M74,58L110,58L110,22L74,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;92&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,58L146,58L146,22L110,22Z&#34;  style=&#34;fill:rgb(173,216,230);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;text x=&#34;20&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;56&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;92&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;3&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
box width 0.5 * linewid height 0.5*linewid fill lightblue &#34;42&#34; bold
box same &#34;17&#34; bold
box same &#34;0&#34; bold
box same &#34;255&#34; bold

text at 1st box.n &#34;0&#34; above
text at 2nd box.n &#34;1&#34; above
text at 3rd box.n &#34;2&#34; above
text at 4th box.n &#34;3&#34; above
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;For negative numbers, we pretend some of the numbers are
negative:&lt;/p&gt;
&lt;div id=&#39;pikchr-3&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-3&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:213px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 213.898 480.96&#34;&gt;
&lt;path d=&#34;M2,58L74,58L74,22L2,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M2,94L74,94L74,58L2,58Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M2,130L74,130L74,94L2,94Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;145&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M2,196L74,196L74,160L2,160Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;126&lt;/text&gt;
&lt;path d=&#34;M2,232L74,232L74,196L2,196Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;214&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;127&lt;/text&gt;
&lt;path d=&#34;M2,268L74,268L74,232L2,232Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;128&lt;/text&gt;
&lt;path d=&#34;M2,304L74,304L74,268L2,268Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;286&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;129&lt;/text&gt;
&lt;path d=&#34;M2,340L74,340L74,304L2,304Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;322&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;130&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;355&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M2,406L74,406L74,370L2,370Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;388&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;253&lt;/text&gt;
&lt;path d=&#34;M2,442L74,442L74,406L2,406Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;424&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;254&lt;/text&gt;
&lt;path d=&#34;M2,478L74,478L74,442L2,442Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;460&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Value&lt;/text&gt;
&lt;path d=&#34;M110,58L182,58L182,22L110,22Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;40&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,94L182,94L182,58L110,58Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;76&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M110,130L182,130L182,94L110,94Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;112&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;145&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M110,196L182,196L182,160L110,160Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;178&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;126&lt;/text&gt;
&lt;path d=&#34;M110,232L182,232L182,196L110,196Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;214&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;127&lt;/text&gt;
&lt;path d=&#34;M110,268L182,268L182,232L110,232Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;250&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-128&lt;/text&gt;
&lt;path d=&#34;M110,304L182,304L182,268L110,268Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;286&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-127&lt;/text&gt;
&lt;path d=&#34;M110,340L182,340L182,304L110,304Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;322&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-126&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;355&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M110,406L182,406L182,370L110,370Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;388&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-3&lt;/text&gt;
&lt;path d=&#34;M110,442L182,442L182,406L110,406Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;424&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-2&lt;/text&gt;
&lt;path d=&#34;M110,478L182,478L182,442L110,442Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;146&#34; y=&#34;460&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-1&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Interpretation&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
down
box width linewid height 0.5*linewid &#34;0&#34;
box same &#34;1&#34;
box same &#34;2&#34;
text  &#34;⋮&#34;
box same &#34;126&#34;
box same &#34;127&#34;
box same &#34;128&#34;
box same &#34;129&#34;
box same &#34;130&#34;
text &#34;⋮&#34;
box same &#34;253&#34;
box same &#34;254&#34;
box same &#34;255&#34;

text at 1st box.n &#34;Value&#34; bold above

I1: box same as 1st box with w at 1st box.e + (0.5*linewid,0) &#34;0&#34;
box same &#34;1&#34;
box same &#34;2&#34;
text  &#34;⋮&#34;
box same &#34;126&#34;
box same &#34;127&#34;
box same &#34;-128&#34;
box same &#34;-127&#34;
box same &#34;-126&#34;
text &#34;⋮&#34;
box same &#34;-3&#34;
box same &#34;-2&#34;
box same &#34;-1&#34;

text at I1.n &#34;Interpretation&#34; bold above
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Probably, it&amp;rsquo;s better to think of it in
&lt;a href=&#34;https://www.youtube.com/watch?v=5OjZWSdxlU0&#34;&gt;modular&lt;/a&gt;
(&lt;a href=&#34;http://math.ucdenver.edu/~wcherowi/clockar.html&#34;&gt;clock&lt;/a&gt;) arithmetic:&lt;/p&gt;
&lt;div id=&#39;pikchr-4&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-4&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:475px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 476 538.2&#34;&gt;
&lt;circle cx=&#34;237&#34; cy=&#34;288&#34; r=&#34;216&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;237&#34; y=&#34;101&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;50&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;286&#34; y=&#34;107&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;299&#34; y=&#34;58&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;331&#34; y=&#34;126&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;356&#34; y=&#34;82&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;370&#34; y=&#34;155&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;3&lt;/text&gt;
&lt;text x=&#34;406&#34; y=&#34;120&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;3&lt;/text&gt;
&lt;text x=&#34;400&#34; y=&#34;194&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;443&#34; y=&#34;169&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;4&lt;/text&gt;
&lt;text x=&#34;418&#34; y=&#34;239&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;417&#34; y=&#34;233&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;415&#34; y=&#34;227&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;467&#34; y=&#34;226&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;465&#34; y=&#34;218&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;462&#34; y=&#34;211&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;189&#34; y=&#34;107&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;text x=&#34;176&#34; y=&#34;58&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-1&lt;/text&gt;
&lt;text x=&#34;144&#34; y=&#34;126&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;254&lt;/text&gt;
&lt;text x=&#34;119&#34; y=&#34;82&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-2&lt;/text&gt;
&lt;text x=&#34;105&#34; y=&#34;155&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;253&lt;/text&gt;
&lt;text x=&#34;69&#34; y=&#34;120&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-3&lt;/text&gt;
&lt;text x=&#34;75&#34; y=&#34;194&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;252&lt;/text&gt;
&lt;text x=&#34;32&#34; y=&#34;169&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-4&lt;/text&gt;
&lt;text x=&#34;57&#34; y=&#34;239&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;58&#34; y=&#34;233&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;60&#34; y=&#34;227&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;8&#34; y=&#34;226&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;10&#34; y=&#34;218&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;13&#34; y=&#34;211&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;370&#34; y=&#34;420&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;365&#34; y=&#34;425&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;360&#34; y=&#34;429&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;406&#34; y=&#34;456&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;400&#34; y=&#34;462&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;393&#34; y=&#34;467&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;331&#34; y=&#34;450&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;126&lt;/text&gt;
&lt;text x=&#34;356&#34; y=&#34;494&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;126&lt;/text&gt;
&lt;text x=&#34;286&#34; y=&#34;469&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;127&lt;/text&gt;
&lt;text x=&#34;299&#34; y=&#34;517&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;127&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;475&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;128&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;525&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-128&lt;/text&gt;
&lt;text x=&#34;189&#34; y=&#34;469&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;129&lt;/text&gt;
&lt;text x=&#34;176&#34; y=&#34;517&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-127&lt;/text&gt;
&lt;text x=&#34;144&#34; y=&#34;450&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;130&lt;/text&gt;
&lt;text x=&#34;119&#34; y=&#34;494&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;-126&lt;/text&gt;
&lt;text x=&#34;105&#34; y=&#34;420&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;110&#34; y=&#34;425&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;115&#34; y=&#34;429&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;69&#34; y=&#34;456&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;75&#34; y=&#34;462&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;82&#34; y=&#34;467&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;·&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;144&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;Value&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;14&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;125%&#34; dominant-baseline=&#34;central&#34;&gt;Interpretation&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;278&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Signed interpretation&lt;/text&gt;
&lt;text x=&#34;237&#34; y=&#34;298&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;of byte values&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
circle radius 1.5 fill 0xd8ecf3

define $inner {
  line from (0,0) then 1.3 heading $1 invisible
  text at last line.end $2
}

define $outer {
  line from (0,0) then 1.65 heading $1 invisible
  text at last line.end $2
}

$inner(0, &#34;0&#34;); $outer(0, &#34;0&#34; bold)
$inner(15, &#34;1&#34;); $outer(15, &#34;1&#34; bold)
$inner(30, &#34;2&#34;); $outer(30, &#34;2&#34; bold)
$inner(45, &#34;3&#34;); $outer(45, &#34;3&#34; bold)
$inner(60, &#34;4&#34;); $outer(60, &#34;4&#34; bold)
$inner(75, &#34;·&#34; bold); $inner(73, &#34;·&#34; bold); $inner(71, &#34;·&#34; bold)
$outer(75, &#34;·&#34; bold); $outer(73, &#34;·&#34; bold); $outer(71, &#34;·&#34; bold)
$inner(345, &#34;255&#34;); $outer(345, &#34;-1&#34; bold)
$inner(330, &#34;254&#34;); $outer(330, &#34;-2&#34; bold)
$inner(315, &#34;253&#34;); $outer(315, &#34;-3&#34; bold)
$inner(300, &#34;252&#34;); $outer(300, &#34;-4&#34; bold)
$inner(285, &#34;·&#34; bold); $inner(287, &#34;·&#34; bold); $inner(289, &#34;·&#34; bold)
$outer(285, &#34;·&#34; bold); $outer(287, &#34;·&#34; bold); $outer(289, &#34;·&#34; bold)

$inner(135, &#34;·&#34; bold); $inner(137, &#34;·&#34; bold); $inner(139, &#34;·&#34; bold)
$outer(135, &#34;·&#34; bold); $outer(137, &#34;·&#34; bold); $outer(139, &#34;·&#34; bold)
$inner(150, &#34;126&#34;); $outer(150, &#34;126&#34; bold)
$inner(165, &#34;127&#34;); $outer(165, &#34;127&#34; bold)
$inner(180, &#34;128&#34;); $outer(180, &#34;-128&#34; bold)
$inner(195, &#34;129&#34;); $outer(195, &#34;-127&#34; bold)
$inner(210, &#34;130&#34;); $outer(210, &#34;-126&#34; bold)
$inner(225, &#34;·&#34; bold); $inner(223, &#34;·&#34; bold); $inner(221, &#34;·&#34; bold)
$outer(225, &#34;·&#34; bold); $outer(223, &#34;·&#34; bold); $outer(221, &#34;·&#34; bold)


text at (0, 1) &#34;Value&#34; big bold
text at (0, 1.9) &#34;Interpretation&#34; big bold
text at (0,0) &#34;Signed interpretation&#34; italic &#34;of byte values&#34; italic
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Since there are 256 spots in a full circle, going 255 spaces clockwise
(adding 255) is the same as going one space counter-clockwise
(subtracting 1).&lt;/p&gt;
&lt;p&gt;But that still only gives us 256 different values.&lt;/p&gt;
&lt;h2 id=&#34;bigger-numbers&#34;&gt;Bigger numbers&lt;/h2&gt;
&lt;p&gt;For bigger numbers, we&amp;rsquo;ll have to combine pairs of bytes, or groups of
4 or 8 (or more) bytes.&lt;/p&gt;
&lt;p&gt;In normal arabic numerals, we have &lt;strong&gt;ten&lt;/strong&gt; choices, 0–9, and then
spill over to the next space, whose value is multiplied by &lt;strong&gt;ten&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;We can do the same with bytes: we have &lt;strong&gt;256&lt;/strong&gt; choices, 0–255, and
then spill over to the next space, whose value is multiplied by
&lt;strong&gt;256&lt;/strong&gt;.&lt;/p&gt;
&lt;div id=&#39;pikchr-5&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-5&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:219px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 219.093 465.12&#34;&gt;
&lt;path d=&#34;M2,78L74,78L74,42L2,42Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;60&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M2,114L74,114L74,78L2,78Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;96&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M2,150L74,150L74,114L2,114Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;165&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M2,216L74,216L74,180L2,180Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;198&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;254&lt;/text&gt;
&lt;path d=&#34;M2,252L74,252L74,216L2,216Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;234&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;path d=&#34;M2,288L74,288L74,252L2,252Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;270&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;256&lt;/text&gt;
&lt;path d=&#34;M2,324L74,324L74,288L2,288Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;306&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;257&lt;/text&gt;
&lt;path d=&#34;M2,360L74,360L74,324L2,324Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;342&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;258&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;375&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M2,426L74,426L74,390L2,390Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;408&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;65534&lt;/text&gt;
&lt;path d=&#34;M2,462L74,462L74,426L2,426Z&#34;  style=&#34;fill:none;stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;38&#34; y=&#34;444&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;65535&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Value&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;32&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;52&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;text x=&#34;38&#34; y=&#34;72&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;path d=&#34;M110,78L146,78L146,42L110,42Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;60&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,114L146,114L146,78L110,78Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;96&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,150L146,150L146,114L110,114Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;165&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M110,216L146,216L146,180L110,180Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;198&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,252L146,252L146,216L110,216Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;234&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M110,288L146,288L146,252L110,252Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;270&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M110,324L146,324L146,288L110,288Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;306&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M110,360L146,360L146,324L110,324Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;342&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;text x=&#34;128&#34; y=&#34;375&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M110,426L146,426L146,390L110,390Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;408&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;path d=&#34;M110,462L146,462L146,426L110,426Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;128&#34; y=&#34;444&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;path d=&#34;M146,78L182,78L182,42L146,42Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;60&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M146,114L182,114L182,78L146,78Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;96&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M146,150L182,150L182,114L146,114Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;132&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;164&#34; y=&#34;165&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M146,216L182,216L182,180L146,180Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;198&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;254&lt;/text&gt;
&lt;path d=&#34;M146,252L182,252L182,216L146,216Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;234&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;path d=&#34;M146,288L182,288L182,252L146,252Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;270&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;0&lt;/text&gt;
&lt;path d=&#34;M146,324L182,324L182,288L146,288Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;306&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;1&lt;/text&gt;
&lt;path d=&#34;M146,360L182,360L182,324L146,324Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;342&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;2&lt;/text&gt;
&lt;text x=&#34;164&#34; y=&#34;375&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;⋮&lt;/text&gt;
&lt;path d=&#34;M146,426L182,426L182,390L146,390Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;408&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;254&lt;/text&gt;
&lt;path d=&#34;M146,462L182,462L182,426L146,426Z&#34;  style=&#34;fill:rgb(216,236,243);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;164&#34; y=&#34;444&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;255&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;12&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;Representation&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;32&#34; text-anchor=&#34;middle&#34; font-weight=&#34;bold&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;as 2 bytes&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;52&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;text x=&#34;146&#34; y=&#34;72&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
down
box width linewid height 0.5*linewid &#34;0&#34;
box same &#34;1&#34;
box same &#34;2&#34;
text  &#34;⋮&#34;
box same &#34;254&#34;
box same &#34;255&#34;
box same &#34;256&#34;
box same &#34;257&#34;
box same &#34;258&#34;
text  &#34;⋮&#34;
box same &#34;65534&#34;
box same &#34;65535&#34;

text at 1st box.n &#34;Value&#34; bold &#34;&#34; &#34;&#34; &#34;&#34;

I1: box same as 1st box with w at 1st box.e + (0.5*linewid,0) width 0.25 fill 0xd8ecf3 &#34;0&#34;
box same &#34;0&#34;
box same &#34;0&#34;
text  &#34;⋮&#34;
box same &#34;0&#34;
box same &#34;0&#34;
box same &#34;1&#34;
box same &#34;1&#34;
box same &#34;1&#34;
text  &#34;⋮&#34;
box same &#34;255&#34;
box same &#34;255&#34;

I2: box same as I1 with w at I1.e &#34;0&#34;
box same &#34;1&#34;
box same &#34;2&#34;
text  &#34;⋮&#34;
box same &#34;254&#34;
box same &#34;255&#34;
box same &#34;0&#34;
box same &#34;1&#34;
box same &#34;2&#34;
text  &#34;⋮&#34;
box same &#34;254&#34;
box same &#34;255&#34;

text at I1.ne &#34;Representation&#34; bold &#34;as 2 bytes&#34; bold &#34;&#34; &#34;&#34;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;So, &lt;code&gt;255 = 0×256 + 255&lt;/code&gt;, and &lt;code&gt;258 = 1×256 + 2&lt;/code&gt;. I&amp;rsquo;ve put the “×256”
byte first, to match how in the number “12”, the “×10” digit goes
first. Which byte you put first is a choice, and most current
computers actually put the littlest byte first and the “×256” byte
second. This is called “little-endian”, because the littlest byte
comes first. The opposite
“&lt;a href=&#34;https://en.wikipedia.org/wiki/Endianness&#34;&gt;endianness&lt;/a&gt;” is of course
“big-endian”. When you&amp;rsquo;re storing things on disk, or &lt;a href=&#34;https://hackaday.com/2015/12/12/raspberry-pi-communication-via-laser/&#34;&gt;sending numbers
to a Raspberry Pi with a
laser&lt;/a&gt;,
you can pick your own endianness!&lt;/p&gt;
&lt;p&gt;Just like with individual bytes, you can use half the space for
negative numbers, and turn the range 0…65535 into -32768…32767.&lt;/p&gt;
&lt;h2 id=&#34;a-note-on-names-for-things&#34;&gt;A note on names for things&lt;/h2&gt;
&lt;p&gt;All of these things have multiple names you might run into:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Bytes &lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt; Signed?&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Min&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Max&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt; Common names&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;255&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;(unsigned)&lt;/code&gt; &lt;em&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;(unsigned)&lt;/code&gt; &lt;em&gt;&lt;code&gt;char&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;uint8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-128&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;127&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;(signed)&lt;/code&gt; &lt;em&gt;&lt;code&gt;char&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;byte&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;int8&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;65535&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;unsigned int&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;unsigned short&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-32768&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;32767&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;int&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2³²-1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;unsigned int&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;unsigned long&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;uint32&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-2³¹&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2³¹-1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;int&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;long&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;rune&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2⁶⁴-1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;unsigned long&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;uint64&lt;/code&gt;, &lt;em&gt;&lt;code&gt;uint&lt;/code&gt;&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;✓&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-2⁶³&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2⁶³-1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;em&gt;&lt;code&gt;long&lt;/code&gt;&lt;/em&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;em&gt;&lt;code&gt;int&lt;/code&gt;&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Note that many of the terms are ambiguous, between programming
languages, or even between computers.  In Go, for example, “int” can
mean 32 or 64 bits, depending on whether your computer is running in
32- or 64-bit mode. I&amp;rsquo;ve marked ambiguous names in &lt;em&gt;&lt;code&gt;italics&lt;/code&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In the next part, we&amp;rsquo;ll discuss how your program&amp;rsquo;s
variables point to things in memory.&lt;/em&gt;&lt;/p&gt;
&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;That&amp;rsquo;s 32×1024×1024×1024. 1024 bytes is a “kilobyte”, because
1024 is close to 1000, 1024×1024=1048576 bytes is a
“megabyte”, because it&amp;rsquo;s close to a million bytes, and
1024×1024×1024=1073741824 bytes is a “gigabyte”.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Technically, according to the &lt;a href=&#34;https://en.wikipedia.org/wiki/Metric_prefix&#34;&gt;SI
prefixes&lt;/a&gt;, a
“kilobyte” (KB) is exactly 1000 bytes, and you should use
“kibibyte” (KiB) to refer to 1024 bytes. Since “kibibyte” sounds
more like a Pokémon or a kind of dog food for small, yappy dogs,
&lt;em&gt;nobody&lt;/em&gt; uses it. Except hard disk manufacturers, who insist on
using exact powers of 10 to make their hard disks sound 10%
bigger (for terabytes) than they really are.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;If you&amp;rsquo;re on Linux or MacOS, you can also type &lt;code&gt;man ascii&lt;/code&gt; in
your terminal to see a list of ASCII codes. Ignore the hexadecimal
(for now) and octal (forever) sections; the decimal section at the
bottom is useful.&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>



    <item>
      <title>CS Ramble — Week 1a - questions</title>
      <link>https://zellyn.com/2022/02/cs-ramble/1a/</link>
      <pubDate>Wed, 02 Feb 2022 19:58:00 -0500</pubDate>

      <guid>https://zellyn.com/2022/02/cs-ramble/1a/</guid>
      <description>&lt;p&gt;&lt;em&gt;These are the questions for week 1 of &lt;a href=&#34;../&#34;&gt;A Ramble Around CS&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;questions-for-week-1&#34;&gt;Questions for week 1&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;When you say &lt;code&gt;a = &amp;quot;Hello, world&amp;quot;&lt;/code&gt; in your favorite language, how is
the string stored? How about &lt;code&gt;&amp;quot;Hello, 世界&amp;quot;&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;When you say &lt;code&gt;a = &amp;quot;Hello&amp;quot;&lt;/code&gt; and &lt;code&gt;b = &amp;quot; world&amp;quot;&lt;/code&gt; and then do &lt;code&gt;c = a + b&lt;/code&gt;, what happens? How are &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; stored?&lt;/li&gt;
&lt;li&gt;When you say &lt;code&gt;a = 42&lt;/code&gt;, and then &lt;code&gt;b = a&lt;/code&gt;, and then &lt;code&gt;b = 17&lt;/code&gt;, what are
&lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;? Why?&lt;/li&gt;
&lt;li&gt;When you say &lt;code&gt;a = {&amp;quot;foo&amp;quot;: 42}&lt;/code&gt;, and then &lt;code&gt;b = a&lt;/code&gt;, and then &lt;code&gt;b.foo = 17&lt;/code&gt;, what are &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;? Why?&lt;/li&gt;
&lt;li&gt;Why do computer people use “foo” and “bar” all the time? What’s up
with that? What about 42 and 17?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;We&amp;rsquo;ll start discussing how memory is laid out and used to represent
numbers and text in the &lt;a href=&#34;../1b/&#34;&gt;next part&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>



    <item>
      <title>A ramble around CS</title>
      <link>https://zellyn.com/2022/02/cs-ramble/</link>
      <pubDate>Tue, 01 Feb 2022 08:00:00 -0500</pubDate>

      <guid>https://zellyn.com/2022/02/cs-ramble/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;It turns out we have several folks at Square who arrived at
programming through boot-camps, or other non-CS paths, and feel a sort
of lingering insecurity (or get explicitly told by unkind people) that
their path left them without a solid grasp of “the fundamentals”.&lt;/p&gt;
&lt;p&gt;I have the pleasure of having a boot-camp grad on our team, &lt;a href=&#34;https://amyh.dev/&#34;&gt;Amy
Henning&lt;/a&gt;: she&amp;rsquo;s now several tech jobs in (and
fantastically capable), and has a really great perspective on what our
industry can be like to people coming in from outside.&lt;/p&gt;
&lt;p&gt;We decided to try an experiment for folks in our company interested in
learning CS: I&amp;rsquo;ll play the grizzled veteran, and come up with
provocative questions, and we&amp;rsquo;ll meet for an hour every two weeks and
discuss them. I&amp;rsquo;m excited to see how it goes!&lt;/p&gt;
&lt;h2 id=&#34;week-1&#34;&gt;Week 1&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;1a/&#34;&gt;Questions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;1b/&#34;&gt;Memory, text, and numbers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Variables&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>



    <item>
      <title>gopikchr: a yakshave</title>
      <link>https://zellyn.com/2022/01/gopikchr-a-yakshave/</link>
      <pubDate>Sun, 30 Jan 2022 13:11:00 -0500</pubDate>

      <guid>https://zellyn.com/2022/01/gopikchr-a-yakshave/</guid>
      <description>&lt;p&gt;I just completed part of a long
&lt;a href=&#34;https://en.wiktionary.org/wiki/yak_shaving&#34;&gt;yak-shave&lt;/a&gt; to add
&lt;a href=&#34;https://pikchr.org&#34;&gt;Pikchr&lt;/a&gt; support to my blog, generated with
&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;. I hope it helps to spread of Pikchr, and
spurs implementations in other publishing pipelines.&lt;/p&gt;
&lt;p&gt;Actually, it&amp;rsquo;s just the bottom part of an even longer yak-shave!&lt;/p&gt;
&lt;div id=&#39;pikchr-0&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-0&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:651px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 651.024 264.384&#34;&gt;
&lt;path d=&#34;M2,30L506,30L506,2L2,2Z&#34;  style=&#34;fill:rgb(197,216,239);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;254&#34; y=&#34;16&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;open my garage with a raspberry pi&lt;/text&gt;
&lt;path d=&#34;M20,59L524,59L524,30L20,30Z&#34;  style=&#34;fill:rgb(217,230,242);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;272&#34; y=&#34;45&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;achieve accurate timing on a raspberry pi&lt;/text&gt;
&lt;path d=&#34;M38,88L542,88L542,59L38,59Z&#34;  style=&#34;fill:rgb(197,216,239);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;290&#34; y=&#34;74&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;understand how to use DMA for gpio sequences&lt;/text&gt;
&lt;path d=&#34;M56,117L560,117L560,88L56,88Z&#34;  style=&#34;fill:rgb(217,230,242);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;308&#34; y=&#34;102&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;“I should document this in a blog post”&lt;/text&gt;
&lt;path d=&#34;M74,146L578,146L578,117L74,117Z&#34;  style=&#34;fill:rgb(197,216,239);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;326&#34; y=&#34;131&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;“I need Pikchr for diagrams”: make Pikchr work in hugo&lt;/text&gt;
&lt;path d=&#34;M92,174L596,174L596,146L92,146Z&#34;  style=&#34;fill:rgb(217,230,242);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;344&#34; y=&#34;160&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;make Pikchr work in hugo&lt;/text&gt;
&lt;path d=&#34;M110,203L614,203L614,174L110,174Z&#34;  style=&#34;fill:rgb(197,216,239);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;362&#34; y=&#34;189&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;port Pikchr to go&lt;/text&gt;
&lt;path d=&#34;M128,232L632,232L632,203L128,203Z&#34;  style=&#34;fill:rgb(217,230,242);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;text x=&#34;380&#34; y=&#34;218&#34; text-anchor=&#34;middle&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt;port the lemon parser to go&lt;/text&gt;
&lt;text x=&#34;578&#34; y=&#34;131&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; ✓&lt;/text&gt;
&lt;text x=&#34;596&#34; y=&#34;160&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; ✓&lt;/text&gt;
&lt;text x=&#34;614&#34; y=&#34;189&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; ✓&lt;/text&gt;
&lt;text x=&#34;632&#34; y=&#34;218&#34; text-anchor=&#34;start&#34; fill=&#34;rgb(0,0,0)&#34; dominant-baseline=&#34;central&#34;&gt; ✓&lt;/text&gt;
&lt;text x=&#34;380&#34; y=&#34;254&#34; text-anchor=&#34;middle&#34; font-style=&#34;italic&#34; fill=&#34;rgb(0,0,0)&#34; font-size=&#34;80%&#34; dominant-baseline=&#34;central&#34;&gt;(Click to see source)&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
down
box width 3.5in height 0.2in fill 0xc5d8ef \
                       &#34;open my garage with a raspberry pi&#34;
box same fill 0xd9e6f2 with .nw at linewid/4 east of 1st box.sw &#34;achieve accurate timing on a raspberry pi&#34;
box same as 1st box with .nw at linewid/4 east of 2nd box.sw    &#34;understand how to use DMA for gpio sequences&#34;
box same as 2nd box with .nw at linewid/4 east of 3rd box.sw   &#34;“I should document this in a blog post”&#34;
box same as 1st box with .nw at linewid/4 east of 4th box.sw   &#34;“I need Pikchr for diagrams”: make Pikchr work in hugo&#34;
box same as 2nd box with .nw at linewid/4 east of 5th box.sw   &#34;make Pikchr work in hugo&#34;
box same as 1st box with .nw at linewid/4 east of 6th box.sw   &#34;port Pikchr to go&#34;
box same as 2nd box with .nw at linewid/4 east of 7th box.sw   &#34;port the lemon parser to go&#34;
text at 5th box.e  &#34; ✓&#34; ljust
text at 6th box.e  &#34; ✓&#34; ljust
text at 7th box.e  &#34; ✓&#34; ljust
text at 8th box.e  &#34; ✓&#34; ljust
text at last box.s - (0,0.15) &#34;(Click to see source)&#34; italic small
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://pikchr.org&#34;&gt;Pikchr&lt;/a&gt; is a modern version of Brian Kernighan&amp;rsquo;s
&lt;a href=&#34;https://en.wikipedia.org/wiki/PIC_(markup_language)&#34;&gt;PIC markup language&lt;/a&gt;,
created by the folks who make SQLite and Fossil. Like so many things from
Bell Labs, it is extremely powerful, once you invest just a little time
to understand how it works.&lt;/p&gt;
&lt;p&gt;Pikchr is implemented in a single file,
&lt;a href=&#34;https://pikchr.org/home/doc/trunk/doc/build.md&#34;&gt;&lt;code&gt;pikchr.y&lt;/code&gt;&lt;/a&gt;,
processed using the &lt;a href=&#34;https://sqlite.org/src/doc/trunk/doc/lemon.html&#34;&gt;Lemon
Parser&lt;/a&gt; to generate
&lt;code&gt;lemon.c&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I decided to port both the Lemon Parser and Pikchr from C to Go, by
hand.&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;
&lt;p&gt;Go and Pikchr are great! A pure-Go port of Pikchr might be useful to
others.&lt;/p&gt;
&lt;p&gt;Hugo might more readily accept pure-Go additions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sheer bloody-mindedness.&lt;/em&gt; At work we always have to make pragmatic
decisions. The repressed urge to fully shave the yak comes out in my
own time.&lt;/p&gt;
&lt;p&gt;I respect the SQLite folks: their software is an amazing gift to our
community. Think of this as a &lt;a href=&#34;https://apenwarr.ca/log/20211229&#34;&gt;gift&lt;/a&gt;
too.&lt;/p&gt;
&lt;h2 id=&#34;how&#34;&gt;How?&lt;/h2&gt;
&lt;p&gt;By hand. I looked at &lt;a href=&#34;https://pkg.go.dev/modernc.org/ccgo/v3&#34;&gt;ccgo&lt;/a&gt;,
the amazing C-to-Go compiler used to generate &lt;a href=&#34;https://pkg.go.dev/modernc.org/sqlite&#34;&gt;modernc
sqlite&lt;/a&gt;, a pure-Go translation
of sqlite. However, the code it generats to perform its magic is
(necessarily) complicated and ugly, which seems contrary to the spirit
of Pikchr. Nothing for it, but to dive in by hand. It can be almost
meditative:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Translate &lt;code&gt;lemon.c&lt;/code&gt; to Go, but still generate C code&lt;/li&gt;
&lt;li&gt;Find all the bugs until it compiles and generates the exact same C
code&lt;/li&gt;
&lt;li&gt;Translate the parser template, &lt;code&gt;lempar.tpl&lt;/code&gt; to Go, and generate Go
code&lt;/li&gt;
&lt;li&gt;Laboriously find all the bugs&lt;/li&gt;
&lt;li&gt;Translate &lt;code&gt;pikchr.y&lt;/code&gt; from C to Go&lt;/li&gt;
&lt;li&gt;Once again, fix all the bugs until the Go version generates exactly
the same Pikchr output&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In all, it was almost 12,000 lines of code. I started out trying to be
clever, but learned to keep things as similar as possible.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I tried to replace &lt;code&gt;char *&lt;/code&gt; with &lt;code&gt;[]rune&lt;/code&gt; at first, to handle
unicode rather than ascii. But I ended up using &lt;code&gt;[]byte&lt;/code&gt;, and even
zero-terminating the string! To move forward through the input, &lt;code&gt;z += 3&lt;/code&gt; becomes &lt;code&gt;z = z[3:]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;I tried replacing dynamically-sized arrays represented by &lt;code&gt;struct *&lt;/code&gt;,
&lt;code&gt;current_size&lt;/code&gt;, and &lt;code&gt;n&lt;/code&gt; (current index) with just slices. However, it turns
out to be cleaner to keep &lt;code&gt;n&lt;/code&gt; around, because the code will often
reference &lt;code&gt;s[n+1]&lt;/code&gt; or &lt;code&gt;s[n-1]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gopikchr/golemon&#34;&gt;golemon&lt;/a&gt;, the port of lemon to Go&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gopikchr/gopikchr&#34;&gt;gopikchr&lt;/a&gt;, the port of Pikchr to Go&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gopikchr/goldmark-pikchr&#34;&gt;goldmark-pikchr&lt;/a&gt;, a
goldmark plugin to render Pikchr diagrams in markdown&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zellyn/hugo/commit/87bbe9f2140a21e6d2759e7005c9e5a787651832&#34;&gt;hugo commit&lt;/a&gt;,
the tiny change needed to enable Pikchr support in Hugo in my fork&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-next&#34;&gt;What next?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Find the remaining bugs. I&amp;rsquo;m certain I didn&amp;rsquo;t find them all&lt;/li&gt;
&lt;li&gt;Set up github actions to create issues in the golemon and gopikchr
repositories whenever the C versions in Fossil change. Both change
infrequently, so keeping up should be little work&lt;/li&gt;
&lt;li&gt;Possibly, use these techniques to port the SQLite parser to Go, if
&lt;a href=&#34;https://github.com/kyleconroy/sqlc/issues/161#issuecomment-1022541349&#34;&gt;someone else doesn&amp;rsquo;t do it
first&lt;/a&gt;. A
Go SQLite-compatible parser seems more likely to get widely used,
and depended on, and I&amp;rsquo;m not certain I want to be the maintainer of
a &lt;a href=&#34;https://xkcd.com/2347/&#34;&gt;popular&lt;/a&gt; open source package&lt;/li&gt;
&lt;li&gt;Enjoy using Pikchr, and seeing other people use it!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;  &lt;!-- vertical spacer --&gt;&lt;/p&gt;
&lt;div id=&#39;pikchr-1&#39; class=&#39;pikchr&#39; onclick=&#34;toggleHidden(&#39;pikchr-1&#39;)&#34;&gt;
&lt;div class=&#39;pikchr-svg&#39; style=&#39;max-width:292px&#39;&gt;
&lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; viewBox=&#34;0 0 292.32 292.32&#34;&gt;
&lt;circle cx=&#34;146&#34; cy=&#34;146&#34; r=&#34;144&#34;  style=&#34;fill:rgb(255,255,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M38,146Q38,254 146,254&#34;  style=&#34;fill:none;stroke-width:3.24;stroke:rgb(0,0,0);&#34; /&gt;
&lt;path d=&#34;M146,254Q254,254 254,146&#34;  style=&#34;fill:none;stroke-width:3.24;stroke:rgb(0,0,0);&#34; /&gt;
&lt;ellipse cx=&#34;102&#34; cy=&#34;88&#34; rx=&#34;18&#34; ry=&#34;36&#34;  style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;ellipse cx=&#34;189&#34; cy=&#34;88&#34; rx=&#34;18&#34; ry=&#34;36&#34;  style=&#34;fill:rgb(0,0,0);stroke-width:2.16;stroke:rgb(0,0,0);&#34; /&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;pre class=&#39;hidden&#39;&gt;
circle radius 1 fill yellow
arc from -0.75,0 to 0,-0.75 thick
arc same from 0,-0.75 to 0.75,0
ellipse height 0.5 width 0.25 at -0.3,0.4 fill black
ellipse same at 0.3,0.4
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;  &lt;!-- vertical spacer --&gt;&lt;/p&gt;
&lt;h2 id=&#34;comments-reach-me-on-twitter&#34;&gt;Comments? Reach me on Twitter&lt;/h2&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I blogged a few days ago about porting Pikchr and the Lemon Parser to Go, but just now realized linking to a tweet at the end of the post is a satisfactory way to do conversations if your static blog doesn&amp;#39;t have comments!&lt;a href=&#34;https://t.co/aXtDNRMsyC&#34;&gt;https://t.co/aXtDNRMsyC&lt;/a&gt;&lt;/p&gt;&amp;mdash; Zellyn Hunter 💉² 🎉 (@zellyn) &lt;a href=&#34;https://twitter.com/zellyn/status/1488960414595620870?ref_src=twsrc%5Etfw&#34;&gt;February 2, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;script&gt;
  function toggleHidden(id){
    for(var c of document.getElementById(id).children){
      c.classList.toggle(&#39;hidden&#39;);
    }
  }
&lt;/script&gt;</description>
    </item>



    <item>
      <title>Project Todos</title>
      <link>https://zellyn.com/2018/03/project-todos/</link>
      <pubDate>Sat, 31 Mar 2018 22:50:18 -0400</pubDate>

      <guid>https://zellyn.com/2018/03/project-todos/</guid>
      <description>&lt;p&gt;In an effort to organize the many side-projects I would &lt;em&gt;like&lt;/em&gt; to do
— at least in my mind — but probably never will, I created
a &lt;a href=&#34;https://zellyn.com/page/projects/todo/&#34;&gt;Projects: TODO&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve never collaborated much on side projects. If something strikes
your fancy, I would &lt;em&gt;love&lt;/em&gt; to work together.&lt;/p&gt;
</description>
    </item>



    <item>
      <title>New new site</title>
      <link>https://zellyn.com/2016/04/new-new-site/</link>
      <pubDate>Sun, 03 Apr 2016 16:57:38 -0400</pubDate>

      <guid>https://zellyn.com/2016/04/new-new-site/</guid>
      <description>&lt;p&gt;I just migrated this site from &lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt; to
&lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Expect problems (and hopefully more
frequent updates).&lt;/p&gt;
</description>
    </item>



    <item>
      <title>Continued fractions</title>
      <link>https://zellyn.com/2016/04/continued-fractions/</link>
      <pubDate>Sun, 03 Apr 2016 15:30:06 -0400</pubDate>

      <guid>https://zellyn.com/2016/04/continued-fractions/</guid>
      <description>&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[26 + \frac{1}{5 + \frac{1}{12 + \frac{1}{12 + \frac{1}{25 + \frac{1}{14 + \cdots}}}}}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Last night I lay thinking of
&lt;a href=&#34;https://en.wikipedia.org/wiki/Continued_fraction&#34;&gt;Continued Fractions&lt;/a&gt;,
trying to understand not just the notation, but what they mean.&lt;/p&gt;
&lt;p&gt;Trying to pull apart and unwind smaller and smaller parts of these
recurrent shapes gave way, as I fell asleep, to the same kind of
recursive unwinding, but of my own past.&lt;/p&gt;
&lt;p&gt;I dreamed all night of scattered childhood memories. At one point,
remembering a song – or perhaps just the act of singing – I was
pierced with a flash of a long-forgotten feeling: that all is right
with the world, that Mum and Dad are in charge, that I am safe.&lt;/p&gt;
&lt;p&gt;It’s amazing how profoundly we lose that feeling.&lt;/p&gt;
</description>
    </item>



    <item>
      <title>New Site</title>
      <link>https://zellyn.com/2016/04/new-site/</link>
      <pubDate>Sun, 03 Apr 2016 15:30:00 -0400</pubDate>

      <guid>https://zellyn.com/2016/04/new-site/</guid>
      <description>&lt;p&gt;Welcome to my new site. I’m just trying to get everything working:
expect both style and substance later.&lt;/p&gt;
&lt;p&gt;For now, my &lt;a href=&#34;http://zellyn.blogspot.com/&#34;&gt;old site&lt;/a&gt; is probably more
interesting.&lt;/p&gt;
</description>
    </item>








  </channel>
</rss>
